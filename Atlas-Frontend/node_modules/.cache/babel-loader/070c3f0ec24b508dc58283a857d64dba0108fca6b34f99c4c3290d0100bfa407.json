{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddSampleDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // for navigation\nimport { addSampleDetails } from \"../API/SampleApi\"; // Import the API function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSampleDetails = () => {\n  _s();\n  const history = useHistory(); // Use to navigate to the next page with RSN\n  const [formData, setFormData] = useState({\n    articleName: \"\",\n    designFileNo: \"\",\n    seriesArticleFileNo: \"\",\n    articleType: \"\",\n    gender: \"\",\n    machineSpeed: \"\",\n    designer: \"\",\n    grapher: \"\",\n    master: \"\",\n    sampleStatus: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [id]: value\n    }));\n  };\n  const handleMachineSpeedChange = e => {\n    const value = e.target.value;\n    if (!isNaN(value)) {\n      setFormData(prevData => ({\n        ...prevData,\n        machineSpeed: value\n      }));\n    }\n  };\n  const validateForm = () => {\n    const {\n      articleName,\n      designFileNo,\n      seriesArticleFileNo,\n      articleType,\n      gender,\n      machineSpeed,\n      designer,\n      grapher,\n      master,\n      sampleStatus\n    } = formData;\n    return articleName && designFileNo && seriesArticleFileNo && articleType && gender && machineSpeed && designer && grapher && master && sampleStatus;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      setMessage(\"All fields are required.\");\n      return;\n    }\n    const {\n      articleName,\n      designFileNo,\n      seriesArticleFileNo,\n      articleType,\n      gender,\n      machineSpeed,\n      designer,\n      grapher,\n      master,\n      sampleStatus\n    } = formData;\n    const data = {\n      articleName,\n      designFileNo,\n      seriesArticleFileNo,\n      articleType,\n      gender,\n      machineSpeed,\n      designer,\n      grapher,\n      master,\n      sampleStatus\n    };\n    try {\n      setLoading(true);\n      const result = await addSampleDetails(data);\n      setMessage(result.message || \"Sample details added successfully.\");\n      if (result.success && result.RSN) {\n        // Pass the RSN to the next page (e.g., KnittingDetails)\n        history.push({\n          pathname: \"/knitting-details\",\n          // Target route\n          state: {\n            RSN: result.RSN\n          } // Pass RSN to the target component\n        });\n      }\n    } catch (error) {\n      setMessage(error.message || \"An error occurred while adding the sample details.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Sample Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key.replace(/([A-Z])/g, \" $1\").toUpperCase(), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: key === \"machineSpeed\" ? \"number\" : \"text\",\n          value: formData[key],\n          onChange: key === \"machineSpeed\" ? handleMachineSpeedChange : handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Adding...\" : \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSampleDetails, \"fXI/8pO2K2CmwYmzNCcwBX7+VKA=\", false, function () {\n  return [useHistory];\n});\n_c = AddSampleDetails;\nexport default AddSampleDetails;\nvar _c;\n$RefreshReg$(_c, \"AddSampleDetails\");","map":{"version":3,"names":["React","useState","useHistory","addSampleDetails","jsxDEV","_jsxDEV","AddSampleDetails","_s","history","formData","setFormData","articleName","designFileNo","seriesArticleFileNo","articleType","gender","machineSpeed","designer","grapher","master","sampleStatus","message","setMessage","loading","setLoading","handleChange","e","id","value","target","prevData","handleMachineSpeedChange","isNaN","validateForm","handleSubmit","preventDefault","data","result","success","RSN","push","pathname","state","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","replace","toUpperCase","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddSampleDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"; // for navigation\r\nimport { addSampleDetails } from \"../API/SampleApi\"; // Import the API function\r\n\r\nconst AddSampleDetails = () => {\r\n  const history = useHistory(); // Use to navigate to the next page with RSN\r\n  const [formData, setFormData] = useState({\r\n    articleName: \"\",\r\n    designFileNo: \"\",\r\n    seriesArticleFileNo: \"\",\r\n    articleType: \"\",\r\n    gender: \"\",\r\n    machineSpeed: \"\",\r\n    designer: \"\",\r\n    grapher: \"\",\r\n    master: \"\",\r\n    sampleStatus: \"\",\r\n  });\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [id]: value,\r\n    }));\r\n  };\r\n\r\n  const handleMachineSpeedChange = (e) => {\r\n    const value = e.target.value;\r\n    if (!isNaN(value)) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        machineSpeed: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const {\r\n      articleName,\r\n      designFileNo,\r\n      seriesArticleFileNo,\r\n      articleType,\r\n      gender,\r\n      machineSpeed,\r\n      designer,\r\n      grapher,\r\n      master,\r\n      sampleStatus,\r\n    } = formData;\r\n\r\n    return (\r\n      articleName &&\r\n      designFileNo &&\r\n      seriesArticleFileNo &&\r\n      articleType &&\r\n      gender &&\r\n      machineSpeed &&\r\n      designer &&\r\n      grapher &&\r\n      master &&\r\n      sampleStatus\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    const {\r\n      articleName,\r\n      designFileNo,\r\n      seriesArticleFileNo,\r\n      articleType,\r\n      gender,\r\n      machineSpeed,\r\n      designer,\r\n      grapher,\r\n      master,\r\n      sampleStatus,\r\n    } = formData;\r\n\r\n    const data = {\r\n      articleName,\r\n      designFileNo,\r\n      seriesArticleFileNo,\r\n      articleType,\r\n      gender,\r\n      machineSpeed,\r\n      designer,\r\n      grapher,\r\n      master,\r\n      sampleStatus,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await addSampleDetails(data);\r\n      setMessage(result.message || \"Sample details added successfully.\");\r\n\r\n      if (result.success && result.RSN) {\r\n        // Pass the RSN to the next page (e.g., KnittingDetails)\r\n        history.push({\r\n          pathname: \"/knitting-details\", // Target route\r\n          state: { RSN: result.RSN }, // Pass RSN to the target component\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setMessage(\r\n        error.message || \"An error occurred while adding the sample details.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Sample Details</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {Object.keys(formData).map((key) => (\r\n          <div key={key}>\r\n            <label htmlFor={key}>\r\n              {key.replace(/([A-Z])/g, \" $1\").toUpperCase()}:\r\n            </label>\r\n            <input\r\n              id={key}\r\n              type={key === \"machineSpeed\" ? \"number\" : \"text\"}\r\n              value={formData[key]}\r\n              onChange={\r\n                key === \"machineSpeed\" ? handleMachineSpeedChange : handleChange\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Adding...\" : \"Add New\"}\r\n        </button>\r\n      </form>\r\n      {loading && <p>Loading...</p>}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSampleDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}