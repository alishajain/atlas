{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\SampleDetailsRSN.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getSampleDetailsByRSN } from \"../API/SampleApi\";\nimport UpdateSampleDetails from \"./UpdateSampleDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleDetailsByRSN = ({\n  RSN\n}) => {\n  _s();\n  const [sampleDetails, setSampleDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Fetch data when RSN changes\n  useEffect(() => {\n    if (RSN) {\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const response = await getSampleDetailsByRSN(RSN);\n          setSampleDetails(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch sample details.\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }\n  }, [RSN]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sampleDetails\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SampleDetailsByRSN, \"emWiR9W6ZSKHG/1HDH7JYJWjogk=\");\n_c = SampleDetailsByRSN;\nexport default SampleDetailsByRSN;\nvar _c;\n$RefreshReg$(_c, \"SampleDetailsByRSN\");","map":{"version":3,"names":["React","useState","useEffect","getSampleDetailsByRSN","UpdateSampleDetails","jsxDEV","_jsxDEV","SampleDetailsByRSN","RSN","_s","sampleDetails","setSampleDetails","loading","setLoading","error","setError","fetchData","response","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/SampleDetailsRSN.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getSampleDetailsByRSN } from \"../API/SampleApi\";\r\nimport UpdateSampleDetails from \"./UpdateSampleDetails\";\r\n\r\nconst SampleDetailsByRSN = ({ RSN }) => {\r\n  const [sampleDetails, setSampleDetails] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch data when RSN changes\r\n  useEffect(() => {\r\n    if (RSN) {\r\n      const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n          const response = await getSampleDetailsByRSN(RSN);\r\n          setSampleDetails(response.data);\r\n        } catch (err) {\r\n          setError(\"Failed to fetch sample details.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [RSN]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      {/* {sampleDetails && (\r\n        <UpdateSampleDetails\r\n          RSN={RSN}\r\n          initialData={sampleDetails}\r\n        />\r\n      )} */}\r\n      {sampleDetails}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SampleDetailsByRSN;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,kBAAkB;AACxD,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,IAAIM,GAAG,EAAE;MACP,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5BH,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UACF,MAAMI,QAAQ,GAAG,MAAMd,qBAAqB,CAACK,GAAG,CAAC;UACjDG,gBAAgB,CAACM,QAAQ,CAACC,IAAI,CAAC;QACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZJ,QAAQ,CAAC,iCAAiC,CAAC;QAC7C,CAAC,SAAS;UACRF,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MACDG,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAAc,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIV,KAAK,EAAE,oBAAOR,OAAA;IAAGmB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,EAAEN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEzD,oBACElB,OAAA;IAAAc,QAAA,EAOGV;EAAa;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACf,EAAA,CArCIF,kBAAkB;AAAAoB,EAAA,GAAlBpB,kBAAkB;AAuCxB,eAAeA,kBAAkB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}