{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\SampleList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { sampleList } from \"../API/SampleApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleList = () => {\n  _s();\n  const [samples, setSamples] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imageData, setImageData] = useState(null);\n  useEffect(() => {\n    const fetchSampleList = async () => {\n      try {\n        const response = await sampleList();\n        const updatedSamples = response.data.map(sample => {\n          return {\n            ...sample,\n            imagePath: sample.ImageData ? sample.ImageData.replace(/\\\\/g, \"/\") : null\n          };\n        });\n        setSamples(response.data);\n      } catch (err) {\n        setError(\"Failed to load sample list\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSampleList();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  console.log(samples);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sample List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), samples.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RSN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ArticleNo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Sample Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Knitting Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: samples.map(sample => {\n          var _sample$Total, _sample$Total2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: sample.RSN\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sample.ArticleNo || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_sample$Total = sample.Total) === null || _sample$Total === void 0 ? void 0 : _sample$Total.Weight) || \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_sample$Total2 = sample.Total) === null || _sample$Total2 === void 0 ? void 0 : _sample$Total2.Time) || \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sample.ImageData ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/${imageData}`,\n                alt: \"Sample Image\",\n                style: {\n                  width: \"100px\",\n                  height: \"auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this) : \"No image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, sample.RSN, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No samples found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SampleList, \"UuB76U+SV7DxTKKgrUu7xko1d/0=\");\n_c = SampleList;\nexport default SampleList;\nvar _c;\n$RefreshReg$(_c, \"SampleList\");","map":{"version":3,"names":["React","useEffect","useState","sampleList","jsxDEV","_jsxDEV","SampleList","_s","samples","setSamples","loading","setLoading","error","setError","imageData","setImageData","fetchSampleList","response","updatedSamples","data","map","sample","imagePath","ImageData","replace","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","console","log","length","border","cellPadding","width","marginTop","_sample$Total","_sample$Total2","RSN","ArticleNo","Total","Weight","Time","src","alt","height","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/SampleList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { sampleList } from \"../API/SampleApi\";\r\n\r\nconst SampleList = () => {\r\n  const [samples, setSamples] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [imageData, setImageData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSampleList = async () => {\r\n      try {\r\n        const response = await sampleList();\r\n\r\n        const updatedSamples = response.data.map((sample) => {\r\n          return {\r\n            ...sample,\r\n            imagePath: sample.ImageData\r\n              ? sample.ImageData.replace(/\\\\/g, \"/\")\r\n              : null,\r\n          };\r\n        });\r\n\r\n        setSamples(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to load sample list\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSampleList();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n\r\n  console.log(samples);\r\n  return (\r\n    <div>\r\n      <h2>Sample List</h2>\r\n      {samples.length > 0 ? (\r\n        <table\r\n          border=\"1\"\r\n          cellPadding=\"10\"\r\n          style={{ width: \"100%\", marginTop: \"20px\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>RSN</th>\r\n              <th>ArticleNo</th>\r\n              <th>Total Sample Weight</th>\r\n              <th>Total Knitting Time</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {samples.map((sample) => (\r\n              <tr key={sample.RSN}>\r\n                <td>{sample.RSN}</td>\r\n                <td>{sample.ArticleNo || \"N/A\"}</td>\r\n                <td>{sample.Total?.Weight || \"0\"}</td>\r\n                <td>{sample.Total?.Time || \"0\"}</td>\r\n                <td>\r\n                  {sample.ImageData ? (\r\n                    <img\r\n                      src={`http://localhost:5000/${imageData}`}\r\n                      alt=\"Sample Image\"\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  ) : (\r\n                    \"No image\"\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No samples found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SampleList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}