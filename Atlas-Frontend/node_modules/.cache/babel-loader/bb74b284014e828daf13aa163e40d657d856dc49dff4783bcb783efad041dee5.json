{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Create a new color matching entry\nconst addColorMatching = async colorData => {\n  try {\n    const response = await axios.post(`${API_URL}/add-color-matching`, colorData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating color matching:\", error.response ? error.response.data : error.message);\n    throw new Error(`Error during API call: ${error.response ? error.response.data : error.message}`);\n  }\n};\n\n// Get all color matching entries\nconst getAllColorMatching = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/color-matching`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all color matching entries:\", error);\n    throw error;\n  }\n};\n\n// Get color matching by RSN\nconst getColorMatchingByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Update color matching entry by RSN\nconst updateColorMatching = async (RSN, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/update-color-matching/${RSN}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Delete color matching entry by RSN\nconst deleteColorMatching = async RSN => {\n  try {\n    const response = await axios.delete(`${API_URL}/delete-color-matching/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Get ColorId by RSN, MatchingName, and Panel\nconst getColorId = async (RSN, MatchingName, Panel) => {\n  try {\n    const response = await axios.get(`${API_URL}/get-colorId/${RSN}/${MatchingName}/${Panel}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color ID for RSN ${RSN}, MatchingName ${MatchingName}, Panel ${Panel}:`, error);\n    throw error;\n  }\n};\n\n// Get Panels by RSN\nconst getPanel = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/color-panel/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color ID for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Get MatchingName by RSN\nconst getMatchingNameByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/matching-name/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching matching name for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Get ColorIds by RSN and MatchingName\nconst getColorIds = async (RSN, MatchingName) => {\n  try {\n    const response = await axios.get(`${API_URL}/get-colorIds/${RSN}/${MatchingName}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color IDs for RSN ${RSN} and MatchingName ${MatchingName}:`, error);\n    throw error;\n  }\n};\nexport { addColorMatching, getAllColorMatching, getColorMatchingByRSN, updateColorMatching, deleteColorMatching, getColorId, getPanel, getMatchingNameByRSN, getColorIds };","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","addColorMatching","colorData","response","post","headers","data","error","console","message","Error","getAllColorMatching","get","getColorMatchingByRSN","RSN","updateColorMatching","updatedData","put","deleteColorMatching","delete","getColorId","MatchingName","Panel","getPanel","getMatchingNameByRSN","getColorIds"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Create a new color matching entry\r\nconst addColorMatching = async (colorData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/add-color-matching`,\r\n      colorData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error creating color matching:\",\r\n      error.response ? error.response.data : error.message\r\n    );\r\n\r\n    throw new Error(\r\n      `Error during API call: ${\r\n        error.response ? error.response.data : error.message\r\n      }`\r\n    );\r\n  }\r\n};\r\n\r\n// Get all color matching entries\r\nconst getAllColorMatching = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color matching entries:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get color matching by RSN\r\nconst getColorMatchingByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color matching entry by RSN\r\nconst updateColorMatching = async (RSN, updatedData) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/update-color-matching/${RSN}`,\r\n      updatedData\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color matching entry by RSN\r\nconst deleteColorMatching = async (RSN) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_URL}/delete-color-matching/${RSN}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get ColorId by RSN, MatchingName, and Panel\r\nconst getColorId = async (RSN, MatchingName, Panel) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/get-colorId/${RSN}/${MatchingName}/${Panel}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching color ID for RSN ${RSN}, MatchingName ${MatchingName}, Panel ${Panel}:`,\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get Panels by RSN\r\nconst getPanel = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/color-panel/${RSN}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching color ID for RSN ${RSN}:`,\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get MatchingName by RSN\r\nconst getMatchingNameByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/matching-name/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching matching name for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get ColorIds by RSN and MatchingName\r\nconst getColorIds = async (RSN, MatchingName) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/get-colorIds/${RSN}/${MatchingName}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching color IDs for RSN ${RSN} and MatchingName ${MatchingName}:`,\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorMatching,\r\n  getAllColorMatching,\r\n  getColorMatchingByRSN,\r\n  updateColorMatching,\r\n  deleteColorMatching,\r\n  getColorId,\r\n  getPanel,\r\n  getMatchingNameByRSN,\r\n  getColorIds,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}