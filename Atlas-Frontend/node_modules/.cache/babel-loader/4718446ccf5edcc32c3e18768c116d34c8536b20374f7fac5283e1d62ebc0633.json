{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddKnittingDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { addKnittingDetails, getMachineNos } from \"../API/SampleApi\"; // Assuming Api.js is in the same directory\nimport ColorMatchingForm from \"./ColorMatchingForm\"; // Import ColorMatchingForm component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddKnittingDetailsForm = () => {\n  _s();\n  var _location$state, _location$state2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const selectedStates = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedFields) || {}; // Access selected states (checkbox selections)\n  const RSN = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.RSN) || \"\"; // Access RSN\n\n  const [formData, setFormData] = useState({\n    RSN: RSN,\n    Size: \"\",\n    FrontRight: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    FrontLeft: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    FrontComplete: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BackRight: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BackLeft: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BackComplete: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    SleeveRight: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    SleeveLeft: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BothSleeves: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Tape: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Collar: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Kharcha1: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Kharcha2: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Kharcha3: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Total: {\n      Weight: 0,\n      Time: 0\n    }\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [machineNos, setMachineNos] = useState([]); // State to store machine numbers\n  const [showColorMatchingForm, setShowColorMatchingForm] = useState(false); // State to manage ColorMatchingForm visibility\n\n  useEffect(() => {\n    // Fetch machine numbers from the API\n    const fetchMachineNos = async () => {\n      try {\n        const response = await getMachineNos();\n        setMachineNos(response.data); // Set the machine numbers to state\n      } catch (error) {\n        setError(\"Failed to fetch machine numbers\");\n      }\n    };\n    fetchMachineNos();\n  }, []); // Only run once on component mount\n\n  useEffect(() => {\n    // Initialize formData based on selectedStates\n    setFormData(prevData => {\n      const newFormData = {\n        ...prevData\n      };\n      Object.keys(newFormData).forEach(key => {\n        if (selectedStates[key]) {\n          newFormData[key] = {\n            Weight: \"\",\n            Time: \"\",\n            MachineNo: \"\" // No longer handling MachineType\n          }; // Initialize with new fields\n        }\n      });\n      return newFormData;\n    });\n  }, [selectedStates]); // Re-run when selectedStates change\n\n  // Function to handle change in any input field (weight, time, machine model)\n  const handleChange = (e, field, type) => {\n    const {\n      value\n    } = e.target;\n    setFormData(prevData => {\n      const newFormData = {\n        ...prevData\n      };\n      if (!newFormData[field]) {\n        newFormData[field] = {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\" // No longer handling MachineType\n        }; // Initialize if undefined\n      }\n\n      // Set value to 0 if it's empty for weight/time or empty string for machine fields\n      if (type === \"Weight\" || type === \"Time\") {\n        newFormData[field][type] = value === \"\" ? 0 : value; // Set to 0 if empty\n      } else {\n        newFormData[field][type] = value === \"\" ? \"\" : value; // Set to empty string if empty\n      }\n\n      // Recalculate total weight and total time\n      newFormData.Total = calculateTotal(newFormData);\n      return newFormData;\n    });\n  };\n\n  // Function to calculate the total weight and total time\n  const calculateTotal = data => {\n    let totalWeight = 0;\n    let totalTime = 0;\n\n    // Iterate over the fields that contain weight and time\n    Object.keys(data).forEach(key => {\n      if (key !== \"RSN\" && key !== \"Size\" && key !== \"Total\") {\n        const {\n          Weight,\n          Time\n        } = data[key];\n        totalWeight += parseFloat(Weight) || 0;\n        totalTime += parseFloat(Time) || 0;\n      }\n    });\n    return {\n      Weight: totalWeight,\n      Time: totalTime\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Ensure all fields have weight, time, and machine number\n    const updatedFormData = {\n      ...formData\n    };\n    Object.keys(updatedFormData).forEach(field => {\n      if (typeof updatedFormData[field] === \"object\") {\n        const {\n          Weight,\n          Time,\n          MachineNo\n        } = updatedFormData[field];\n\n        // Set to 0 if Weight or Time is empty\n        if (Weight === \"\") updatedFormData[field].Weight = 0;\n        if (Time === \"\") updatedFormData[field].Time = 0;\n        if (MachineNo === \"\") updatedFormData[field].MachineNo = \"\"; // No longer handling MachineType\n      }\n    });\n\n    // Start loading indicator\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    try {\n      // Send the data to the backend via the API function\n      const response = await addKnittingDetails(updatedFormData);\n\n      // On success, display success message and clear form\n      setSuccess(\"Knitting details added successfully!\");\n\n      // Show ColorMatchingForm upon successful submission\n      navigate(`/add-color-details/${RSN}`, {\n        state: {\n          RSN,\n          selectedFields\n        }\n      });\n      setFormData({\n        RSN: \"\",\n        Size: \"\",\n        FrontRight: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        FrontLeft: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        FrontComplete: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        BackRight: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        BackLeft: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        BackComplete: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        SleeveRight: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        SleeveLeft: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        BothSleeves: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        Tape: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        Collar: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        Kharcha1: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        Kharcha2: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        Kharcha3: {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        },\n        Total: {\n          Weight: 0,\n          Time: 0\n        }\n      });\n    } catch (error) {\n      // Handle errors if the API request fails\n      setError(error.message || \"An error occurred while adding knitting details\");\n    } finally {\n      // End loading indicator\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!showColorMatchingForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Knitting Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Machine No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"RSN:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"RSN\",\n                  value: formData.RSN,\n                  onChange: e => setFormData({\n                    ...formData,\n                    RSN: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"Size\",\n                  value: formData.Size,\n                  onChange: e => setFormData({\n                    ...formData,\n                    Size: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), Object.keys(selectedStates).filter(field => selectedStates[field]) // Filter only selected fields\n            .map(field => {\n              var _formData$field, _formData$field2, _formData$field3;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_formData$field = formData[field]) === null || _formData$field === void 0 ? void 0 : _formData$field.Weight) || \"\",\n                    onChange: e => handleChange(e, field, \"Weight\"),\n                    placeholder: \"Weight\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_formData$field2 = formData[field]) === null || _formData$field2 === void 0 ? void 0 : _formData$field2.Time) || \"\",\n                    onChange: e => handleChange(e, field, \"Time\"),\n                    placeholder: \"Time\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_formData$field3 = formData[field]) === null || _formData$field3 === void 0 ? void 0 : _formData$field3.MachineNo) || \"\",\n                    onChange: e => handleChange(e, field, \"MachineNo\"),\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Machine No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 27\n                    }, this), machineNos.map(machineNo => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: machineNo,\n                      children: machineNo\n                    }, machineNo, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)]\n              }, field, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formData.Total.Weight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formData.Total.Time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Submitting...\" : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), showColorMatchingForm && /*#__PURE__*/_jsxDEV(ColorMatchingForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(AddKnittingDetailsForm, \"1kGS+/8oK9fwgy/rTpY9QzILRH0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddKnittingDetailsForm;\nexport default AddKnittingDetailsForm;\nvar _c;\n$RefreshReg$(_c, \"AddKnittingDetailsForm\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","addKnittingDetails","getMachineNos","ColorMatchingForm","jsxDEV","_jsxDEV","AddKnittingDetailsForm","_s","_location$state","_location$state2","navigate","location","selectedStates","state","selectedFields","RSN","formData","setFormData","Size","FrontRight","Weight","Time","MachineNo","FrontLeft","FrontComplete","BackRight","BackLeft","BackComplete","SleeveRight","SleeveLeft","BothSleeves","Tape","Collar","Kharcha1","Kharcha2","Kharcha3","Total","loading","setLoading","error","setError","success","setSuccess","machineNos","setMachineNos","showColorMatchingForm","setShowColorMatchingForm","fetchMachineNos","response","data","prevData","newFormData","Object","keys","forEach","key","handleChange","e","field","type","value","target","calculateTotal","totalWeight","totalTime","parseFloat","handleSubmit","preventDefault","updatedFormData","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","border","colSpan","name","onChange","required","filter","map","_formData$field","_formData$field2","_formData$field3","placeholder","machineNo","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddKnittingDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { addKnittingDetails, getMachineNos } from \"../API/SampleApi\"; // Assuming Api.js is in the same directory\r\nimport ColorMatchingForm from \"./ColorMatchingForm\"; // Import ColorMatchingForm component\r\n\r\nconst AddKnittingDetailsForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const selectedStates = location.state?.selectedFields || {}; // Access selected states (checkbox selections)\r\n  const RSN = location.state?.RSN || \"\"; // Access RSN\r\n\r\n  const [formData, setFormData] = useState({\r\n    RSN: RSN,\r\n    Size: \"\",\r\n    FrontRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    FrontLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    FrontComplete: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    BackRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    BackLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    BackComplete: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    SleeveRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    SleeveLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    BothSleeves: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    Tape: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    Collar: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    Kharcha1: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    Kharcha2: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    Kharcha3: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    Total: { Weight: 0, Time: 0 },\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [machineNos, setMachineNos] = useState([]); // State to store machine numbers\r\n  const [showColorMatchingForm, setShowColorMatchingForm] = useState(false); // State to manage ColorMatchingForm visibility\r\n\r\n  useEffect(() => {\r\n    // Fetch machine numbers from the API\r\n    const fetchMachineNos = async () => {\r\n      try {\r\n        const response = await getMachineNos();\r\n        setMachineNos(response.data); // Set the machine numbers to state\r\n      } catch (error) {\r\n        setError(\"Failed to fetch machine numbers\");\r\n      }\r\n    };\r\n\r\n    fetchMachineNos();\r\n  }, []); // Only run once on component mount\r\n\r\n  useEffect(() => {\r\n    // Initialize formData based on selectedStates\r\n    setFormData((prevData) => {\r\n      const newFormData = { ...prevData };\r\n      Object.keys(newFormData).forEach((key) => {\r\n        if (selectedStates[key]) {\r\n          newFormData[key] = {\r\n            Weight: \"\",\r\n            Time: \"\",\r\n            MachineNo: \"\", // No longer handling MachineType\r\n          }; // Initialize with new fields\r\n        }\r\n      });\r\n      return newFormData;\r\n    });\r\n  }, [selectedStates]); // Re-run when selectedStates change\r\n\r\n  // Function to handle change in any input field (weight, time, machine model)\r\n  const handleChange = (e, field, type) => {\r\n    const { value } = e.target;\r\n    setFormData((prevData) => {\r\n      const newFormData = { ...prevData };\r\n      if (!newFormData[field]) {\r\n        newFormData[field] = {\r\n          Weight: \"\",\r\n          Time: \"\",\r\n          MachineNo: \"\", // No longer handling MachineType\r\n        }; // Initialize if undefined\r\n      }\r\n\r\n      // Set value to 0 if it's empty for weight/time or empty string for machine fields\r\n      if (type === \"Weight\" || type === \"Time\") {\r\n        newFormData[field][type] = value === \"\" ? 0 : value; // Set to 0 if empty\r\n      } else {\r\n        newFormData[field][type] = value === \"\" ? \"\" : value; // Set to empty string if empty\r\n      }\r\n\r\n      // Recalculate total weight and total time\r\n      newFormData.Total = calculateTotal(newFormData);\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  // Function to calculate the total weight and total time\r\n  const calculateTotal = (data) => {\r\n    let totalWeight = 0;\r\n    let totalTime = 0;\r\n\r\n    // Iterate over the fields that contain weight and time\r\n    Object.keys(data).forEach((key) => {\r\n      if (key !== \"RSN\" && key !== \"Size\" && key !== \"Total\") {\r\n        const { Weight, Time } = data[key];\r\n        totalWeight += parseFloat(Weight) || 0;\r\n        totalTime += parseFloat(Time) || 0;\r\n      }\r\n    });\r\n\r\n    return { Weight: totalWeight, Time: totalTime };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure all fields have weight, time, and machine number\r\n    const updatedFormData = { ...formData };\r\n\r\n    Object.keys(updatedFormData).forEach((field) => {\r\n      if (typeof updatedFormData[field] === \"object\") {\r\n        const { Weight, Time, MachineNo } = updatedFormData[field];\r\n\r\n        // Set to 0 if Weight or Time is empty\r\n        if (Weight === \"\") updatedFormData[field].Weight = 0;\r\n        if (Time === \"\") updatedFormData[field].Time = 0;\r\n        if (MachineNo === \"\") updatedFormData[field].MachineNo = \"\"; // No longer handling MachineType\r\n      }\r\n    });\r\n\r\n    // Start loading indicator\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    try {\r\n      // Send the data to the backend via the API function\r\n      const response = await addKnittingDetails(updatedFormData);\r\n\r\n      // On success, display success message and clear form\r\n      setSuccess(\"Knitting details added successfully!\");\r\n\r\n      // Show ColorMatchingForm upon successful submission\r\n      navigate(`/add-color-details/${RSN}`, {\r\n        state: { RSN, selectedFields }, \r\n      });\r\n\r\n      setFormData({\r\n        RSN: \"\",\r\n        Size: \"\",\r\n        FrontRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        FrontLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        FrontComplete: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        BackRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        BackLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        BackComplete: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        SleeveRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        SleeveLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        BothSleeves: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        Tape: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        Collar: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        Kharcha1: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        Kharcha2: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        Kharcha3: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n        Total: { Weight: 0, Time: 0 },\r\n      });\r\n    } catch (error) {\r\n      // Handle errors if the API request fails\r\n      setError(\r\n        error.message || \"An error occurred while adding knitting details\"\r\n      );\r\n    } finally {\r\n      // End loading indicator\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!showColorMatchingForm && (\r\n        <div>\r\n          <h1>Add Knitting Details</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <table border=\"1\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Field</th>\r\n                  <th>Weight</th>\r\n                  <th>Time</th>\r\n                  <th>Machine No</th> {/* Removed 'Machine Type' */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* Static Fields (RSN and Size) */}\r\n                <tr>\r\n                  <td>RSN:</td>\r\n                  <td colSpan=\"3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"RSN\"\r\n                      value={formData.RSN}\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, RSN: e.target.value })\r\n                      }\r\n                      required\r\n                    />\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Size:</td>\r\n                  <td colSpan=\"3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"Size\"\r\n                      value={formData.Size}\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, Size: e.target.value })\r\n                      }\r\n                      required\r\n                    />\r\n                  </td>\r\n                </tr>\r\n\r\n                {/* Dynamic Fields Based on Selected States */}\r\n                {Object.keys(selectedStates)\r\n                  .filter((field) => selectedStates[field]) // Filter only selected fields\r\n                  .map((field) => (\r\n                    <tr key={field}>\r\n                      <td>{field}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={formData[field]?.Weight || \"\"}\r\n                          onChange={(e) => handleChange(e, field, \"Weight\")}\r\n                          placeholder=\"Weight\"\r\n                          required\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={formData[field]?.Time || \"\"}\r\n                          onChange={(e) => handleChange(e, field, \"Time\")}\r\n                          placeholder=\"Time\"\r\n                          required\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          value={formData[field]?.MachineNo || \"\"}\r\n                          onChange={(e) => handleChange(e, field, \"MachineNo\")}\r\n                          required\r\n                        >\r\n                          <option value=\"\">Select Machine No</option>\r\n                          {machineNos.map((machineNo) => (\r\n                            <option key={machineNo} value={machineNo}>\r\n                              {machineNo}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n\r\n                {/* Total Row */}\r\n                <tr>\r\n                  <td>Total</td>\r\n                  <td>{formData.Total.Weight}</td>\r\n                  <td>{formData.Total.Time}</td>\r\n                  <td></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? \"Submitting...\" : \"Submit\"}\r\n            </button>\r\n          </form>\r\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n          {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n        </div>\r\n      )}\r\n\r\n      {showColorMatchingForm && <ColorMatchingForm />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddKnittingDetailsForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}