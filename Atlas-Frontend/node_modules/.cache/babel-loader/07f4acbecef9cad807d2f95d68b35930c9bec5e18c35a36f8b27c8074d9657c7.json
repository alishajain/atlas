{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\n\n// Add a new color detail\nconst addColorDetail = async colorData => {\n  try {\n    const response = await axios.post(`${API_URL}/add-color-detail`, colorData, {\n      headers: {\n        'Content-Type': 'application/json' // Ensure correct header\n      }\n    });\n    return response.data;\n  } catch (error) {\n    // Check if the error is due to a response (e.g., status 400)\n    if (error.response) {\n      console.error(\"Response error:\", error.response.data);\n      throw new Error(`Error: ${error.response.status} - ${error.response.data.message}`);\n    }\n\n    // Check if the error was a network error (no response)\n    if (error.request) {\n      console.error(\"Request error:\", error.request);\n      throw new Error(\"No response received from the server.\");\n    }\n\n    // For any other errors\n    console.error(\"Error message:\", error.message);\n    throw error;\n  }\n};\n\n// Get all color details\nconst getAllColorDetails = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/color-details`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all color details:\", error);\n    throw error;\n  }\n};\n\n// Get a specific color detail by ColorId\nconst getColorDetailByColorId = async ColorId => {\n  try {\n    const response = await axios.get(`${API_URL}/get-color-details/${ColorId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color detail for ColorId ${ColorId}:`, error);\n    throw error;\n  }\n};\n\n// Update color detail by ColorId\nconst updateColorDetail = async (ColorId, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/update-color-detail/${ColorId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating color detail for ColorId ${ColorId}:`, error);\n    throw error;\n  }\n};\n\n// Delete color detail by ColorId\nconst deleteColorDetail = async ColorId => {\n  try {\n    const response = await axios.delete(`${API_URL}/delete-color-detail/${ColorId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting color detail for ColorId ${ColorId}:`, error);\n    throw error;\n  }\n};\nexport { addColorDetail, getAllColorDetails, getColorDetailByColorId, updateColorDetail, deleteColorDetail };","map":{"version":3,"names":["axios","API_URL","addColorDetail","colorData","response","post","headers","data","error","console","Error","status","message","request","getAllColorDetails","get","getColorDetailByColorId","ColorId","updateColorDetail","updatedData","put","deleteColorDetail","delete"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorDetailApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Add a new color detail\r\nconst addColorDetail = async (colorData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add-color-detail`, colorData, {\r\n      headers: {\r\n        'Content-Type': 'application/json', // Ensure correct header\r\n      }\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    // Check if the error is due to a response (e.g., status 400)\r\n    if (error.response) {\r\n      console.error(\"Response error:\", error.response.data);\r\n      throw new Error(`Error: ${error.response.status} - ${error.response.data.message}`);\r\n    }\r\n\r\n    // Check if the error was a network error (no response)\r\n    if (error.request) {\r\n      console.error(\"Request error:\", error.request);\r\n      throw new Error(\"No response received from the server.\");\r\n    }\r\n\r\n    // For any other errors\r\n    console.error(\"Error message:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all color details\r\nconst getAllColorDetails = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-details`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color details:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a specific color detail by ColorId\r\nconst getColorDetailByColorId = async (ColorId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/get-color-details/${ColorId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color detail by ColorId\r\nconst updateColorDetail = async (ColorId, updatedData) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/update-color-detail/${ColorId}`,\r\n      updatedData\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color detail by ColorId\r\nconst deleteColorDetail = async (ColorId) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_URL}/delete-color-detail/${ColorId}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorDetail,\r\n  getAllColorDetails,\r\n  getColorDetailByColorId,\r\n  updateColorDetail,\r\n  deleteColorDetail,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}