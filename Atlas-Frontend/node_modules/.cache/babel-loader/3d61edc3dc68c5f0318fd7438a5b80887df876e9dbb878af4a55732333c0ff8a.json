{"ast":null,"code":"import axios from\"axios\";const API_URL=process.env.REACT_APP_API_URL;// Create a new color matching entry\nconst addColorMatching=async colorData=>{try{console.log(colorData);const response=await axios.post(`${API_URL}/add-color-matching`,colorData,{headers:{\"Content-Type\":\"application/json\"}});return response.data;}catch(error){console.error(\"Error creating color matching:\",error.response?error.response.data:error.message);throw new Error(`Error during API call: ${error.response?error.response.data:error.message}`);}};// Get all color matching entries\nconst getAllColorMatching=async()=>{try{const response=await axios.get(`${API_URL}/color-matching`);return response.data;}catch(error){console.error(\"Error fetching all color matching entries:\",error);throw error;}};// Get color matching by RSN\nconst getColorMatchingByRSN=async RSN=>{try{const response=await axios.get(`${API_URL}/color-matching/${RSN}`);return response.data;}catch(error){console.error(`Error fetching color matching for RSN ${RSN}:`,error);throw error;}};// Update color matching entry by RSN\nconst updateColorMatching=async(RSN,updatedData)=>{try{const response=await axios.put(`${API_URL}/update-color-matching/${RSN}`,updatedData);return response.data;}catch(error){console.error(`Error updating color matching for RSN ${RSN}:`,error);throw error;}};// Delete color matching entry by RSN\nconst deleteColorMatching=async RSN=>{try{const response=await axios.delete(`${API_URL}/delete-color-matching/${RSN}`);return response.data;}catch(error){console.error(`Error deleting color matching for RSN ${RSN}:`,error);throw error;}};// Get ColorId by RSN, MatchingName, and Panel\nconst getColorId=async(RSN,MatchingName,Panel)=>{try{const response=await axios.get(`${API_URL}/get-colorId/${RSN}/${MatchingName}/${Panel}`);return response.data;}catch(error){console.error(`Error fetching color ID for RSN ${RSN}, MatchingName ${MatchingName}, Panel ${Panel}:`,error);throw error;}};// Get Panels by RSN\nconst getPanel=async RSN=>{try{const response=await axios.get(`${API_URL}/color-panel/${RSN}`);return response.data;}catch(error){console.error(`Error fetching color ID for RSN ${RSN}:`,error);throw error;}};// Get MatchingName by RSN\nconst getMatchingNameByRSN=async RSN=>{try{const response=await axios.get(`${API_URL}/matching-name/${RSN}`);return response.data;}catch(error){console.error(`Error fetching matching name for RSN ${RSN}:`,error);throw error;}};// Get ColorIds by RSN and MatchingName\nconst getColorIds=async(RSN,MatchingName)=>{try{const response=await axios.get(`${API_URL}/get-colorIds/${RSN}/${MatchingName}`);return response.data;}catch(error){console.error(`Error fetching color IDs for RSN ${RSN} and MatchingName ${MatchingName}:`,error);throw error;}};export{addColorMatching,getAllColorMatching,getColorMatchingByRSN,updateColorMatching,deleteColorMatching,getColorId,getPanel,getMatchingNameByRSN,getColorIds};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","addColorMatching","colorData","console","log","response","post","headers","data","error","message","Error","getAllColorMatching","get","getColorMatchingByRSN","RSN","updateColorMatching","updatedData","put","deleteColorMatching","delete","getColorId","MatchingName","Panel","getPanel","getMatchingNameByRSN","getColorIds"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Create a new color matching entry\r\nconst addColorMatching = async (colorData) => {\r\n  try {\r\n    console.log(colorData);\r\n    const response = await axios.post(\r\n      `${API_URL}/add-color-matching`,\r\n      colorData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error creating color matching:\",\r\n      error.response ? error.response.data : error.message\r\n    );\r\n\r\n    throw new Error(\r\n      `Error during API call: ${\r\n        error.response ? error.response.data : error.message\r\n      }`\r\n    );\r\n  }\r\n};\r\n\r\n// Get all color matching entries\r\nconst getAllColorMatching = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color matching entries:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get color matching by RSN\r\nconst getColorMatchingByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color matching entry by RSN\r\nconst updateColorMatching = async (RSN, updatedData) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/update-color-matching/${RSN}`,\r\n      updatedData\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color matching entry by RSN\r\nconst deleteColorMatching = async (RSN) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_URL}/delete-color-matching/${RSN}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get ColorId by RSN, MatchingName, and Panel\r\nconst getColorId = async (RSN, MatchingName, Panel) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/get-colorId/${RSN}/${MatchingName}/${Panel}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching color ID for RSN ${RSN}, MatchingName ${MatchingName}, Panel ${Panel}:`,\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get Panels by RSN\r\nconst getPanel = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/color-panel/${RSN}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching color ID for RSN ${RSN}:`,\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get MatchingName by RSN\r\nconst getMatchingNameByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/matching-name/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching matching name for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get ColorIds by RSN and MatchingName\r\nconst getColorIds = async (RSN, MatchingName) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_URL}/get-colorIds/${RSN}/${MatchingName}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching color IDs for RSN ${RSN} and MatchingName ${MatchingName}:`,\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorMatching,\r\n  getAllColorMatching,\r\n  getColorMatchingByRSN,\r\n  updateColorMatching,\r\n  deleteColorMatching,\r\n  getColorId,\r\n  getPanel,\r\n  getMatchingNameByRSN,\r\n  getColorIds,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}