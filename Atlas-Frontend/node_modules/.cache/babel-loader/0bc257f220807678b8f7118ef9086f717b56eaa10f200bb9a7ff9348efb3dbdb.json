{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getImageByRSN } from \"../API/ImageApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowImage = () => {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const RSN = 33; // The RSN of the image to fetch, you can replace this with dynamic values\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getImageByRSN(Number(RSN));\n        console.log(\"Image data received:\", data);\n        if (data && data.length > 0 && data[0].ImageData) {\n          // Fix the image path to use forward slashes\n          const imagePath = data[0].ImageData.replace(/\\\\/g, \"/\");\n          setImageData(imagePath);\n        } else {\n          throw new Error(\"No ImageData found in response.\");\n        }\n      } catch (err) {\n        setError(\"Error fetching image\");\n        console.error(\"Error details:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImage();\n  }, [RSN]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: imageData ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000/${imageData}` // Use the correct URL to access the image\n      ,\n      alt: \"Sample\",\n      style: {\n        width: \"100%\",\n        maxWidth: \"600px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No image found for this RSN.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowImage, \"KEnvJThExdJ31O6VITgjvSJA/AQ=\");\n_c = ShowImage;\nexport default ShowImage;\nvar _c;\n$RefreshReg$(_c, \"ShowImage\");","map":{"version":3,"names":["React","useState","useEffect","getImageByRSN","jsxDEV","_jsxDEV","ShowImage","_s","imageData","setImageData","loading","setLoading","error","setError","RSN","fetchImage","data","Number","console","log","length","ImageData","imagePath","replace","Error","err","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowImage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getImageByRSN } from \"../API/ImageApi\";\r\n\r\nconst ShowImage = () => {\r\n  const [imageData, setImageData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const RSN = 33; // The RSN of the image to fetch, you can replace this with dynamic values\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const data = await getImageByRSN(Number(RSN));\r\n        console.log(\"Image data received:\", data);\r\n\r\n        if (data && data.length > 0 && data[0].ImageData) {\r\n          // Fix the image path to use forward slashes\r\n          const imagePath = data[0].ImageData.replace(/\\\\/g, \"/\");\r\n          setImageData(imagePath);\r\n        } else {\r\n          throw new Error(\"No ImageData found in response.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching image\");\r\n        console.error(\"Error details:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, [RSN]);\r\n\r\n  if (loading) {\r\n    return <p>Loading image...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {imageData ? (\r\n        <img\r\n          src={`http://localhost:5000/${imageData}`} // Use the correct URL to access the image\r\n          alt=\"Sample\"\r\n          style={{ width: \"100%\", maxWidth: \"600px\" }}\r\n        />\r\n      ) : (\r\n        <p>No image found for this RSN.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,GAAG,GAAG,EAAE,CAAC,CAAC;;EAEhBZ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFJ,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QACd,MAAMG,IAAI,GAAG,MAAMb,aAAa,CAACc,MAAM,CAACH,GAAG,CAAC,CAAC;QAC7CI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,CAAC;QAEzC,IAAIA,IAAI,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,IAAIJ,IAAI,CAAC,CAAC,CAAC,CAACK,SAAS,EAAE;UAChD;UACA,MAAMC,SAAS,GAAGN,IAAI,CAAC,CAAC,CAAC,CAACK,SAAS,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;UACvDd,YAAY,CAACa,SAAS,CAAC;QACzB,CAAC,MAAM;UACL,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;QACpD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZZ,QAAQ,CAAC,sBAAsB,CAAC;QAChCK,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAEa,GAAG,CAAC;MACtC,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,GAAG,CAAC,CAAC;EAET,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAqB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,IAAIlB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAqB,QAAA,EAAId;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,oBACEzB,OAAA;IAAAqB,QAAA,EACGlB,SAAS,gBACRH,OAAA;MACE0B,GAAG,EAAE,yBAAyBvB,SAAS,EAAG,CAAC;MAAA;MAC3CwB,GAAG,EAAC,QAAQ;MACZC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAQ;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,gBAEFzB,OAAA;MAAAqB,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtDID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAwDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}