{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for the API - assuming REACT_APP_API_URL is set in .env\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Function to add a yarn request (POST request)\nexport const addOrderYarn = async orderYarn => {\n  try {\n    const response = await axios.post(`${API_URL}/add-order-yarn`, orderYarn);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // Handle errors and return an error message\n    console.error('Error adding yarn request:', error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error adding yarn request');\n  }\n};\n\n// Function to search order yarn by OrderNo (GET request)\nexport const searchOrderYarn = async OrderNo => {\n  try {\n    const response = await axios.get(`${API_URL}/order-yarn/${OrderNo}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    // Handle errors and return an error message\n    console.error('Error searching order yarn by OrderNo:', error);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error searching order yarn');\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","addOrderYarn","orderYarn","response","post","data","error","_error$response","_error$response$data","console","Error","message","searchOrderYarn","OrderNo","get","_error$response2","_error$response2$data"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/OrderYarnApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for the API - assuming REACT_APP_API_URL is set in .env\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Function to add a yarn request (POST request)\r\nexport const addOrderYarn = async (orderYarn) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add-order-yarn`, orderYarn);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Handle errors and return an error message\r\n    console.error('Error adding yarn request:', error);\r\n    throw new Error(error.response?.data?.message || 'Error adding yarn request');\r\n  }\r\n};\r\n\r\n// Function to search order yarn by OrderNo (GET request)\r\nexport const searchOrderYarn = async (OrderNo) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/order-yarn/${OrderNo}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Handle errors and return an error message\r\n    console.error('Error searching order yarn by OrderNo:', error);\r\n    throw new Error(error.response?.data?.message || 'Error searching order yarn');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAE7C;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,iBAAiB,EAAEK,SAAS,CAAC;IACzE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd;IACAC,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAII,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,2BAA2B,CAAC;EAC/E;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,eAAegB,OAAO,EAAE,CAAC;IACpE,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA,EAAAC,qBAAA;IACd;IACAP,OAAO,CAACH,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,MAAM,IAAII,KAAK,CAAC,EAAAK,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBL,OAAO,KAAI,4BAA4B,CAAC;EAChF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}