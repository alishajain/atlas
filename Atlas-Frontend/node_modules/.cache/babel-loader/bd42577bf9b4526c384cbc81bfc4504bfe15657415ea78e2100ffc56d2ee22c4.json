{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Pages\\\\DeleteSample.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { deleteSample } from '../API/SampleApi'; // Assuming you have the API functions in this path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteSample = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [RSN, setRSN] = useState(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    // Get RSN from location state\n    if (location.state && location.state.RSN) {\n      setRSN(location.state.RSN);\n    } else {\n      setError('RSN is required');\n    }\n  }, [location]);\n  const handleDelete = async () => {\n    if (!RSN) {\n      setError('RSN is required');\n      return;\n    }\n    setIsDeleting(true);\n    setError(null);\n    setSuccessMessage('');\n    try {\n      // Call the delete function from the API\n      const response = await deleteSample(RSN);\n      if (response.success) {\n        setSuccessMessage('Sample record deleted successfully.');\n        setTimeout(() => {\n          navigate('/');\n        }, 2000);\n      } else {\n        setError(response.message || 'Failed to delete the sample record.');\n      }\n    } catch (err) {\n      setError(err.message || 'Error deleting the sample record.');\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"delete-sample-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Sample Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Are you sure you want to delete the sample record with RSN: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: RSN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 72\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        disabled: isDeleting,\n        style: {\n          backgroundColor: 'red',\n          color: 'white',\n          padding: '10px',\n          cursor: 'pointer'\n        },\n        children: isDeleting ? 'Deleting...' : 'Delete Sample'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteSample, \"V7YxlJoDH9JIV5D3SLszgkIj4ps=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = DeleteSample;\nexport default DeleteSample;\nvar _c;\n$RefreshReg$(_c, \"DeleteSample\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","deleteSample","jsxDEV","_jsxDEV","DeleteSample","_s","location","navigate","RSN","setRSN","isDeleting","setIsDeleting","error","setError","successMessage","setSuccessMessage","state","handleDelete","response","success","setTimeout","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","disabled","backgroundColor","padding","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Pages/DeleteSample.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { deleteSample } from '../API/SampleApi';  // Assuming you have the API functions in this path\r\n\r\nconst DeleteSample = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  const [RSN, setRSN] = useState(null);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Get RSN from location state\r\n    if (location.state && location.state.RSN) {\r\n      setRSN(location.state.RSN);\r\n    } else {\r\n      setError('RSN is required');\r\n    }\r\n  }, [location]);\r\n\r\n  const handleDelete = async () => {\r\n    if (!RSN) {\r\n      setError('RSN is required');\r\n      return;\r\n    }\r\n\r\n    setIsDeleting(true);\r\n    setError(null);\r\n    setSuccessMessage('');\r\n\r\n    try {\r\n      // Call the delete function from the API\r\n      const response = await deleteSample(RSN);\r\n\r\n      if (response.success) {\r\n        setSuccessMessage('Sample record deleted successfully.');\r\n        setTimeout(() => {\r\n          navigate('/');\r\n        }, 2000);\r\n      } else {\r\n        setError(response.message || 'Failed to delete the sample record.');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Error deleting the sample record.');\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete-sample-container\">\r\n      <h2>Delete Sample Record</h2>\r\n      \r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n      {successMessage && <p className=\"success-message\" style={{ color: 'green' }}>{successMessage}</p>}\r\n      \r\n      <div>\r\n        <p>Are you sure you want to delete the sample record with RSN: <strong>{RSN}</strong>?</p>\r\n        <button \r\n          onClick={handleDelete} \r\n          disabled={isDeleting}\r\n          style={{ backgroundColor: 'red', color: 'white', padding: '10px', cursor: 'pointer' }}\r\n        >\r\n          {isDeleting ? 'Deleting...' : 'Delete Sample'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}