{"ast":null,"code":"import axios from\"axios\";const API_URL=process.env.REACT_APP_API_URL;// Function to fetch employee details\nexport const employeeDetails=async()=>{try{const response=await axios.get(`${API_URL}/EmployeeDetails`);return response.data;}catch(error){console.error(\"Error Fetching Employee Details\",error);throw new Error(\"Error Fetching Employee Details\");}};// Function to add a new employee\nexport const addEmployee=async employeeData=>{try{const response=await axios.post(`${API_URL}/add-employee`,employeeData);return response.data;}catch(error){console.error(\"Error adding employee:\",error);throw new Error(\"Failed to add employee. Please try again later.\");}};// Function to search for employees\nexport const searchEmployee=async(empId,empName)=>{try{const response=await axios.get(`${API_URL}/search-employee`,{params:{empId:empId||undefined,// Send undefined if the field is empty\nempName:empName||undefined// Send undefined if the field is empty\n}});return response.data;}catch(error){console.error(\"Error fetching employee details:\",error);throw new Error(\"Error fetching employee details\");}};// Function to delete an employee\nexport const deleteEmployee=async empId=>{try{console.log(`Requesting DELETE for EmpId: ${empId}`);const response=await axios.delete(`${API_URL}/delete-employee/${empId}`);return response.data;}catch(error){console.error(\"Error deleting employee:\",error);throw new Error(\"Error deleting employee\");}};// Function to update an employee\nexport const updateEmployee=async updatedEmployee=>{try{// Make a PUT request to update the employee, passing EmpId in the URL\nconst response=await fetch(`${API_URL}/update-employee/${updatedEmployee.EmpId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedEmployee)});console.log('Alisha');// Directly await the JSON parsing\nconst result=await response.json();if(!response.ok){throw new Error(result.message||'Error updating record');}return result;}catch(error){throw new Error(error.message||'There was an error with the API request');}};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","employeeDetails","response","get","data","error","console","Error","addEmployee","employeeData","post","searchEmployee","empId","empName","params","undefined","deleteEmployee","log","delete","updateEmployee","updatedEmployee","fetch","EmpId","method","headers","body","JSON","stringify","result","json","ok","message"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/EmployeeApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Function to fetch employee details\r\nexport const employeeDetails = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/EmployeeDetails`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error Fetching Employee Details\", error);\r\n    throw new Error(\"Error Fetching Employee Details\");\r\n  }\r\n};\r\n\r\n// Function to add a new employee\r\nexport const addEmployee = async (employeeData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add-employee`, employeeData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding employee:\", error);\r\n    throw new Error(\"Failed to add employee. Please try again later.\");\r\n  }\r\n};\r\n\r\n// Function to search for employees\r\nexport const searchEmployee = async (empId, empName) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/search-employee`, {\r\n      params: {\r\n        empId: empId || undefined, // Send undefined if the field is empty\r\n        empName: empName || undefined, // Send undefined if the field is empty\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching employee details:\", error);\r\n    throw new Error(\"Error fetching employee details\");\r\n  }\r\n};\r\n\r\n// Function to delete an employee\r\nexport const deleteEmployee = async (empId) => {\r\n  try {\r\n    console.log(`Requesting DELETE for EmpId: ${empId}`);\r\n    const response = await axios.delete(`${API_URL}/delete-employee/${empId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting employee:\", error);\r\n    throw new Error(\"Error deleting employee\");\r\n  }\r\n};\r\n\r\n// Function to update an employee\r\nexport const updateEmployee = async (updatedEmployee) => {\r\n  try {\r\n    // Make a PUT request to update the employee, passing EmpId in the URL\r\n    const response = await fetch(\r\n      `${API_URL}/update-employee/${updatedEmployee.EmpId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedEmployee),\r\n      }\r\n    );\r\n    \r\n    console.log('Alisha');\r\n    \r\n    // Directly await the JSON parsing\r\n    const result = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(result.message || 'Error updating record');\r\n    }\r\n    return result;\r\n  } catch (error) {\r\n    throw new Error(error.message || 'There was an error with the API request');\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}