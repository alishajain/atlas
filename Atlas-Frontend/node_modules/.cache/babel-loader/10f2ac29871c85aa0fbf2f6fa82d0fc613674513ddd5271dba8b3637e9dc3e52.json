{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddArticle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { getColorMatchingByRSN } from \"../API/ColorApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddArticle = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // RSN fetched from location state\n  const RSN = location.state ? location.state.RSN : null;\n\n  // State for form data\n  const [articleNumber, setArticleNumber] = useState(\"\");\n  const [sizes, setSizes] = useState({\n    freesize: false,\n    xs: false,\n    s: false,\n    m: false,\n    l: false,\n    xl: false,\n    xxl: false,\n    \"3xl\": false,\n    \"4xl\": false,\n    \"5xl\": false\n  });\n  const [selectedColors, setSelectedColors] = useState([]);\n  const [colorOptions, setColorOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Fetch matching colors based on RSN\n  useEffect(() => {\n    const colors = async () => {\n      setLoading(true);\n      try {\n        const response = await getColorMatchingByRSN(RSN);\n        setColorOptions(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch colors.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n  }, [RSN]);\n\n  // Handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Prepare form data\n    const formData = {\n      RSN,\n      articleNumber,\n      sizes,\n      selectedColors\n    };\n    console.log(\"Form data:\", formData);\n\n    // Example of navigating after submission (you can replace this with your actual submit logic)\n    navigate(\"/success\"); // Assuming you have a success route\n  };\n\n  // Handle checkbox change for sizes\n  const handleSizeChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setSizes(prevSizes => ({\n      ...prevSizes,\n      [name]: checked\n    }));\n  };\n\n  // Handle checkbox change for selected colors\n  const handleColorChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setSelectedColors(prevColors => checked ? [...prevColors, name] : prevColors.filter(color => color !== name));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Article\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"RSN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: RSN,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Article Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: articleNumber,\n          onChange: e => setArticleNumber(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sizes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Object.keys(sizes).map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: size,\n              checked: sizes[size],\n              onChange: handleSizeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: size.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, size, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Selected Colors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: colorOptions.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: color.MatchingName,\n              onChange: handleColorChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: color.MatchingName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, color.MatchingName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(AddArticle, \"vSszU0tEdKpBBDMO0tag/HVY9jM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AddArticle;\nexport default AddArticle;\nvar _c;\n$RefreshReg$(_c, \"AddArticle\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getColorMatchingByRSN","jsxDEV","_jsxDEV","AddArticle","_s","location","navigate","RSN","state","articleNumber","setArticleNumber","sizes","setSizes","freesize","xs","s","m","l","xl","xxl","selectedColors","setSelectedColors","colorOptions","setColorOptions","loading","setLoading","error","setError","colors","response","data","err","handleSubmit","event","preventDefault","formData","console","log","handleSizeChange","e","name","checked","target","prevSizes","handleColorChange","prevColors","filter","color","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","readOnly","onChange","required","Object","keys","map","size","toUpperCase","MatchingName","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddArticle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { getColorMatchingByRSN } from \"../API/ColorApi\";\r\n\r\nconst AddArticle = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // RSN fetched from location state\r\n  const RSN = location.state ? location.state.RSN : null;\r\n\r\n  // State for form data\r\n  const [articleNumber, setArticleNumber] = useState(\"\");\r\n  const [sizes, setSizes] = useState({\r\n    freesize: false,\r\n    xs: false,\r\n    s: false,\r\n    m: false,\r\n    l: false,\r\n    xl: false,\r\n    xxl: false,\r\n    \"3xl\": false,\r\n    \"4xl\": false,\r\n    \"5xl\": false,\r\n  });\r\n  const [selectedColors, setSelectedColors] = useState([]);\r\n  const [colorOptions, setColorOptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch matching colors based on RSN\r\n  useEffect(() => {\r\n    const colors = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response =  await getColorMatchingByRSN(RSN);\r\n            setColorOptions(response.data);\r\n        } catch (err) {\r\n            setError(\"Failed to fetch colors.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n  }, [RSN]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Prepare form data\r\n    const formData = {\r\n      RSN,\r\n      articleNumber,\r\n      sizes,\r\n      selectedColors,\r\n    };\r\n\r\n    console.log(\"Form data:\", formData);\r\n\r\n    // Example of navigating after submission (you can replace this with your actual submit logic)\r\n    navigate(\"/success\"); // Assuming you have a success route\r\n  };\r\n\r\n  // Handle checkbox change for sizes\r\n  const handleSizeChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setSizes((prevSizes) => ({\r\n      ...prevSizes,\r\n      [name]: checked,\r\n    }));\r\n  };\r\n\r\n  // Handle checkbox change for selected colors\r\n  const handleColorChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setSelectedColors((prevColors) =>\r\n      checked\r\n        ? [...prevColors, name]\r\n        : prevColors.filter((color) => color !== name)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add Article</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* RSN Field (read-only) */}\r\n        <div>\r\n          <label>RSN:</label>\r\n          <input type=\"text\" value={RSN} readOnly />\r\n        </div>\r\n\r\n        {/* Article Number Field */}\r\n        <div>\r\n          <label>Article Number:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={articleNumber}\r\n            onChange={(e) => setArticleNumber(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Sizes Checkboxes */}\r\n        <div>\r\n          <label>Sizes:</label>\r\n          <div>\r\n            {Object.keys(sizes).map((size) => (\r\n              <div key={size}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={size}\r\n                  checked={sizes[size]}\r\n                  onChange={handleSizeChange}\r\n                />\r\n                <label>{size.toUpperCase()}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Colors Checkboxes */}\r\n        <div>\r\n          <label>Selected Colors:</label>\r\n          <div>\r\n            {colorOptions.map((color) => (\r\n              <div key={color.MatchingName}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={color.MatchingName}\r\n                  onChange={handleColorChange}\r\n                />\r\n                <label>{color.MatchingName}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddArticle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}