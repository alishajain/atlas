{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\nexport const employeeDetails = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/EmployeeDetails`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error Fetching Employee Details\", error);\n    throw new Error(\"Error Fetching Employee Details\");\n  }\n};\n\n// Function to add a new employee\nexport const addEmployee = async employeeData => {\n  try {\n    // Send a POST request with the employee data\n    const response = await axios.post(`${API_URL}/add-employee`, employeeData);\n\n    // Return the response from the backend\n    return response.data;\n  } catch (error) {\n    console.error('Error adding employee:', error);\n\n    // Return the error message\n    throw new Error('Failed to add employee. Please try again later.');\n  }\n};\nexport const searchEmployee = async (empId, empName) => {\n  try {\n    const response = await axios.get(`${API_URL}/search-employee`, {\n      params: {\n        empId: empId || undefined,\n        // Send undefined if the field is empty\n        empName: empName || undefined // Send undefined if the field is empty\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching employee details:', error);\n    throw new Error('Error fetching employee details');\n  }\n};\n\n// Function to delete an employee\nexport const deleteEmployee = async empId => {\n  try {\n    console.log(empId);\n    const response = await axios.delete(`${API_URL}/delete-employee/${empId}`);\n    console.log('Alisha');\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting employee:', error);\n    throw new Error('Error deleting employee');\n  }\n};\n\n// Function to update an employee\nexport const updateEmployee = async updatedEmployee => {\n  try {\n    console.log(updateEmployee);\n    const response = await axios.put(`${API_URL}/update-employee`, updatedEmployee); // Send as body, not part of the URL\n    return response.data;\n  } catch (error) {\n    console.error('Error updating employee:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","employeeDetails","response","get","data","error","console","Error","addEmployee","employeeData","post","searchEmployee","empId","empName","params","undefined","deleteEmployee","log","delete","updateEmployee","updatedEmployee","put"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/EmployeeApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\nexport const employeeDetails = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/EmployeeDetails`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error Fetching Employee Details\", error);\r\n        throw new Error(\"Error Fetching Employee Details\");\r\n    }\r\n};\r\n\r\n// Function to add a new employee\r\nexport const addEmployee = async (employeeData) => {\r\n    try {\r\n        // Send a POST request with the employee data\r\n        const response = await axios.post(`${API_URL}/add-employee`, employeeData);\r\n\r\n        // Return the response from the backend\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding employee:', error);\r\n\r\n        // Return the error message\r\n        throw new Error('Failed to add employee. Please try again later.');\r\n    }\r\n};\r\n\r\nexport const searchEmployee = async (empId, empName) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/search-employee`, {\r\n            params: {\r\n                empId: empId || undefined,  // Send undefined if the field is empty\r\n                empName: empName || undefined, // Send undefined if the field is empty\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching employee details:', error);\r\n        throw new Error('Error fetching employee details');\r\n    }\r\n};\r\n\r\n// Function to delete an employee\r\nexport const deleteEmployee = async (empId) => {\r\n    try {\r\n        console.log(empId);\r\n        const response = await axios.delete(`${API_URL}/delete-employee/${empId}`);\r\n        console.log('Alisha');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error deleting employee:', error);\r\n        throw new Error('Error deleting employee');\r\n    }\r\n};\r\n\r\n// Function to update an employee\r\nexport const updateEmployee = async (updatedEmployee) => {\r\n    try {\r\n        console.log(updateEmployee);\r\n      const response = await axios.put(`${API_URL}/update-employee`, updatedEmployee);  // Send as body, not part of the URL\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating employee:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,kBAAkB,CAAC;IAC9D,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;EACtD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,YAAY,IAAK;EAC/C,IAAI;IACA;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,eAAe,EAAES,YAAY,CAAC;;IAE1E;IACA,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;IAE9C;IACA,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;EACtE;AACJ,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,KAAK;EACpD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,kBAAkB,EAAE;MAC3Dc,MAAM,EAAE;QACJF,KAAK,EAAEA,KAAK,IAAIG,SAAS;QAAG;QAC5BF,OAAO,EAAEA,OAAO,IAAIE,SAAS,CAAE;MACnC;IACJ,CAAC,CAAC;IACF,OAAOb,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;EACtD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,cAAc,GAAG,MAAOJ,KAAK,IAAK;EAC3C,IAAI;IACAN,OAAO,CAACW,GAAG,CAACL,KAAK,CAAC;IAClB,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,oBAAoBY,KAAK,EAAE,CAAC;IAC1EN,OAAO,CAACW,GAAG,CAAC,QAAQ,CAAC;IACrB,OAAOf,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC9C;AACJ,CAAC;;AAED;AACA,OAAO,MAAMY,cAAc,GAAG,MAAOC,eAAe,IAAK;EACrD,IAAI;IACAd,OAAO,CAACW,GAAG,CAACE,cAAc,CAAC;IAC7B,MAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,kBAAkB,EAAEoB,eAAe,CAAC,CAAC,CAAE;IAClF,OAAOlB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}