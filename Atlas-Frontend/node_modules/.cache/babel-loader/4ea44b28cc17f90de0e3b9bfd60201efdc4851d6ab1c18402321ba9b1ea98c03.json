{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserId } from '../Redux/userSlice'; // Action to set the userId in Redux state\nimport { loginUser } from '../API/UserApi'; // API call for logging in\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userId, setUserIdState] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state to show progress\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation for empty fields\n    if (!userId || !password) {\n      setMessage(\"User ID and Password are required.\");\n      return;\n    }\n    setLoading(true); // Start loading state\n    try {\n      // Make the login API call\n      const data = await loginUser({\n        UserID: userId,\n        Password: password\n      });\n      if (data.success) {\n        dispatch(setUserId(userId)); // Dispatching the action to store userId\n        setMessage(data.message);\n        navigate('/home'); // Navigate to home on success\n      } else {\n        setMessage(data.message); // Display error message\n      }\n    } catch (error) {\n      setMessage(\"An error occurred during login.\");\n      console.error(\"Error during login:\", error);\n    } finally {\n      setLoading(false); // Reset loading state after request is completed\n    }\n  };\n\n  // Navigate to signup page\n  const handleSignupRedirect = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to ATLAS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"UserId:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userId,\n          onChange: e => setUserIdState(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: [loading ? \"Logging in...\" : \"Login\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignupRedirect,\n      className: \"signup-button\",\n      children: \"Don't have an account? Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"QC88CTlJ5WUbbsv8Y5tEew/jZ88=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useDispatch","useNavigate","setUserId","loginUser","jsxDEV","_jsxDEV","Login","_s","userId","setUserIdState","password","setPassword","message","setMessage","loading","setLoading","dispatch","navigate","handleSubmit","e","preventDefault","data","UserID","Password","success","error","console","handleSignupRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setUserId } from '../Redux/userSlice'; // Action to set the userId in Redux state\r\nimport { loginUser } from '../API/UserApi'; // API call for logging in\r\n\r\nconst Login = () => {\r\n  const [userId, setUserIdState] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false); // Loading state to show progress\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic validation for empty fields\r\n    if (!userId || !password) {\r\n      setMessage(\"User ID and Password are required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Start loading state\r\n    try {\r\n      // Make the login API call\r\n      const data = await loginUser({ UserID: userId, Password: password });\r\n\r\n      if (data.success) {\r\n        dispatch(setUserId(userId)); // Dispatching the action to store userId\r\n        setMessage(data.message);\r\n        navigate('/home'); // Navigate to home on success\r\n      } else {\r\n        setMessage(data.message); // Display error message\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"An error occurred during login.\");\r\n      console.error(\"Error during login:\", error);\r\n    } finally {\r\n      setLoading(false); // Reset loading state after request is completed\r\n    }\r\n  };\r\n\r\n  // Navigate to signup page\r\n  const handleSignupRedirect = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Welcome to ATLAS</h1>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label>UserId:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userId}\r\n            onChange={(e) => setUserIdState(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login\"} {/* Button shows progress text */}\r\n        </button>\r\n      </form>\r\n      {message && <p>{message}</p>} {/* Display success or error message */}\r\n\r\n      {/* Button to redirect to Signup page */}\r\n      <button onClick={handleSignupRedirect} className=\"signup-button\">\r\n        Don't have an account? Sign Up\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}