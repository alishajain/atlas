{"ast":null,"code":"import React,{useState}from\"react\";import{searchEmployee,deleteEmployee}from\"../API/EmployeeApi\";import UpdateEmployee from\"./UpdateEmployee\";import{useNavigate}from\"react-router-dom\";// Import useNavigate\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatDate=date=>{const jsDate=new Date(date);const options={year:\"numeric\",month:\"long\",day:\"numeric\"};return jsDate.toLocaleDateString(\"en-US\",options);};const SearchEmployee=()=>{const[empId,setEmpId]=useState(\"\");const[empName,setEmpName]=useState(\"\");const[employees,setEmployees]=useState([]);const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const[selectedEmployee,setSelectedEmployee]=useState(null);const navigate=useNavigate();// Initialize the navigate function\nconst handleSearch=async()=>{setLoading(true);setError(\"\");try{const result=await searchEmployee(empId,empName);if(result.success){setEmployees(result.data);}else{setError(\"No employees found\");}}catch(err){setError(\"Error fetching employee details\");}setLoading(false);};const handleDelete=async empId=>{try{console.log(`Deleting employee with EmpId: ${empId}`);const result=await deleteEmployee(empId);if(result.success){setEmployees(employees.filter(emp=>emp.EmpId!==empId));// Remove deleted employee from the state\n}}catch(err){setError(\"Error deleting employee\");}};const handleUpdate=emp=>{setSelectedEmployee(emp);// Set the selected employee for updating\n};const handleCancelUpdate=()=>{setSelectedEmployee(null);// Cancel update and reset selected employee\n};const handleSaveUpdatedEmployee=updatedEmployee=>{// Update the employees list with the updated employee details\nsetEmployees(prev=>prev.map(emp=>emp.EmpId===updatedEmployee.EmpId?updatedEmployee:emp));setSelectedEmployee(null);// Reset the selected employee\n};// handleBack function to navigate to /employee\nconst handleBack=()=>{navigate(\"/employee\");// Navigate back to /employee route\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Search Employee\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"EmpId\",value:empId,onChange:e=>setEmpId(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"EmpName\",value:empName,onChange:e=>setEmpName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,disabled:loading,children:loading?\"Searching...\":\"Search\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Employee ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Contact No\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Alternate Contact No\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date of Birth\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Age\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date of Joining\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Designation\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Anniversary Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:employees.length>0?employees.map(emp=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:emp.EmpId}),/*#__PURE__*/_jsx(\"td\",{children:emp.EmpName}),/*#__PURE__*/_jsx(\"td\",{children:emp.Address}),/*#__PURE__*/_jsx(\"td\",{children:emp.EmailId}),/*#__PURE__*/_jsx(\"td\",{children:emp.ContactNo}),/*#__PURE__*/_jsx(\"td\",{children:emp.AltContactNo}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(emp.DOB)}),/*#__PURE__*/_jsx(\"td\",{children:emp.Age}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(emp.JoiningDate)}),/*#__PURE__*/_jsx(\"td\",{children:emp.Designation}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(emp.Anniversary)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUpdate(emp),children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(emp.EmpId),children:\"Delete\"})]})]},emp.EmpId)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"6\",children:\"No employees found\"})})})]}),selectedEmployee&&/*#__PURE__*/_jsx(UpdateEmployee,{employee:selectedEmployee,onSave:handleSaveUpdatedEmployee,onCancel:handleCancelUpdate}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,children:\"Back\"}),\" \"]})]});};export default SearchEmployee;","map":{"version":3,"names":["React","useState","searchEmployee","deleteEmployee","UpdateEmployee","useNavigate","jsx","_jsx","jsxs","_jsxs","formatDate","date","jsDate","Date","options","year","month","day","toLocaleDateString","SearchEmployee","empId","setEmpId","empName","setEmpName","employees","setEmployees","error","setError","loading","setLoading","selectedEmployee","setSelectedEmployee","navigate","handleSearch","result","success","data","err","handleDelete","console","log","filter","emp","EmpId","handleUpdate","handleCancelUpdate","handleSaveUpdatedEmployee","updatedEmployee","prev","map","handleBack","children","type","placeholder","value","onChange","e","target","onClick","disabled","style","color","length","EmpName","Address","EmailId","ContactNo","AltContactNo","DOB","Age","JoiningDate","Designation","Anniversary","colSpan","employee","onSave","onCancel"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/SearchEmployee.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { searchEmployee, deleteEmployee } from \"../API/EmployeeApi\"; \r\nimport UpdateEmployee from \"./UpdateEmployee\"; \r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\n\r\nconst formatDate = (date) => {\r\n  const jsDate = new Date(date);\r\n  const options = {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n  return jsDate.toLocaleDateString(\"en-US\", options);\r\n};\r\n\r\nconst SearchEmployee = () => {\r\n  const [empId, setEmpId] = useState(\"\");\r\n  const [empName, setEmpName] = useState(\"\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n\r\n  const navigate = useNavigate(); // Initialize the navigate function\r\n\r\n  const handleSearch = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const result = await searchEmployee(empId, empName);\r\n      if (result.success) {\r\n        setEmployees(result.data);\r\n      } else {\r\n        setError(\"No employees found\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error fetching employee details\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDelete = async (empId) => {\r\n    try {\r\n      console.log(`Deleting employee with EmpId: ${empId}`);\r\n      const result = await deleteEmployee(empId);\r\n      if (result.success) {\r\n        setEmployees(employees.filter((emp) => emp.EmpId !== empId)); // Remove deleted employee from the state\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error deleting employee\");\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (emp) => {\r\n    setSelectedEmployee(emp); // Set the selected employee for updating\r\n  };\r\n\r\n  const handleCancelUpdate = () => {\r\n    setSelectedEmployee(null); // Cancel update and reset selected employee\r\n  };\r\n\r\n  const handleSaveUpdatedEmployee = (updatedEmployee) => {\r\n    // Update the employees list with the updated employee details\r\n    setEmployees((prev) =>\r\n      prev.map((emp) =>\r\n        emp.EmpId === updatedEmployee.EmpId ? updatedEmployee : emp\r\n      )\r\n    );\r\n    setSelectedEmployee(null); // Reset the selected employee\r\n  };\r\n\r\n  // handleBack function to navigate to /employee\r\n  const handleBack = () => {\r\n    navigate(\"/employee\"); // Navigate back to /employee route\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Search Employee</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"EmpId\"\r\n          value={empId}\r\n          onChange={(e) => setEmpId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"EmpName\"\r\n          value={empName}\r\n          onChange={(e) => setEmpName(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch} disabled={loading}>\r\n          {loading ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Employee ID</th>\r\n            <th>Name</th>\r\n            <th>Address</th>\r\n            <th>Email ID</th>\r\n            <th>Contact No</th>\r\n            <th>Alternate Contact No</th>\r\n            <th>Date of Birth</th>\r\n            <th>Age</th>\r\n            <th>Date of Joining</th>\r\n            <th>Designation</th>\r\n            <th>Anniversary Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.length > 0 ? (\r\n            employees.map((emp) => (\r\n              <tr key={emp.EmpId}>\r\n                <td>{emp.EmpId}</td>\r\n                <td>{emp.EmpName}</td>\r\n                <td>{emp.Address}</td>\r\n                <td>{emp.EmailId}</td>\r\n                <td>{emp.ContactNo}</td>\r\n                <td>{emp.AltContactNo}</td>\r\n                <td>{formatDate(emp.DOB)}</td>\r\n                <td>{emp.Age}</td>\r\n                <td>{formatDate(emp.JoiningDate)}</td>\r\n                <td>{emp.Designation}</td>\r\n                <td>{formatDate(emp.Anniversary)}</td>\r\n                <td>\r\n                  <button onClick={() => handleUpdate(emp)}>Update</button>\r\n                  <button onClick={() => handleDelete(emp.EmpId)}>\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\">No employees found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedEmployee && (\r\n        <UpdateEmployee\r\n          employee={selectedEmployee}\r\n          onSave={handleSaveUpdatedEmployee}\r\n          onCancel={handleCancelUpdate}\r\n        />\r\n      )}\r\n\r\n      <div>\r\n        <button onClick={handleBack}>Back</button> {/* Back Button */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchEmployee;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}