{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\n\n// Add a new color detail\nconst addColorDetail = async colorData => {\n  try {\n    console.log(colorData);\n    const response = await axios.post(`${API_URL}/add-color-detail`, colorData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding color detail:\", error);\n    throw error;\n  }\n};\n\n// Get all color details\nconst getAllColorDetails = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/color-details`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all color details:\", error);\n    throw error;\n  }\n};\n\n// Get a specific color detail by ColorId\nconst getColorDetailByColorId = async ColorId => {\n  try {\n    const response = await axios.get(`${API_URL}/get-color-details/${ColorId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color detail for ColorId ${ColorId}:`, error);\n    throw error;\n  }\n};\n\n// Update color detail by ColorId\nconst updateColorDetail = async (ColorId, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/update-color-detail/${ColorId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating color detail for ColorId ${ColorId}:`, error);\n    throw error;\n  }\n};\n\n// Delete color detail by ColorId\nconst deleteColorDetail = async ColorId => {\n  try {\n    const response = await axios.delete(`${API_URL}/delete-color-detail/${ColorId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting color detail for ColorId ${ColorId}:`, error);\n    throw error;\n  }\n};\nexport { addColorDetail, getAllColorDetails, getColorDetailByColorId, updateColorDetail, deleteColorDetail };","map":{"version":3,"names":["axios","API_URL","addColorDetail","colorData","console","log","response","post","data","error","getAllColorDetails","get","getColorDetailByColorId","ColorId","updateColorDetail","updatedData","put","deleteColorDetail","delete"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorDetailApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Add a new color detail\r\nconst addColorDetail = async (colorData) => {\r\n  try {\r\n    console.log(colorData);\r\n    const response = await axios.post(`${API_URL}/add-color-detail`, colorData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding color detail:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all color details\r\nconst getAllColorDetails = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-details`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color details:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a specific color detail by ColorId\r\nconst getColorDetailByColorId = async (ColorId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/get-color-details/${ColorId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color detail by ColorId\r\nconst updateColorDetail = async (ColorId, updatedData) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/update-color-detail/${ColorId}`,\r\n      updatedData\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color detail by ColorId\r\nconst deleteColorDetail = async (ColorId) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_URL}/delete-color-detail/${ColorId}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorDetail,\r\n  getAllColorDetails,\r\n  getColorDetailByColorId,\r\n  updateColorDetail,\r\n  deleteColorDetail,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,cAAc,GAAG,MAAOC,SAAS,IAAK;EAC1C,IAAI;IACFC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,mBAAmB,EAAEE,SAAS,CAAC;IAC3E,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,gBAAgB,CAAC;IAC5D,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMG,uBAAuB,GAAG,MAAOC,OAAO,IAAK;EACjD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,sBAAsBY,OAAO,EAAE,CAAC;IAC3E,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,2CAA2CI,OAAO,GAAG,EAAEJ,KAAK,CAAC;IAC3E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMK,iBAAiB,GAAG,MAAAA,CAAOD,OAAO,EAAEE,WAAW,KAAK;EACxD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMN,KAAK,CAACgB,GAAG,CAC9B,GAAGf,OAAO,wBAAwBY,OAAO,EAAE,EAC3CE,WACF,CAAC;IACD,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,2CAA2CI,OAAO,GAAG,EAAEJ,KAAK,CAAC;IAC3E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMQ,iBAAiB,GAAG,MAAOJ,OAAO,IAAK;EAC3C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACkB,MAAM,CACjC,GAAGjB,OAAO,wBAAwBY,OAAO,EAC3C,CAAC;IACD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,2CAA2CI,OAAO,GAAG,EAAEJ,KAAK,CAAC;IAC3E,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SACEP,cAAc,EACdQ,kBAAkB,EAClBE,uBAAuB,EACvBE,iBAAiB,EACjBG,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}