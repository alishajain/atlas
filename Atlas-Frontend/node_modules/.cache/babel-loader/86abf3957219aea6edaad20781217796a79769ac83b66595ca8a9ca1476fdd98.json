{"ast":null,"code":"import axios from\"axios\";const API_URL=\"http://localhost:5000/api\";// Add a new color detail\nconst addColorDetail=async colorData=>{try{const response=await axios.post(`${API_URL}/add-color-detail`,colorData,{headers:{'Content-Type':'application/json'// Ensure correct header\n}});return response.data;}catch(error){// Check if the error is due to a response (e.g., status 400)\nif(error.response){console.error(\"Response error:\",error.response.data);throw new Error(`Error: ${error.response.status} - ${error.response.data.message}`);}// Check if the error was a network error (no response)\nif(error.request){console.error(\"Request error:\",error.request);throw new Error(\"No response received from the server.\");}// For any other errors\nconsole.error(\"Error message:\",error.message);throw error;}};// Get all color details\nconst getAllColorDetails=async()=>{try{const response=await axios.get(`${API_URL}/color-details`);return response.data;}catch(error){console.error(\"Error fetching all color details:\",error);throw error;}};// Get a specific color detail by ColorId\nconst getColorDetailByColorId=async ColorId=>{try{const response=await axios.get(`${API_URL}/get-color-details/${ColorId}`);return response.data;}catch(error){console.error(`Error fetching color detail for ColorId ${ColorId}:`,error);throw error;}};// Update color detail by ColorId\nconst updateColorDetail=async(ColorId,updatedData)=>{try{const response=await axios.put(`${API_URL}/update-color-detail/${ColorId}`,updatedData);return response.data;}catch(error){console.error(`Error updating color detail for ColorId ${ColorId}:`,error);throw error;}};// Delete color detail by ColorId\nconst deleteColorDetail=async ColorId=>{try{const response=await axios.delete(`${API_URL}/delete-color-detail/${ColorId}`);return response.data;}catch(error){console.error(`Error deleting color detail for ColorId ${ColorId}:`,error);throw error;}};export{addColorDetail,getAllColorDetails,getColorDetailByColorId,updateColorDetail,deleteColorDetail};","map":{"version":3,"names":["axios","API_URL","addColorDetail","colorData","response","post","headers","data","error","console","Error","status","message","request","getAllColorDetails","get","getColorDetailByColorId","ColorId","updateColorDetail","updatedData","put","deleteColorDetail","delete"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorDetailApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Add a new color detail\r\nconst addColorDetail = async (colorData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add-color-detail`, colorData, {\r\n      headers: {\r\n        'Content-Type': 'application/json', // Ensure correct header\r\n      }\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    // Check if the error is due to a response (e.g., status 400)\r\n    if (error.response) {\r\n      console.error(\"Response error:\", error.response.data);\r\n      throw new Error(`Error: ${error.response.status} - ${error.response.data.message}`);\r\n    }\r\n\r\n    // Check if the error was a network error (no response)\r\n    if (error.request) {\r\n      console.error(\"Request error:\", error.request);\r\n      throw new Error(\"No response received from the server.\");\r\n    }\r\n\r\n    // For any other errors\r\n    console.error(\"Error message:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all color details\r\nconst getAllColorDetails = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-details`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color details:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a specific color detail by ColorId\r\nconst getColorDetailByColorId = async (ColorId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/get-color-details/${ColorId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color detail by ColorId\r\nconst updateColorDetail = async (ColorId, updatedData) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_URL}/update-color-detail/${ColorId}`,\r\n      updatedData\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color detail by ColorId\r\nconst deleteColorDetail = async (ColorId) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_URL}/delete-color-detail/${ColorId}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color detail for ColorId ${ColorId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorDetail,\r\n  getAllColorDetails,\r\n  getColorDetailByColorId,\r\n  updateColorDetail,\r\n  deleteColorDetail,\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAE3C;AACA,KAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,mBAAmB,CAAEE,SAAS,CAAE,CAC1EG,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CACF,CAAC,CAAC,CAEF,MAAO,CAAAF,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd;AACA,GAAIA,KAAK,CAACJ,QAAQ,CAAE,CAClBK,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAAC,CACrD,KAAM,IAAI,CAAAG,KAAK,CAAC,UAAUF,KAAK,CAACJ,QAAQ,CAACO,MAAM,MAAMH,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACK,OAAO,EAAE,CAAC,CACrF,CAEA;AACA,GAAIJ,KAAK,CAACK,OAAO,CAAE,CACjBJ,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACK,OAAO,CAAC,CAC9C,KAAM,IAAI,CAAAH,KAAK,CAAC,uCAAuC,CAAC,CAC1D,CAEA;AACAD,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACI,OAAO,CAAC,CAC9C,KAAM,CAAAJ,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAM,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,gBAAgB,CAAC,CAC5D,MAAO,CAAAG,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAQ,uBAAuB,CAAG,KAAO,CAAAC,OAAO,EAAK,CACjD,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,sBAAsBgB,OAAO,EAAE,CAAC,CAC3E,MAAO,CAAAb,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2CS,OAAO,GAAG,CAAET,KAAK,CAAC,CAC3E,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAU,iBAAiB,CAAG,KAAAA,CAAOD,OAAO,CAAEE,WAAW,GAAK,CACxD,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACoB,GAAG,CAC9B,GAAGnB,OAAO,wBAAwBgB,OAAO,EAAE,CAC3CE,WACF,CAAC,CACD,MAAO,CAAAf,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2CS,OAAO,GAAG,CAAET,KAAK,CAAC,CAC3E,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAa,iBAAiB,CAAG,KAAO,CAAAJ,OAAO,EAAK,CAC3C,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACsB,MAAM,CACjC,GAAGrB,OAAO,wBAAwBgB,OAAO,EAC3C,CAAC,CACD,MAAO,CAAAb,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2CS,OAAO,GAAG,CAAET,KAAK,CAAC,CAC3E,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,OACEN,cAAc,CACdY,kBAAkB,CAClBE,uBAAuB,CACvBE,iBAAiB,CACjBG,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}