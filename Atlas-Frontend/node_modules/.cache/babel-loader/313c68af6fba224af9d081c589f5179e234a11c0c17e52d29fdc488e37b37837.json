{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\MachineDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllMachines, searchMachineByMachineNo, deleteMachineByMachineNo, updateMachineByMachineNo } from '../API/MachineApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MachineManagement = () => {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [error, setError] = useState('');\n  const [searchMachineNo, setSearchMachineNo] = useState('');\n  const [selectedMachine, setSelectedMachine] = useState(null);\n\n  // Fetch all machines on component mount\n  useEffect(() => {\n    const fetchMachines = async () => {\n      try {\n        const result = await getAllMachines();\n        setMachines(result.data);\n      } catch (err) {\n        setError('Error fetching machines');\n      }\n    };\n    fetchMachines();\n  }, []);\n\n  // Handle search by MachineNo\n  const handleSearch = async () => {\n    if (searchMachineNo) {\n      try {\n        const result = await searchMachineByMachineNo(searchMachineNo);\n        setMachines(result.data);\n      } catch (err) {\n        setError('Machine not found');\n      }\n    }\n  };\n\n  // Handle delete machine by MachineNo\n  const handleDelete = async MachineNo => {\n    try {\n      const result = await deleteMachineByMachineNo(MachineNo);\n      if (result.success) {\n        // Update the machines list after successful deletion\n        setMachines(machines.filter(machine => machine.MachineNo !== MachineNo));\n      }\n    } catch (err) {\n      setError('Error deleting machine');\n    }\n  };\n\n  // Handle update machine (this could involve a form to collect updated data)\n  const handleUpdate = async (MachineNo, updatedData) => {\n    try {\n      const result = await updateMachineByMachineNo(MachineNo, updatedData);\n      // Update the machine in the list with the updated data\n      setMachines(machines.map(machine => machine.MachineNo === MachineNo ? {\n        ...machine,\n        ...updatedData\n      } : machine));\n    } catch (err) {\n      setError('Error updating machine');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Machine Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter MachineNo to search\",\n      value: searchMachineNo,\n      onChange: e => setSearchMachineNo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MachineNo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ModelNo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MachineType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MachineStatus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: machines.length > 0 ? machines.map(machine => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine.MachineNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine.ModelNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine.MachineType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine.Category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine.MachineStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(machine.MachineNo, {\n                ModelNo: 'Updated Model'\n              }),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(machine.MachineNo),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, machine.MachineNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No machines found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(MachineManagement, \"Qa2+g5mYfYF/bpnoSaq9Qew381s=\");\n_c = MachineManagement;\nexport default MachineManagement;\nvar _c;\n$RefreshReg$(_c, \"MachineManagement\");","map":{"version":3,"names":["React","useState","useEffect","getAllMachines","searchMachineByMachineNo","deleteMachineByMachineNo","updateMachineByMachineNo","jsxDEV","_jsxDEV","MachineManagement","_s","machines","setMachines","error","setError","searchMachineNo","setSearchMachineNo","selectedMachine","setSelectedMachine","fetchMachines","result","data","err","handleSearch","handleDelete","MachineNo","success","filter","machine","handleUpdate","updatedData","map","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","length","ModelNo","MachineType","Category","MachineStatus","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/MachineDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllMachines, searchMachineByMachineNo, deleteMachineByMachineNo, updateMachineByMachineNo } from '../API/MachineApi';\r\n\r\nconst MachineManagement = () => {\r\n  const [machines, setMachines] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [searchMachineNo, setSearchMachineNo] = useState('');\r\n  const [selectedMachine, setSelectedMachine] = useState(null);\r\n\r\n  // Fetch all machines on component mount\r\n  useEffect(() => {\r\n    const fetchMachines = async () => {\r\n      try {\r\n        const result = await getAllMachines();\r\n        setMachines(result.data);\r\n      } catch (err) {\r\n        setError('Error fetching machines');\r\n      }\r\n    };\r\n    fetchMachines();\r\n  }, []);\r\n\r\n  // Handle search by MachineNo\r\n  const handleSearch = async () => {\r\n    if (searchMachineNo) {\r\n      try {\r\n        const result = await searchMachineByMachineNo(searchMachineNo);\r\n        setMachines(result.data);\r\n      } catch (err) {\r\n        setError('Machine not found');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle delete machine by MachineNo\r\n  const handleDelete = async (MachineNo) => {\r\n    try {\r\n      const result = await deleteMachineByMachineNo(MachineNo);\r\n      if (result.success) {\r\n        // Update the machines list after successful deletion\r\n        setMachines(machines.filter(machine => machine.MachineNo !== MachineNo));\r\n      }\r\n    } catch (err) {\r\n      setError('Error deleting machine');\r\n    }\r\n  };\r\n\r\n  // Handle update machine (this could involve a form to collect updated data)\r\n  const handleUpdate = async (MachineNo, updatedData) => {\r\n    try {\r\n      const result = await updateMachineByMachineNo(MachineNo, updatedData);\r\n      // Update the machine in the list with the updated data\r\n      setMachines(machines.map(machine =>\r\n        machine.MachineNo === MachineNo ? { ...machine, ...updatedData } : machine\r\n      ));\r\n    } catch (err) {\r\n      setError('Error updating machine');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Machine Management</h1>\r\n\r\n      {/* Search */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter MachineNo to search\"\r\n        value={searchMachineNo}\r\n        onChange={(e) => setSearchMachineNo(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {/* Machine List */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>MachineNo</th>\r\n            <th>ModelNo</th>\r\n            <th>MachineType</th>\r\n            <th>Category</th>\r\n            <th>MachineStatus</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {machines.length > 0 ? (\r\n            machines.map((machine) => (\r\n              <tr key={machine.MachineNo}>\r\n                <td>{machine.MachineNo}</td>\r\n                <td>{machine.ModelNo}</td>\r\n                <td>{machine.MachineType}</td>\r\n                <td>{machine.Category}</td>\r\n                <td>{machine.MachineStatus}</td>\r\n                <td>\r\n                  <button onClick={() => handleUpdate(machine.MachineNo, { ModelNo: 'Updated Model' })}>Update</button>\r\n                  <button onClick={() => handleDelete(machine.MachineNo)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\">No machines found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}