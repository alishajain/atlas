{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\n\n// Create a new color matching entry\nconst addColorMatching = async colorData => {\n  console.log(colorData);\n  try {\n    const response = await axios.post(`${API_URL}/add-color-matching`, colorData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"API Response:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating color matching:\", error.response ? error.response.data : error.message);\n    throw new Error(`Error during API call: ${error.response ? error.response.data : error.message}`);\n  }\n};\n\n// Get all color matching entries\nconst getAllColorMatching = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/color-matching`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all color matching entries:\", error);\n    throw error;\n  }\n};\n\n// Get color matching by RSN\nconst getColorMatchingByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Update color matching entry by RSN\nconst updateColorMatching = async (RSN, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/update-color-matching/${RSN}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Delete color matching entry by RSN\nconst deleteColorMatching = async RSN => {\n  try {\n    const response = await axios.delete(`${API_URL}/delete-color-matching/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\nexport { addColorMatching, getAllColorMatching, getColorMatchingByRSN, updateColorMatching, deleteColorMatching };","map":{"version":3,"names":["axios","API_URL","addColorMatching","colorData","console","log","response","post","headers","data","error","message","Error","getAllColorMatching","get","getColorMatchingByRSN","RSN","updateColorMatching","updatedData","put","deleteColorMatching","delete"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Create a new color matching entry\r\nconst addColorMatching = async (colorData) => {\r\n\r\n    console.log(colorData);\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add-color-matching`, colorData, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    console.log(\"API Response:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating color matching:\", error.response ? error.response.data : error.message);\r\n\r\n    throw new Error(`Error during API call: ${error.response ? error.response.data : error.message}`);\r\n  }\r\n};\r\n\r\n// Get all color matching entries\r\nconst getAllColorMatching = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color matching entries:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get color matching by RSN\r\nconst getColorMatchingByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color matching entry by RSN\r\nconst updateColorMatching = async (RSN, updatedData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/update-color-matching/${RSN}`, updatedData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color matching entry by RSN\r\nconst deleteColorMatching = async (RSN) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/delete-color-matching/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorMatching,\r\n  getAllColorMatching,\r\n  getColorMatchingByRSN,\r\n  updateColorMatching,\r\n  deleteColorMatching,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EAE1CC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACxB,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,qBAAqB,EAAEE,SAAS,EAAE;MAC5EK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACG,IAAI,CAAC;IAC3C,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACG,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAErG,MAAM,IAAIC,KAAK,CAAC,0BAA0BF,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACG,IAAI,GAAGC,KAAK,CAACC,OAAO,EAAE,CAAC;EACnG;AACF,CAAC;;AAED;AACA,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,iBAAiB,CAAC;IAC7D,OAAOK,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMK,qBAAqB,GAAG,MAAOC,GAAG,IAAK;EAC3C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,mBAAmBe,GAAG,EAAE,CAAC;IACpE,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,yCAAyCM,GAAG,GAAG,EAAEN,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMO,mBAAmB,GAAG,MAAAA,CAAOD,GAAG,EAAEE,WAAW,KAAK;EACtD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,0BAA0Be,GAAG,EAAE,EAAEE,WAAW,CAAC;IACxF,OAAOZ,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,yCAAyCM,GAAG,GAAG,EAAEN,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMU,mBAAmB,GAAG,MAAOJ,GAAG,IAAK;EACzC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACqB,MAAM,CAAC,GAAGpB,OAAO,0BAA0Be,GAAG,EAAE,CAAC;IAC9E,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,yCAAyCM,GAAG,GAAG,EAAEN,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SACER,gBAAgB,EAChBW,mBAAmB,EACnBE,qBAAqB,EACrBE,mBAAmB,EACnBG,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}