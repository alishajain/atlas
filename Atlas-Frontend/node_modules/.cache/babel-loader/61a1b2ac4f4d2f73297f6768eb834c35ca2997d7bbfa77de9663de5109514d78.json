{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  userId: null\n};\nconst UserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    // Action to set the userId when logged in\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n    // Action to reset userId when logged out\n    logout: state => {\n      state.userId = null;\n    }\n  }\n});\n\n// Export actions\nexport const {\n  setUserId,\n  logout\n} = UserSlice.actions;\n\n// Export the reducer\nexport default UserSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","userId","UserSlice","name","reducers","setUserId","state","action","payload","logout","actions","reducer"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Redux/UserSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  userId: null,\r\n};\r\n\r\nconst UserSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    // Action to set the userId when logged in\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    // Action to reset userId when logged out\r\n    logout: (state) => {\r\n      state.userId = null;\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { setUserId, logout } = UserSlice.actions;\r\n\r\n// Export the reducer\r\nexport default UserSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACR;IACAC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO;IAC/B,CAAC;IACD;IACAC,MAAM,EAAGH,KAAK,IAAK;MACjBA,KAAK,CAACL,MAAM,GAAG,IAAI;IACrB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEI,SAAS;EAAEI;AAAO,CAAC,GAAGP,SAAS,CAACQ,OAAO;;AAEtD;AACA,eAAeR,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}