{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\PanelSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanelSelection = () => {\n  _s();\n  // Defining all states using an object for simplicity\n  const [selectedStates, setSelectedStates] = useState({\n    frontRight: false,\n    frontLeft: false,\n    frontComplete: false,\n    backRight: false,\n    backLeft: false,\n    backComplete: false,\n    sleeveRight: false,\n    sleeveLeft: false,\n    bothSleeves: false,\n    tape: false,\n    kharcha1: false,\n    kharcha2: false,\n    kharcha3: false\n  });\n\n  // Handle state changes for checkboxes\n  const handleCheckboxChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelectedStates(prevState => ({\n      ...prevState,\n      [name]: checked\n    }));\n  };\n\n  // Handle \"Next\" button click\n  const handleNext = () => {\n    // For now, just log the selected states\n    console.log(\"Selected states:\", selectedStates);\n    // You can add additional logic here, like navigating to another page or step\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(selectedStates).map(state => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: state,\n          checked: selectedStates[state],\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), state]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, state, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(PanelSelection, \"tYMiio1avkNpL2Wh/I4D8texPPk=\");\n_c = PanelSelection;\nexport default PanelSelection;\nvar _c;\n$RefreshReg$(_c, \"PanelSelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PanelSelection","_s","selectedStates","setSelectedStates","frontRight","frontLeft","frontComplete","backRight","backLeft","backComplete","sleeveRight","sleeveLeft","bothSleeves","tape","kharcha1","kharcha2","kharcha3","handleCheckboxChange","event","name","checked","target","prevState","handleNext","console","log","children","Object","keys","map","state","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/PanelSelection.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst PanelSelection = () => {\r\n    // Defining all states using an object for simplicity\r\n    const [selectedStates, setSelectedStates] = useState({\r\n        frontRight: false,\r\n        frontLeft: false,\r\n        frontComplete: false,\r\n        backRight: false,\r\n        backLeft: false,\r\n        backComplete: false,\r\n        sleeveRight: false,\r\n        sleeveLeft: false,\r\n        bothSleeves: false,\r\n        tape: false,\r\n        kharcha1: false,\r\n        kharcha2: false,\r\n        kharcha3: false\r\n    });\r\n\r\n    // Handle state changes for checkboxes\r\n    const handleCheckboxChange = (event) => {\r\n        const { name, checked } = event.target;\r\n        setSelectedStates((prevState) => ({\r\n            ...prevState,\r\n            [name]: checked\r\n        }));\r\n    };\r\n\r\n    // Handle \"Next\" button click\r\n    const handleNext = () => {\r\n        // For now, just log the selected states\r\n        console.log(\"Selected states:\", selectedStates);\r\n        // You can add additional logic here, like navigating to another page or step\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {Object.keys(selectedStates).map((state) => (\r\n                <div key={state}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name={state}\r\n                            checked={selectedStates[state]}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        {state}\r\n                    </label>\r\n                </div>\r\n            ))}\r\n\r\n            {/* Next Button */}\r\n            <button onClick={handleNext}>\r\n                Next\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PanelSelection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC;IACjDO,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IAChBC,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE,KAAK;IAClBC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACpC,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACtClB,iBAAiB,CAAEmB,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrB;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEvB,cAAc,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIH,OAAA;IAAA2B,QAAA,GACKC,MAAM,CAACC,IAAI,CAAC1B,cAAc,CAAC,CAAC2B,GAAG,CAAEC,KAAK,iBACnC/B,OAAA;MAAA2B,QAAA,eACI3B,OAAA;QAAA2B,QAAA,gBACI3B,OAAA;UACIgC,IAAI,EAAC,UAAU;UACfZ,IAAI,EAAEW,KAAM;UACZV,OAAO,EAAElB,cAAc,CAAC4B,KAAK,CAAE;UAC/BE,QAAQ,EAAEf;QAAqB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EACDN,KAAK;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GATFN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACR,CAAC,eAGFrC,OAAA;MAAQsC,OAAO,EAAEd,UAAW;MAAAG,QAAA,EAAC;IAE7B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACnC,EAAA,CAxDID,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AA0DpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}