{"ast":null,"code":"import axios from 'axios';\n\n// Set base URL for API (adjust as needed)\nconst API_URL = 'http://localhost:5000'; // Change to your server URL\n\n// Function to upload an image\nexport const uploadImage = async (imageData, imageName) => {\n  const formData = new FormData();\n  formData.append('image', imageData); // File data\n  formData.append('imageName', imageName); // Image name\n  try {\n    const response = await axios.post(`${API_URL}/upload-image`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n\n    // Check for success response and return the data\n    console.log(\"Alisha\", response.data);\n    return response.data;\n  } catch (error) {\n    // Enhanced error logging for debugging\n    if (error.response) {\n      // Server responded with an error (e.g., 4xx or 5xx)\n      console.error(\"Error uploading image:\", error.response.data);\n      console.error(\"Status Code:\", error.response.status);\n      console.error(\"Headers:\", error.response.headers);\n    } else if (error.request) {\n      // No response was received from the server\n      console.error(\"No response from server:\", error.request);\n    } else {\n      // Something else caused the error (e.g., bad configuration)\n      console.error(\"Error during request setup:\", error.message);\n    }\n\n    // Rethrow error so it can be handled further if needed\n    throw error;\n  }\n};\n\n// Function to fetch image by RSN\nexport const getImageByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/image/${RSN}`);\n    return response.data;\n  } catch (error) {\n    // Enhanced error logging for fetching images\n    if (error.response) {\n      console.error(\"Error fetching image:\", error.response.data);\n      console.error(\"Status Code:\", error.response.status);\n    } else if (error.request) {\n      console.error(\"No response from server:\", error.request);\n    } else {\n      console.error(\"Error during request setup:\", error.message);\n    }\n\n    // Rethrow error so it can be handled further if needed\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","uploadImage","imageData","imageName","formData","FormData","append","response","post","headers","console","log","data","error","status","request","message","getImageByRSN","RSN","get"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ImageApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set base URL for API (adjust as needed)\r\nconst API_URL = 'http://localhost:5000'; // Change to your server URL\r\n\r\n// Function to upload an image\r\nexport const uploadImage = async (imageData, imageName) => {\r\n  const formData = new FormData();\r\n  formData.append('image', imageData); // File data\r\n  formData.append('imageName', imageName); // Image name\r\n  try {\r\n    const response = await axios.post(`${API_URL}/upload-image`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    // Check for success response and return the data\r\n    console.log(\"Alisha\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Enhanced error logging for debugging\r\n    if (error.response) {\r\n      // Server responded with an error (e.g., 4xx or 5xx)\r\n      console.error(\"Error uploading image:\", error.response.data);\r\n      console.error(\"Status Code:\", error.response.status);\r\n      console.error(\"Headers:\", error.response.headers);\r\n    } else if (error.request) {\r\n      // No response was received from the server\r\n      console.error(\"No response from server:\", error.request);\r\n    } else {\r\n      // Something else caused the error (e.g., bad configuration)\r\n      console.error(\"Error during request setup:\", error.message);\r\n    }\r\n\r\n    // Rethrow error so it can be handled further if needed\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to fetch image by RSN\r\nexport const getImageByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/image/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Enhanced error logging for fetching images\r\n    if (error.response) {\r\n      console.error(\"Error fetching image:\", error.response.data);\r\n      console.error(\"Status Code:\", error.response.status);\r\n    } else if (error.request) {\r\n      console.error(\"No response from server:\", error.request);\r\n    } else {\r\n      console.error(\"Error during request setup:\", error.message);\r\n    }\r\n\r\n    // Rethrow error so it can be handled further if needed\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,SAAS,KAAK;EACzD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,SAAS,CAAC,CAAC,CAAC;EACrCE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,SAAS,CAAC,CAAC,CAAC;EACzC,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,eAAe,EAAEI,QAAQ,EAAE;MACrEK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;;IAEF;IACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IACpC,OAAOL,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAClB;MACAG,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACN,QAAQ,CAACK,IAAI,CAAC;MAC5DF,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACN,QAAQ,CAACO,MAAM,CAAC;MACpDJ,OAAO,CAACG,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACN,QAAQ,CAACE,OAAO,CAAC;IACnD,CAAC,MAAM,IAAII,KAAK,CAACE,OAAO,EAAE;MACxB;MACAL,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D,CAAC,MAAM;MACL;MACAL,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACG,OAAO,CAAC;IAC7D;;IAEA;IACA,MAAMH,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAG,MAAOC,GAAG,IAAK;EAC1C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMR,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,UAAUkB,GAAG,EAAE,CAAC;IAC3D,OAAOX,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAClBG,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACN,QAAQ,CAACK,IAAI,CAAC;MAC3DF,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACN,QAAQ,CAACO,MAAM,CAAC;IACtD,CAAC,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;MACxBL,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D,CAAC,MAAM;MACLL,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACG,OAAO,CAAC;IAC7D;;IAEA;IACA,MAAMH,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}