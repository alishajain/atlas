{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddKnittingDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { addKnittingDetails } from \"../API/SampleApi\"; // Assuming Api.js is in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddKnittingDetailsForm = () => {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  const selectedStates = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedFields) || {}; // Access selected states (checkbox selections)\n  const RSN = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.RSN) || \"\"; // Access RSN\n\n  const [formData, setFormData] = useState({\n    RSN: RSN,\n    Size: \"\",\n    FrontRight: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    FrontLeft: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    FrontComplete: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BackRight: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BackLeft: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BackComplete: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    SleeveRight: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    SleeveLeft: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    BothSleeves: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Tape: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Collar: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Kharcha1: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Kharcha2: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Kharcha3: {\n      Weight: \"\",\n      Time: \"\",\n      MachineNo: \"\"\n    },\n    Total: {\n      Weight: 0,\n      Time: 0\n    } // Initial values for Total\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    // Initialize formData based on selectedStates\n    setFormData(prevData => {\n      const newFormData = {\n        ...prevData\n      };\n      Object.keys(newFormData).forEach(key => {\n        if (selectedStates[key]) {\n          newFormData[key] = {\n            Weight: \"\",\n            Time: \"\",\n            MachineNo: \"\"\n          }; // Initialize with new fields\n        }\n      });\n      return newFormData;\n    });\n  }, [selectedStates]); // Re-run when selectedStates change\n\n  // Function to handle change in any input field (weight, time, machine model, machine type)\n  const handleChange = (e, field, type) => {\n    const {\n      value\n    } = e.target;\n    setFormData(prevData => {\n      const newFormData = {\n        ...prevData\n      };\n      if (!newFormData[field]) {\n        newFormData[field] = {\n          Weight: \"\",\n          Time: \"\",\n          MachineNo: \"\"\n        }; // Initialize if undefined\n      }\n\n      // Set value to 0 if it's empty for weight/time or empty string for machine fields\n      if (type === \"Weight\" || type === \"Time\") {\n        newFormData[field][type] = value === \"\" ? 0 : value; // Set to 0 if empty\n      } else {\n        newFormData[field][type] = value === \"\" ? \"\" : value; // Set to empty string if empty\n      }\n\n      // Recalculate total weight and total time\n      newFormData.Total = calculateTotal(newFormData);\n      return newFormData;\n    });\n  };\n\n  // Function to calculate the total weight and total time\n  const calculateTotal = data => {\n    let totalWeight = 0;\n    let totalTime = 0;\n\n    // Iterate over the fields that contain weight and time\n    Object.keys(data).forEach(key => {\n      if (key !== \"RSN\" && key !== \"Size\" && key !== \"Total\") {\n        const {\n          Weight,\n          Time\n        } = data[key];\n        totalWeight += parseFloat(Weight) || 0; // Add weight, default to 0 if not a valid number\n        totalTime += parseFloat(Time) || 0; // Add time, default to 0 if not a valid number\n      }\n    });\n    return {\n      Weight: totalWeight,\n      Time: totalTime\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Ensure all fields have weight, time, machine Model and machine Type\n    const updatedFormData = {\n      ...formData\n    };\n    Object.keys(updatedFormData).forEach(field => {\n      if (typeof updatedFormData[field] === \"object\") {\n        const {\n          Weight,\n          Time,\n          MachineNo\n        } = updatedFormData[field];\n\n        // Set to 0 if Weight or Time is empty\n        if (Weight === \"\") updatedFormData[field].Weight = 0;\n        if (Time === \"\") updatedFormData[field].Time = 0;\n        if (MachineModel === \"\") updatedFormData[field].MachineNo = 0;\n      }\n    });\n\n    // Start loading indicator\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    try {\n      // Send the data to the backend via the API function\n      const response = await addKnittingDetails(updatedFormData);\n\n      // On success, display success message and clear form\n      setSuccess(\"Knitting details added successfully!\");\n      setFormData({\n        RSN: \"\",\n        Size: \"\",\n        FrontRight: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        FrontLeft: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        FrontComplete: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        BackRight: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        BackLeft: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        BackComplete: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        SleeveRight: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        SleeveLeft: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        BothSleeves: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        Tape: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        Collar: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        Kharcha1: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        Kharcha2: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        Kharcha3: {\n          Weight: \"\",\n          Time: \"\",\n          MachineModel: \"\",\n          MachineType: \"\"\n        },\n        Total: {\n          Weight: 0,\n          Time: 0\n        }\n      });\n    } catch (error) {\n      // Handle errors if the API request fails\n      setError(error.message || \"An error occurred while adding knitting details\");\n    } finally {\n      // End loading indicator\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Knitting Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Machine Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Machine Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"RSN:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"RSN\",\n                value: formData.RSN,\n                onChange: e => setFormData({\n                  ...formData,\n                  RSN: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"Size\",\n                value: formData.Size,\n                onChange: e => setFormData({\n                  ...formData,\n                  Size: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), Object.keys(selectedStates).filter(field => selectedStates[field]) // Filter only selected fields\n          .map(field => {\n            var _formData$field, _formData$field2, _formData$field3, _formData$field4;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: ((_formData$field = formData[field]) === null || _formData$field === void 0 ? void 0 : _formData$field.Weight) || \"\",\n                  onChange: e => handleChange(e, field, \"Weight\"),\n                  placeholder: \"Weight\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: ((_formData$field2 = formData[field]) === null || _formData$field2 === void 0 ? void 0 : _formData$field2.Time) || \"\",\n                  onChange: e => handleChange(e, field, \"Time\"),\n                  placeholder: \"Time\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_formData$field3 = formData[field]) === null || _formData$field3 === void 0 ? void 0 : _formData$field3.MachineModel) || \"\",\n                  onChange: e => handleChange(e, field, \"MachineModel\"),\n                  placeholder: \"Machine Model\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_formData$field4 = formData[field]) === null || _formData$field4 === void 0 ? void 0 : _formData$field4.MachineType) || \"\",\n                  onChange: e => handleChange(e, field, \"MachineType\"),\n                  placeholder: \"Machine Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, field, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formData.Total.Weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formData.Total.Time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(AddKnittingDetailsForm, \"ci5Qxd12ThRlDA/7pw1429fT/jM=\", false, function () {\n  return [useLocation];\n});\n_c = AddKnittingDetailsForm;\nexport default AddKnittingDetailsForm;\nvar _c;\n$RefreshReg$(_c, \"AddKnittingDetailsForm\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","addKnittingDetails","jsxDEV","_jsxDEV","AddKnittingDetailsForm","_s","_location$state","_location$state2","location","selectedStates","state","selectedFields","RSN","formData","setFormData","Size","FrontRight","Weight","Time","MachineNo","FrontLeft","FrontComplete","BackRight","BackLeft","BackComplete","SleeveRight","SleeveLeft","BothSleeves","Tape","Collar","Kharcha1","Kharcha2","Kharcha3","Total","loading","setLoading","error","setError","success","setSuccess","prevData","newFormData","Object","keys","forEach","key","handleChange","e","field","type","value","target","calculateTotal","data","totalWeight","totalTime","parseFloat","handleSubmit","preventDefault","updatedFormData","MachineModel","response","MachineType","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","border","colSpan","name","onChange","required","filter","map","_formData$field","_formData$field2","_formData$field3","_formData$field4","placeholder","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddKnittingDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { addKnittingDetails } from \"../API/SampleApi\"; // Assuming Api.js is in the same directory\r\n\r\nconst AddKnittingDetailsForm = () => {\r\n  const location = useLocation();\r\n  const selectedStates = location.state?.selectedFields || {}; // Access selected states (checkbox selections)\r\n  const RSN = location.state?.RSN || \"\"; // Access RSN\r\n\r\n  const [formData, setFormData] = useState({\r\n    RSN: RSN,\r\n    Size: \"\",\r\n    FrontRight: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    FrontLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    FrontComplete: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    BackRight: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    BackLeft: { Weight: \"\", Time: \"\", MachineNo: \"\" },\r\n    BackComplete: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    SleeveRight: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    SleeveLeft: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    BothSleeves: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    Tape: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    Collar: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    Kharcha1: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    Kharcha2: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    Kharcha3: { Weight: \"\", Time: \"\", MachineNo: \"\"},\r\n    Total: { Weight: 0, Time: 0 }, // Initial values for Total\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize formData based on selectedStates\r\n    setFormData((prevData) => {\r\n      const newFormData = { ...prevData };\r\n      Object.keys(newFormData).forEach((key) => {\r\n        if (selectedStates[key]) {\r\n          newFormData[key] = {\r\n            Weight: \"\",\r\n            Time: \"\",\r\n            MachineNo: \"\",\r\n          }; // Initialize with new fields\r\n        }\r\n      });\r\n      return newFormData;\r\n    });\r\n  }, [selectedStates]); // Re-run when selectedStates change\r\n\r\n  // Function to handle change in any input field (weight, time, machine model, machine type)\r\n  const handleChange = (e, field, type) => {\r\n    const { value } = e.target;\r\n    setFormData((prevData) => {\r\n      const newFormData = { ...prevData };\r\n      if (!newFormData[field]) {\r\n        newFormData[field] = {\r\n          Weight: \"\",\r\n          Time: \"\",\r\n          MachineNo: \"\",\r\n        }; // Initialize if undefined\r\n      }\r\n\r\n      // Set value to 0 if it's empty for weight/time or empty string for machine fields\r\n      if (type === \"Weight\" || type === \"Time\") {\r\n        newFormData[field][type] = value === \"\" ? 0 : value; // Set to 0 if empty\r\n      } else {\r\n        newFormData[field][type] = value === \"\" ? \"\" : value; // Set to empty string if empty\r\n      }\r\n\r\n      // Recalculate total weight and total time\r\n      newFormData.Total = calculateTotal(newFormData);\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  // Function to calculate the total weight and total time\r\n  const calculateTotal = (data) => {\r\n    let totalWeight = 0;\r\n    let totalTime = 0;\r\n\r\n    // Iterate over the fields that contain weight and time\r\n    Object.keys(data).forEach((key) => {\r\n      if (key !== \"RSN\" && key !== \"Size\" && key !== \"Total\") {\r\n        const { Weight, Time } = data[key];\r\n        totalWeight += parseFloat(Weight) || 0; // Add weight, default to 0 if not a valid number\r\n        totalTime += parseFloat(Time) || 0; // Add time, default to 0 if not a valid number\r\n      }\r\n    });\r\n\r\n    return { Weight: totalWeight, Time: totalTime };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure all fields have weight, time, machine Model and machine Type\r\n    const updatedFormData = { ...formData };\r\n\r\n    Object.keys(updatedFormData).forEach((field) => {\r\n      if (typeof updatedFormData[field] === \"object\") {\r\n        const { Weight, Time, MachineNo } = updatedFormData[field];\r\n\r\n        // Set to 0 if Weight or Time is empty\r\n        if (Weight === \"\") updatedFormData[field].Weight = 0;\r\n        if (Time === \"\") updatedFormData[field].Time = 0;\r\n        if (MachineModel === \"\") updatedFormData[field].MachineNo = 0;\r\n      }\r\n    });\r\n\r\n    // Start loading indicator\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    try {\r\n      // Send the data to the backend via the API function\r\n      const response = await addKnittingDetails(updatedFormData);\r\n\r\n      // On success, display success message and clear form\r\n      setSuccess(\"Knitting details added successfully!\");\r\n      setFormData({\r\n        RSN: \"\",\r\n        Size: \"\",\r\n        FrontRight: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        FrontLeft: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        FrontComplete: {\r\n          Weight: \"\",\r\n          Time: \"\",\r\n          MachineModel: \"\",\r\n          MachineType: \"\",\r\n        },\r\n        BackRight: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        BackLeft: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        BackComplete: {\r\n          Weight: \"\",\r\n          Time: \"\",\r\n          MachineModel: \"\",\r\n          MachineType: \"\",\r\n        },\r\n        SleeveRight: {\r\n          Weight: \"\",\r\n          Time: \"\",\r\n          MachineModel: \"\",\r\n          MachineType: \"\",\r\n        },\r\n        SleeveLeft: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        BothSleeves: {\r\n          Weight: \"\",\r\n          Time: \"\",\r\n          MachineModel: \"\",\r\n          MachineType: \"\",\r\n        },\r\n        Tape: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        Collar: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        Kharcha1: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        Kharcha2: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        Kharcha3: { Weight: \"\", Time: \"\", MachineModel: \"\", MachineType: \"\" },\r\n        Total: { Weight: 0, Time: 0 },\r\n      });\r\n    } catch (error) {\r\n      // Handle errors if the API request fails\r\n      setError(\r\n        error.message || \"An error occurred while adding knitting details\"\r\n      );\r\n    } finally {\r\n      // End loading indicator\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add Knitting Details</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              <th>Field</th>\r\n              <th>Weight</th>\r\n              <th>Time</th>\r\n              <th>Machine Model</th>\r\n              <th>Machine Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Static Fields (RSN and Size) */}\r\n            <tr>\r\n              <td>RSN:</td>\r\n              <td colSpan=\"4\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"RSN\"\r\n                  value={formData.RSN}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, RSN: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Size:</td>\r\n              <td colSpan=\"4\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"Size\"\r\n                  value={formData.Size}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, Size: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            {/* Dynamic Fields Based on Selected States */}\r\n            {Object.keys(selectedStates)\r\n              .filter((field) => selectedStates[field]) // Filter only selected fields\r\n              .map((field) => (\r\n                <tr key={field}>\r\n                  <td>{field}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={formData[field]?.Weight || \"\"}\r\n                      onChange={(e) => handleChange(e, field, \"Weight\")}\r\n                      placeholder=\"Weight\"\r\n                      required\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={formData[field]?.Time || \"\"}\r\n                      onChange={(e) => handleChange(e, field, \"Time\")}\r\n                      placeholder=\"Time\"\r\n                      required\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[field]?.MachineModel || \"\"}\r\n                      onChange={(e) => handleChange(e, field, \"MachineModel\")}\r\n                      placeholder=\"Machine Model\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[field]?.MachineType || \"\"}\r\n                      onChange={(e) => handleChange(e, field, \"MachineType\")}\r\n                      placeholder=\"Machine Type\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n            {/* Total Row */}\r\n            <tr>\r\n              <td>Total</td>\r\n              <td>{formData.Total.Weight}</td>\r\n              <td>{formData.Total.Time}</td>\r\n              <td colSpan=\"2\"></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Submitting...\" : \"Submit\"}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Display Success or Error Messages */}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddKnittingDetailsForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}