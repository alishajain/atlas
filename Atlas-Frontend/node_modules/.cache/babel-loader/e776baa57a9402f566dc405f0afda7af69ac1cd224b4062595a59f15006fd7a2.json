{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\n\n// Create a new color matching entry\nconst addColorMatching = async colorData => {\n  try {\n    const response = await axios.post(`${API_URL}/add-color-matching`, colorData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating color matching:\", error);\n    throw error;\n  }\n};\n\n// Get all color matching entries\nconst getAllColorMatching = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/color-matching`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching all color matching entries:\", error);\n    throw error;\n  }\n};\n\n// Get color matching by RSN\nconst getColorMatchingByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Update color matching entry by RSN\nconst updateColorMatching = async (RSN, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/update-color-matching/${RSN}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\n\n// Delete color matching entry by RSN\nconst deleteColorMatching = async RSN => {\n  try {\n    const response = await axios.delete(`${API_URL}/delete-color-matching/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\n    throw error;\n  }\n};\nexport { addColorMatching, getAllColorMatching, getColorMatchingByRSN, updateColorMatching, deleteColorMatching };","map":{"version":3,"names":["axios","API_URL","addColorMatching","colorData","response","post","data","error","console","getAllColorMatching","get","getColorMatchingByRSN","RSN","updateColorMatching","updatedData","put","deleteColorMatching","delete"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ColorApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Create a new color matching entry\r\nconst addColorMatching = async (colorData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add-color-matching`, colorData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating color matching:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all color matching entries\r\nconst getAllColorMatching = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all color matching entries:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get color matching by RSN\r\nconst getColorMatchingByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/color-matching/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update color matching entry by RSN\r\nconst updateColorMatching = async (RSN, updatedData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/update-color-matching/${RSN}`, updatedData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete color matching entry by RSN\r\nconst deleteColorMatching = async (RSN) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/delete-color-matching/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting color matching for RSN ${RSN}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  addColorMatching,\r\n  getAllColorMatching,\r\n  getColorMatchingByRSN,\r\n  updateColorMatching,\r\n  deleteColorMatching,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,qBAAqB,EAAEE,SAAS,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,iBAAiB,CAAC;IAC7D,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMI,qBAAqB,GAAG,MAAOC,GAAG,IAAK;EAC3C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,mBAAmBW,GAAG,EAAE,CAAC;IACpE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyCK,GAAG,GAAG,EAAEL,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMM,mBAAmB,GAAG,MAAAA,CAAOD,GAAG,EAAEE,WAAW,KAAK;EACtD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,0BAA0BW,GAAG,EAAE,EAAEE,WAAW,CAAC;IACxF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyCK,GAAG,GAAG,EAAEL,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMS,mBAAmB,GAAG,MAAOJ,GAAG,IAAK;EACzC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,0BAA0BW,GAAG,EAAE,CAAC;IAC9E,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyCK,GAAG,GAAG,EAAEL,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SACEL,gBAAgB,EAChBO,mBAAmB,EACnBE,qBAAqB,EACrBE,mBAAmB,EACnBG,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}