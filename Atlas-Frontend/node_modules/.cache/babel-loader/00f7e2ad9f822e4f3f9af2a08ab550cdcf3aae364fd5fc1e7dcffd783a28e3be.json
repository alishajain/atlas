{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  userId: ''\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserId: (state, action) => {\n      state.userId = action.payload; // Store the userId\n    },\n    logout: state => {\n      state.userId = ''; // Clear the userId on logout\n    }\n  }\n});\nexport const {\n  setUserId,\n  logout\n} = userSlice.actions; // Export actions\nexport default userSlice.reducer; // Export reducer","map":{"version":3,"names":["createSlice","initialState","userId","userSlice","name","reducers","setUserId","state","action","payload","logout","actions","reducer"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Redux/UserSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  userId: '',\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;  // Store the userId\r\n    },\r\n    logout: (state) => {\r\n      state.userId = '';  // Clear the userId on logout\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUserId, logout } = userSlice.actions;  // Export actions\r\nexport default userSlice.reducer;  // Export reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO,CAAC,CAAE;IAClC,CAAC;IACDC,MAAM,EAAGH,KAAK,IAAK;MACjBA,KAAK,CAACL,MAAM,GAAG,EAAE,CAAC,CAAE;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,SAAS;EAAEI;AAAO,CAAC,GAAGP,SAAS,CAACQ,OAAO,CAAC,CAAE;AACzD,eAAeR,SAAS,CAACS,OAAO,CAAC,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}