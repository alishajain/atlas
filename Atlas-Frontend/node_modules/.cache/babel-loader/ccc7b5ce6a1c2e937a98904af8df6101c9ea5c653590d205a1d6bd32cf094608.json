{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCommentsByRSN, addComment } from '../API/CommentApi';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  RSN\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [userId, setUserId] = useState('');\n\n  // Fetch comments on component mount\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const result = await getCommentsByRSN(RSN);\n        setComments(result.data);\n      } catch (error) {\n        console.error('Failed to fetch comments:', error.message);\n      }\n    };\n    fetchComments();\n  }, [RSN]);\n\n  // Handle submitting a new comment\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const result = await addComment(RSN, userId, newComment);\n      setComments(prevComments => [...prevComments, {\n        Comments: newComment\n      }]);\n      setNewComment('');\n      alert(result.message || 'Comment added successfully');\n    } catch (error) {\n      alert(error.message || 'Failed to add comment');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Comments for RSN: \", RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comment Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No comments available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.Comments\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Enter your comment here\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"hkXl00D5MVvEdD16l47SqmJgUTU=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","getCommentsByRSN","addComment","useSelector","jsxDEV","_jsxDEV","Comments","RSN","_s","comments","setComments","newComment","setNewComment","userId","setUserId","fetchComments","result","data","error","console","message","handleSubmit","e","preventDefault","prevComments","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","comment","index","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getCommentsByRSN, addComment } from '../API/CommentApi';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Comments = ({ RSN }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n\r\n  // Fetch comments on component mount\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const result = await getCommentsByRSN(RSN);\r\n        setComments(result.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch comments:', error.message);\r\n      }\r\n    };\r\n    fetchComments();\r\n  }, [RSN]);\r\n\r\n  // Handle submitting a new comment\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await addComment(RSN, userId, newComment);\r\n      setComments((prevComments) => [...prevComments, { Comments: newComment }]);\r\n      setNewComment('');\r\n      alert(result.message || 'Comment added successfully');\r\n    } catch (error) {\r\n      alert(error.message || 'Failed to add comment');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comments for RSN: {RSN}</h2>\r\n      <div>\r\n        <h3>Comment Section</h3>\r\n        <ul>\r\n          {comments.length === 0 ? (\r\n            <li>No comments available</li>\r\n          ) : (\r\n            comments.map((comment, index) => (\r\n              <li key={index}>{comment.Comments}</li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add a Comment</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Enter your comment here\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}