{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\UpdateKnittingDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\"; // useLocation to get passed state\nimport { updateKnittingDetails } from \"../API/SampleApi\"; // Assuming you have an API to update data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateKnittingRecord = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    RSN,\n    knittingData\n  } = location.state || {};\n  const [updatedData, setUpdatedData] = useState(knittingData || {});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  useEffect(() => {\n    if (!knittingData) {\n      setError(\"No knitting data available.\");\n    }\n  }, [knittingData]);\n\n  // Handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!updatedData) {\n      setError(\"No data to update.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await updateKnittingDetails(RSN, updatedData);\n      setSuccessMessage(response.message);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Failed to update knitting details.\");\n      setSuccessMessage(\"\");\n    } finally {\n      setLoading(false);\n    }\n    navigate(`/show-sample/${RSN}`, {\n      state: {\n        RSN\n      }\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n\n  // Render form in a table format\n  const renderTableRows = obj => {\n    return Object.entries(obj).map(([key, value]) => {\n      if (key === \"RSN\") {\n        // If the key is 'RSN', make it read-only\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: key,\n              value: value || \"\",\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this);\n      } else if (typeof value === \"object\" && value !== null) {\n        // If the value is an object, recurse to render nested fields\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: renderTableRows(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      } else {\n        // For other fields, make them editable\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: key,\n              value: value || \"\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Update Knitting Details for RSN: \", RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTableRows(updatedData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          marginTop: \"20px\"\n        },\n        children: loading ? \"Updating...\" : \"Update Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateKnittingRecord, \"VsuSRziL89BqkTPRKgsCKxfbb2c=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UpdateKnittingRecord;\nexport default UpdateKnittingRecord;\nvar _c;\n$RefreshReg$(_c, \"UpdateKnittingRecord\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","updateKnittingDetails","jsxDEV","_jsxDEV","UpdateKnittingRecord","_s","location","navigate","RSN","knittingData","state","updatedData","setUpdatedData","loading","setLoading","error","setError","successMessage","setSuccessMessage","handleInputChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","message","err","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTableRows","obj","Object","entries","map","key","type","readOnly","onChange","style","color","onSubmit","border","width","marginTop","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/UpdateKnittingDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\"; // useLocation to get passed state\r\nimport { updateKnittingDetails } from \"../API/SampleApi\"; // Assuming you have an API to update data\r\n\r\nconst UpdateKnittingRecord = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { RSN, knittingData } = location.state || {};\r\n\r\n  const [updatedData, setUpdatedData] = useState(knittingData || {});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!knittingData) {\r\n      setError(\"No knitting data available.\");\r\n    }\r\n  }, [knittingData]);\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!updatedData) {\r\n      setError(\"No data to update.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await updateKnittingDetails(RSN, updatedData);\r\n      setSuccessMessage(response.message);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Failed to update knitting details.\");\r\n      setSuccessMessage(\"\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n    navigate(`/show-sample/${RSN}`, { state: { RSN } });\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  // Render form in a table format\r\n  const renderTableRows = (obj) => {\r\n    return Object.entries(obj).map(([key, value]) => {\r\n      if (key === \"RSN\") {\r\n        // If the key is 'RSN', make it read-only\r\n        return (\r\n          <tr key={key}>\r\n            <td>{key}:</td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name={key}\r\n                value={value || \"\"}\r\n                readOnly\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      } else if (typeof value === \"object\" && value !== null) {\r\n        // If the value is an object, recurse to render nested fields\r\n        return (\r\n          <tr key={key}>\r\n            <td>{key}:</td>\r\n            <td>\r\n              <table>\r\n                <tbody>{renderTableRows(value)}</tbody>\r\n              </table>\r\n            </td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        // For other fields, make them editable\r\n        return (\r\n          <tr key={key}>\r\n            <td>{key}:</td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name={key}\r\n                value={value || \"\"}\r\n                onChange={handleInputChange}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Update Knitting Details for RSN: {RSN}</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <table border=\"1\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Field</th>\r\n              <th>Value</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderTableRows(updatedData)}\r\n          </tbody>\r\n        </table>\r\n\r\n        <button type=\"submit\" disabled={loading} style={{ marginTop: \"20px\" }}>\r\n          {loading ? \"Updating...\" : \"Update Record\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateKnittingRecord;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}