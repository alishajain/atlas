{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowColor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getColorMatchingByRSN } from \"../API/ColorApi\"; // Function to fetch color matching data\nimport ShowColorDetail from \"./ShowColorDetails\"; // Import ShowColorDetail to display color details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowColor = ({\n  RSN\n}) => {\n  _s();\n  const [colorMatchingData, setColorMatchingData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchColorMatchingData = async () => {\n      setLoading(true);\n      try {\n        const response = await getColorMatchingByRSN(RSN);\n        console.log(response);\n        setColorMatchingData(response);\n      } catch (err) {\n        setError(\"Failed to fetch color matching details.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (RSN) {\n      fetchColorMatchingData();\n    }\n  }, [RSN]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading color matching data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Color Matching Details for RSN: \", RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), colorMatchingData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: colorMatchingData.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Color Matching for RSN: \", RSN]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"1\",\n            style: {\n              width: \"100%\",\n              marginTop: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ColorId\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Matching Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Panel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.ColorId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.MatchingName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.Panel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ShowColorDetail, {\n            ColorId: item.ColorId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No color matching details available for this RSN.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowColor, \"F5ToyLzG1KlGMb3lKzhci+VrCAg=\");\n_c = ShowColor;\nexport default ShowColor;\nvar _c;\n$RefreshReg$(_c, \"ShowColor\");","map":{"version":3,"names":["React","useState","useEffect","getColorMatchingByRSN","ShowColorDetail","jsxDEV","_jsxDEV","ShowColor","RSN","_s","colorMatchingData","setColorMatchingData","loading","setLoading","error","setError","fetchColorMatchingData","response","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","item","index","border","width","marginTop","ColorId","MatchingName","Panel","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowColor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getColorMatchingByRSN } from \"../API/ColorApi\";  // Function to fetch color matching data\r\nimport ShowColorDetail from \"./ShowColorDetails\";  // Import ShowColorDetail to display color details\r\n\r\nconst ShowColor = ({ RSN }) => {\r\n  const [colorMatchingData, setColorMatchingData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchColorMatchingData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getColorMatchingByRSN(RSN);\r\n        console.log(response);\r\n        setColorMatchingData(response); \r\n      } catch (err) {\r\n        setError(\"Failed to fetch color matching details.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (RSN) {\r\n      fetchColorMatchingData();\r\n    }\r\n  }, [RSN]);\r\n\r\n  if (loading) return <p>Loading color matching data...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Color Matching Details for RSN: {RSN}</h1>\r\n      {colorMatchingData ? (\r\n        <div>\r\n          {/* Displaying color matching details */}\r\n          {colorMatchingData.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <h2>Color Matching for RSN: {RSN}</h2>\r\n                <table border=\"1\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ColorId</th>\r\n                      <th>Matching Name</th>\r\n                      <th>Panel</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{item.ColorId}</td>\r\n                      <td>{item.MatchingName}</td>\r\n                      <td>{item.Panel}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                {/* Now, display the color detail for each ColorId */}\r\n                <ShowColorDetail ColorId={item.ColorId} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <p>No color matching details available for this RSN.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowColor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}