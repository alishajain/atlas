{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ColorMatching.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addColorMatching } from \"../API/ColorApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorMatching = () => {\n  _s();\n  const [numColors, setNumColors] = useState(0); // Number of color matches\n  const [colorMatches, setColorMatches] = useState([]); // Store the color matches\n  const [error, setError] = useState(\"\"); // To store and display any error messages\n  const [loading, setLoading] = useState(false); // To track if the API call is in progress\n  const [success, setSuccess] = useState(\"\"); // To display success message\n\n  // Handle the number of color matches input change\n  const handleNumColorsChange = e => {\n    const num = parseInt(e.target.value, 10);\n    setNumColors(num);\n    setColorMatches(Array(num).fill(\"\")); // Reset color matches array based on the number\n  };\n\n  // Handle the input change for each color match\n  const handleColorMatchChange = (index, e) => {\n    const newColorMatches = [...colorMatches];\n    newColorMatches[index] = e.target.value;\n    setColorMatches(newColorMatches);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate that each color match field is filled\n    if (colorMatches.some(match => match === \"\")) {\n      setError(\"All color match fields must be filled.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\"); // Clear any previous errors\n    setSuccess(\"\"); // Clear any previous success message\n\n    const colorData = {\n      colorMatches\n    };\n    try {\n      const response = await addColorMatching(colorData);\n      console.log(\"Color matching added:\", response);\n      setSuccess(\"Color matching added successfully!\");\n      // Reset the form after successful submission\n      setNumColors(0);\n      setColorMatches([]);\n    } catch (error) {\n      setError(\"An error occurred while adding color matching.\");\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Color Matching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of color matches: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numColors,\n          onChange: handleNumColorsChange,\n          min: \"1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), Array.from({\n        length: numColors\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Color Match \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: colorMatches[index] || \"\",\n          onChange: e => handleColorMatchChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Submitting...\" : \"Add Color Matching\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorMatching, \"ZUh+6e1cWk+y0F8V7MqPI3ryKDo=\");\n_c = ColorMatching;\nexport default ColorMatching;\nvar _c;\n$RefreshReg$(_c, \"ColorMatching\");","map":{"version":3,"names":["React","useState","addColorMatching","jsxDEV","_jsxDEV","ColorMatching","_s","numColors","setNumColors","colorMatches","setColorMatches","error","setError","loading","setLoading","success","setSuccess","handleNumColorsChange","e","num","parseInt","target","value","Array","fill","handleColorMatchChange","index","newColorMatches","handleSubmit","preventDefault","some","match","colorData","response","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","min","required","from","length","map","_","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ColorMatching.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addColorMatching } from \"../API/ColorApi\";\r\n\r\nconst ColorMatching = () => {\r\n  const [numColors, setNumColors] = useState(0); // Number of color matches\r\n  const [colorMatches, setColorMatches] = useState([]); // Store the color matches\r\n  const [error, setError] = useState(\"\"); // To store and display any error messages\r\n  const [loading, setLoading] = useState(false); // To track if the API call is in progress\r\n  const [success, setSuccess] = useState(\"\"); // To display success message\r\n\r\n  // Handle the number of color matches input change\r\n  const handleNumColorsChange = (e) => {\r\n    const num = parseInt(e.target.value, 10);\r\n    setNumColors(num);\r\n    setColorMatches(Array(num).fill(\"\")); // Reset color matches array based on the number\r\n  };\r\n\r\n  // Handle the input change for each color match\r\n  const handleColorMatchChange = (index, e) => {\r\n    const newColorMatches = [...colorMatches];\r\n    newColorMatches[index] = e.target.value;\r\n    setColorMatches(newColorMatches);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate that each color match field is filled\r\n    if (colorMatches.some((match) => match === \"\")) {\r\n      setError(\"All color match fields must be filled.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\"); // Clear any previous errors\r\n    setSuccess(\"\"); // Clear any previous success message\r\n\r\n    const colorData = {\r\n      colorMatches,\r\n    };\r\n\r\n    try {\r\n      const response = await addColorMatching(colorData);\r\n      console.log(\"Color matching added:\", response);\r\n      setSuccess(\"Color matching added successfully!\");\r\n      // Reset the form after successful submission\r\n      setNumColors(0);\r\n      setColorMatches([]);\r\n    } catch (error) {\r\n      setError(\"An error occurred while adding color matching.\");\r\n      console.error(\"Error:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Color Matching</h2>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        {/* Step 1: Input for the number of color matches */}\r\n        <div>\r\n          <label>Number of color matches: </label>\r\n          <input\r\n            type=\"number\"\r\n            value={numColors}\r\n            onChange={handleNumColorsChange}\r\n            min=\"1\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Step 2: Render input fields for color matches */}\r\n        {Array.from({ length: numColors }).map((_, index) => (\r\n          <div key={index}>\r\n            <label>Color Match {index + 1}:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={colorMatches[index] || \"\"}\r\n              onChange={(e) => handleColorMatchChange(index, e)}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        {/* Submit Button */}\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Submitting...\" : \"Add Color Matching\"}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Display Error or Success Messages */}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorMatching;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}