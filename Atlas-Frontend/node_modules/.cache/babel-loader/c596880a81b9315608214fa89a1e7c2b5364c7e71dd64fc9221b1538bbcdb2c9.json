{"ast":null,"code":"import axios from 'axios';\n\n// API base URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Function to get comments for a specific RSN\nexport const getCommentsByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/comments/${RSN}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n    throw new Error('Failed to fetch comments');\n  }\n};\n\n// Function to add a new comment\nexport const addComment = async (RSN, userId, comment) => {\n  try {\n    const data = {\n      RSN,\n      UserId: userId,\n      Comments: comment\n    };\n    const response = await axios.post(`${API_URL}/comments`, data);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding comment:', error);\n    throw new Error('Failed to add comment');\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getCommentsByRSN","RSN","response","get","data","error","console","Error","addComment","userId","comment","UserId","Comments","post","log"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/CommentApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API base URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Function to get comments for a specific RSN\r\nexport const getCommentsByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/comments/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching comments:', error);\r\n    throw new Error('Failed to fetch comments');\r\n  }\r\n};\r\n\r\n// Function to add a new comment\r\nexport const addComment = async (RSN, userId, comment) => {\r\n  try {\r\n    const data = { RSN, UserId: userId, Comments: comment };\r\n    const response = await axios.post(`${API_URL}/comments`, data);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding comment:', error);\r\n    throw new Error('Failed to add comment');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,GAAG,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,aAAaK,GAAG,EAAE,CAAC;IAC9D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOP,GAAG,EAAEQ,MAAM,EAAEC,OAAO,KAAK;EACxD,IAAI;IACF,MAAMN,IAAI,GAAG;MAAEH,GAAG;MAAEU,MAAM,EAAEF,MAAM;MAAEG,QAAQ,EAAEF;IAAQ,CAAC;IACvD,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,WAAW,EAAEQ,IAAI,CAAC;IAC9DE,OAAO,CAACQ,GAAG,CAACZ,QAAQ,CAACE,IAAI,CAAC;IAC1B,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}