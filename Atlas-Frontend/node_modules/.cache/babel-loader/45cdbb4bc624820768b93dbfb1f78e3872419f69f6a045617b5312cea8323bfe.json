{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowOrderYarn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { searchOrderYarn } from \"../API/OrderYarnApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowOrderYarn = () => {\n  _s();\n  const orderNo = \"70\"; // Sample order number\n  const [orderYarnData, setOrderYarnData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!orderNo) return;\n    const fetchOrderYarnData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await searchOrderYarn(orderNo);\n        setOrderYarnData(response.data);\n      } catch (err) {\n        setError(\"Error fetching order yarn data\");\n        console.error(\"Error fetching order yarn data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchOrderYarnData();\n  }, [orderNo]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading order yarn data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to render the yarn row\n  const renderYarnRow = (matchingName, yarnId, totalWeight) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: matchingName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: yarnId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: totalWeight.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, yarnId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  const groupYarnDataByMatchingName = () => {\n    if (!orderYarnData || orderYarnData.length === 0) {\n      return [];\n    }\n    const groupedData = [];\n    orderYarnData.forEach(item => {\n      const yarns = Object.keys(item).filter(key => key.startsWith(\"Yarn\") && item[key] !== null).map(key => ({\n        yarnId: item[key].YarnId,\n        weight: item[key].Weight || 0 // Total weight for each yarn\n      }));\n      yarns.forEach(yarn => {\n        groupedData.push({\n          matchingName: item.MatchingName,\n          yarnId: yarn.yarnId,\n          totalWeight: yarn.weight\n        });\n      });\n    });\n    return groupedData;\n  };\n  const groupedYarnData = groupYarnDataByMatchingName();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Order Yarn Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), orderYarnData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Order Yarn Data for OrderNo: \", orderNo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Matching Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Yarn ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: groupedYarnData.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: renderYarnRow(item.matchingName, item.yarnId, item.totalWeight)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found for this OrderNo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowOrderYarn, \"EUDMAXXIDRkUjc/Loa3Kc1daezM=\");\n_c = ShowOrderYarn;\nexport default ShowOrderYarn;\nvar _c;\n$RefreshReg$(_c, \"ShowOrderYarn\");","map":{"version":3,"names":["React","useState","useEffect","searchOrderYarn","jsxDEV","_jsxDEV","ShowOrderYarn","_s","orderNo","orderYarnData","setOrderYarnData","loading","setLoading","error","setError","fetchOrderYarnData","response","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","renderYarnRow","matchingName","yarnId","totalWeight","toFixed","groupYarnDataByMatchingName","length","groupedData","forEach","item","yarns","Object","keys","filter","key","startsWith","map","YarnId","weight","Weight","yarn","push","MatchingName","groupedYarnData","border","cellPadding","style","width","index","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowOrderYarn.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { searchOrderYarn } from \"../API/OrderYarnApi\";\r\n\r\nconst ShowOrderYarn = () => {\r\n  const orderNo = \"70\"; // Sample order number\r\n  const [orderYarnData, setOrderYarnData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!orderNo) return;\r\n\r\n    const fetchOrderYarnData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await searchOrderYarn(orderNo);\r\n        setOrderYarnData(response.data);\r\n      } catch (err) {\r\n        setError(\"Error fetching order yarn data\");\r\n        console.error(\"Error fetching order yarn data:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrderYarnData();\r\n  }, [orderNo]);\r\n\r\n  if (loading) {\r\n    return <p>Loading order yarn data...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  // Function to render the yarn row\r\n  const renderYarnRow = (matchingName, yarnId, totalWeight) => {\r\n    return (\r\n      <tr key={yarnId}>\r\n        <td>{matchingName}</td>\r\n        <td>{yarnId}</td>\r\n        <td>{totalWeight.toFixed(2)}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const groupYarnDataByMatchingName = () => {\r\n    if (!orderYarnData || orderYarnData.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    const groupedData = [];\r\n\r\n    orderYarnData.forEach((item) => {\r\n      const yarns = Object.keys(item)\r\n        .filter((key) => key.startsWith(\"Yarn\") && item[key] !== null)\r\n        .map((key) => ({\r\n          yarnId: item[key].YarnId,\r\n          weight: item[key].Weight || 0, // Total weight for each yarn\r\n        }));\r\n\r\n      yarns.forEach((yarn) => {\r\n        groupedData.push({\r\n          matchingName: item.MatchingName,\r\n          yarnId: yarn.yarnId,\r\n          totalWeight: yarn.weight,\r\n        });\r\n      });\r\n    });\r\n\r\n    return groupedData;\r\n  };\r\n\r\n  const groupedYarnData = groupYarnDataByMatchingName();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search Order Yarn Data</h2>\r\n      {orderYarnData ? (\r\n        <div>\r\n          <h3>Order Yarn Data for OrderNo: {orderNo}</h3>\r\n          <table border=\"1\" cellPadding=\"10\" style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Matching Name</th>\r\n                <th>Yarn ID</th>\r\n                <th>Total Weight</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {groupedYarnData.map((item, index) => (\r\n                <React.Fragment key={index}>\r\n                  {renderYarnRow(item.matchingName, item.yarnId, item.totalWeight)}\r\n                </React.Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>No data found for this OrderNo.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowOrderYarn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}