{"ast":null,"code":"import React,{useState}from'react';import{registerUser,checkIfEmpIDExists}from'../API/UserApi';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const[userID,setUserID]=useState('');const[empID,setEmpID]=useState('');const[password,setPassword]=useState('');const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();// Validation\nif(!userID||!empID||!password){setMessage('All fields are required!');return;}try{setLoading(true);// Check if the EmpID already exists\nconst empIDExists=await checkIfEmpIDExists(empID);if(empIDExists){setMessage('An account with this EmpID already exists.');return;}// Register the user if EmpID is unique\nconst userData={UserID:userID,EmpID:empID,Password:password};const data=await registerUser(userData);if(data.success){setMessage('Signup successful!');navigate('/');}else{setMessage(data.message||'Signup failed!');}}catch(error){setMessage('An error occurred during signup!');console.error('Error during signup:',error);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to ATLAS\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Signup\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"UserID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userID,onChange:e=>setUserID(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Employee ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:empID,onChange:e=>setEmpID(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Signing up...':'Sign Up'})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});};export default Signup;","map":{"version":3,"names":["React","useState","registerUser","checkIfEmpIDExists","useNavigate","jsx","_jsx","jsxs","_jsxs","Signup","userID","setUserID","empID","setEmpID","password","setPassword","message","setMessage","loading","setLoading","navigate","handleSubmit","e","preventDefault","empIDExists","userData","UserID","EmpID","Password","data","success","error","console","className","children","onSubmit","type","value","onChange","target","required","disabled"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { registerUser, checkIfEmpIDExists } from '../API/UserApi';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n  const [userID, setUserID] = useState('');\r\n  const [empID, setEmpID] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation\r\n    if (!userID || !empID || !password) {\r\n      setMessage('All fields are required!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Check if the EmpID already exists\r\n      const empIDExists = await checkIfEmpIDExists(empID);\r\n      if (empIDExists) {\r\n        setMessage('An account with this EmpID already exists.');\r\n        return;\r\n      }\r\n\r\n      // Register the user if EmpID is unique\r\n      const userData = { UserID: userID, EmpID: empID, Password: password };\r\n      const data = await registerUser(userData);\r\n\r\n      if (data.success) {\r\n        setMessage('Signup successful!');\r\n        navigate('/');\r\n      } else {\r\n        setMessage(data.message || 'Signup failed!');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred during signup!');\r\n      console.error('Error during signup:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h1>Welcome to ATLAS</h1>\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label>UserID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userID}\r\n            onChange={(e) => setUserID(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Employee ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={empID}\r\n            onChange={(e) => setEmpID(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Signing up...' : 'Sign Up'}\r\n        </button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}