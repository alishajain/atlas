{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddOrderDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddOrderDetails = ({\n  ArticleNo\n}) => {\n  _s();\n  const [yarnUsageData, setYarnUsageData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchYarnUsage = async () => {\n      try {\n        const response = await getYarnUsageByArticleNo(ArticleNo);\n        if (response.success && response.data && response.data.length > 0) {\n          setYarnUsageData(response.data);\n        } else {\n          setError(\"No data found for this ArticleNo.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch yarn usage data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchYarnUsage();\n  }, [ArticleNo]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show error if any\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  // List of all possible sizes (to ensure we check across all data)\n  const sizes = [\"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\"];\n\n  // Function to get the sizes that have non-null values across all MatchingNames\n  const getAllNonNullSizes = data => {\n    // Find all sizes that are non-null in any row\n    const nonNullSizes = sizes.filter(size => data.some(row => row[size] !== null));\n    return nonNullSizes;\n  };\n\n  // Get all non-null sizes across all yarn usage data\n  const nonNullSizes = getAllNonNullSizes(yarnUsageData);\n\n  // Function to handle quantity input changes\n  const handleQuantityChange = (matchingName, size, value) => {\n    setQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [matchingName]: {\n        ...prevQuantities[matchingName],\n        [size]: value\n      }\n    }));\n  };\n\n  // Display the yarn usage data in a table format\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Order Quantity Details for Article No: \", ArticleNo, \" with RSN : \", yarnUsageData[0].RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), yarnUsageData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matching Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: yarnUsageData.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.MatchingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), nonNullSizes.map(size => {\n            var _quantities$data$Matc;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: ((_quantities$data$Matc = quantities[data.MatchingName]) === null || _quantities$data$Matc === void 0 ? void 0 : _quantities$data$Matc[size]) || \"\",\n                onChange: e => handleQuantityChange(data.MatchingName, size, e.target.value),\n                min: \"0\",\n                style: {\n                  width: \"50px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 34\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this);\n          })]\n        }, dataIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No yarn usage data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AddOrderDetails, \"fVsttbyngj4/Wkc4C40pWO5MQ+8=\");\n_c = AddOrderDetails;\nexport default AddOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"AddOrderDetails\");","map":{"version":3,"names":["React","useState","useEffect","getYarnUsageByArticleNo","jsxDEV","_jsxDEV","AddOrderDetails","ArticleNo","_s","yarnUsageData","setYarnUsageData","error","setError","loading","setLoading","fetchYarnUsage","response","success","data","length","err","children","fileName","_jsxFileName","lineNumber","columnNumber","sizes","getAllNonNullSizes","nonNullSizes","filter","size","some","row","handleQuantityChange","matchingName","value","setQuantities","prevQuantities","RSN","border","cellPadding","style","width","marginTop","map","dataIndex","MatchingName","_quantities$data$Matc","type","quantities","onChange","e","target","min","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddOrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\r\n\r\nconst AddOrderDetails = ({ ArticleNo }) => {\r\n  const [yarnUsageData, setYarnUsageData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchYarnUsage = async () => {\r\n      try {\r\n        const response = await getYarnUsageByArticleNo(ArticleNo);\r\n        if (response.success && response.data && response.data.length > 0) {\r\n          setYarnUsageData(response.data);\r\n        } else {\r\n          setError(\"No data found for this ArticleNo.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch yarn usage data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchYarnUsage();\r\n  }, [ArticleNo]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Show error if any\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  // List of all possible sizes (to ensure we check across all data)\r\n  const sizes = [\"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\"];\r\n\r\n  // Function to get the sizes that have non-null values across all MatchingNames\r\n  const getAllNonNullSizes = (data) => {\r\n    // Find all sizes that are non-null in any row\r\n    const nonNullSizes = sizes.filter((size) => data.some(row => row[size] !== null));\r\n    return nonNullSizes;\r\n  };\r\n\r\n  // Get all non-null sizes across all yarn usage data\r\n  const nonNullSizes = getAllNonNullSizes(yarnUsageData);\r\n\r\n    // Function to handle quantity input changes\r\n    const handleQuantityChange = (matchingName, size, value) => {\r\n        setQuantities((prevQuantities) => ({\r\n          ...prevQuantities,\r\n          [matchingName]: {\r\n            ...prevQuantities[matchingName],\r\n            [size]: value,\r\n          },\r\n        }));\r\n      };\r\n\r\n  // Display the yarn usage data in a table format\r\n  return (\r\n    <div>\r\n      <h2>Order Quantity Details for Article No: {ArticleNo} with RSN : {yarnUsageData[0].RSN}</h2>\r\n      {yarnUsageData.length > 0 ? (\r\n        <table border=\"1\" cellPadding=\"10\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Matching Name</th>\r\n              {nonNullSizes.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {yarnUsageData.map((data, dataIndex) => (\r\n              <tr key={dataIndex}>\r\n                <td>{data.MatchingName}</td>\r\n                {nonNullSizes.map((size) => (\r\n                  <td key={size}><input\r\n                  type=\"number\"\r\n                  value={quantities[data.MatchingName]?.[size] || \"\"}\r\n                  onChange={(e) =>\r\n                    handleQuantityChange(data.MatchingName, size, e.target.value)\r\n                  }\r\n                  min=\"0\"\r\n                  style={{ width: \"50px\" }}\r\n                /></td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div>No yarn usage data found.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrderDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}