{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\nexport const employeeDetails = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/EmployeeDetails`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error Fetching Employee Details\", error);\n    throw new Error(\"Error Fetching Employee Details\");\n  }\n};\n\n// Function to add a new employee\nexport const addEmployee = async employeeData => {\n  try {\n    // Send a POST request with the employee data\n    const response = await axios.post(`${API_URL}/employee-details`, employeeData);\n\n    // Return the response from the backend\n    return response.data;\n  } catch (error) {\n    console.error('Error adding employee:', error);\n\n    // Return the error message\n    throw new Error('Failed to add employee. Please try again later.');\n  }\n};","map":{"version":3,"names":["axios","API_URL","employeeDetails","response","get","data","error","console","Error","addEmployee","employeeData","post"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/EmployeeApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\nexport const employeeDetails = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/EmployeeDetails`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error Fetching Employee Details\", error);\r\n        throw new Error(\"Error Fetching Employee Details\");\r\n    }\r\n};\r\n\r\n// Function to add a new employee\r\nexport const addEmployee = async (employeeData) => {\r\n    try {\r\n        // Send a POST request with the employee data\r\n        const response = await axios.post(`${API_URL}/employee-details`, employeeData);\r\n\r\n        // Return the response from the backend\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding employee:', error);\r\n\r\n        // Return the error message\r\n        throw new Error('Failed to add employee. Please try again later.');\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,kBAAkB,CAAC;IAC9D,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;EACtD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,YAAY,IAAK;EAC/C,IAAI;IACA;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,mBAAmB,EAAES,YAAY,CAAC;;IAE9E;IACA,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;IAE9C;IACA,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;EACtE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}