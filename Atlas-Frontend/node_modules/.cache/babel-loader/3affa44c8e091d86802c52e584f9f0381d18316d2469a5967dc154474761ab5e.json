{"ast":null,"code":"import React,{useState}from'react';import{uploadImage}from'../API/ImageApi';import{useNavigate,useLocation}from'react-router-dom';import{useSelector}from'react-redux';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddImage=()=>{const[image,setImage]=useState(null);const[imageName,setImageName]=useState('');const[uploadStatus,setUploadStatus]=useState('');const navigate=useNavigate();const location=useLocation();const RSN=location.state.RSN||{};const userId=useSelector(state=>state.user.userId);const handleImageChange=e=>{setImage(e.target.files[0]);};const handleSubmit=async e=>{e.preventDefault();if(!image||!imageName){alert(\"Please provide an image and a name\");return;}setUploadStatus(\"Uploading...\");try{console.log(\"Starting image upload...\");const result=await uploadImage(image,imageName,RSN,userId);console.log(\"Upload result:\",result);if(result&&result.message){setUploadStatus(result.message);// Set the success message from the API response\n}else{setUploadStatus(\"Image uploaded, but no message returned.\");}}catch(error){console.error(\"Error during image upload:\",error);// Debug log to see error details\nsetUploadStatus(`Error uploading image: ${error.message}`);}};// Function to navigate to another path when the button is clicked\nconst handleNext=()=>{navigate(`/panel-selection/${RSN}`,{state:{RSN,action:'Add'}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload an Image\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"imageName\",children:\"Image Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"imageName\",value:imageName,onChange:e=>setImageName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image\",children:\"Select Image\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"image\",name:\"image\",onChange:handleImageChange,accept:\"image/*\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Upload Image\"})]}),uploadStatus&&/*#__PURE__*/_jsx(\"p\",{children:uploadStatus}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNext,children:\"Next\"})]});};export default AddImage;","map":{"version":3,"names":["React","useState","uploadImage","useNavigate","useLocation","useSelector","jsx","_jsx","jsxs","_jsxs","AddImage","image","setImage","imageName","setImageName","uploadStatus","setUploadStatus","navigate","location","RSN","state","userId","user","handleImageChange","e","target","files","handleSubmit","preventDefault","alert","console","log","result","message","error","handleNext","action","children","onSubmit","htmlFor","type","id","value","onChange","required","name","accept","onClick"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddImage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadImage } from '../API/ImageApi'; \r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AddImage = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [imageName, setImageName] = useState('');\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const RSN =  location.state.RSN || {};\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const handleImageChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!image || !imageName) {\r\n      alert(\"Please provide an image and a name\");\r\n      return;\r\n    }\r\n\r\n    setUploadStatus(\"Uploading...\");\r\n\r\n    try {\r\n      console.log(\"Starting image upload...\");\r\n      const result = await uploadImage(image, imageName, RSN, userId);\r\n\r\n      console.log(\"Upload result:\", result);\r\n\r\n      if (result && result.message) {\r\n        setUploadStatus(result.message); // Set the success message from the API response\r\n      } else {\r\n        setUploadStatus(\"Image uploaded, but no message returned.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during image upload:\", error); // Debug log to see error details\r\n      setUploadStatus(`Error uploading image: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Function to navigate to another path when the button is clicked\r\n  const handleNext = () => {\r\n    navigate(`/panel-selection/${RSN}`, { state: { RSN, action: 'Add'} });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload an Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"imageName\">Image Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"imageName\"\r\n            value={imageName}\r\n            onChange={(e) => setImageName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"image\">Select Image</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            onChange={handleImageChange}\r\n            accept=\"image/*\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload Image</button>\r\n      </form>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n\r\n      {/* Add the Navigate button */}\r\n      <button onClick={handleNext}>Next</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}