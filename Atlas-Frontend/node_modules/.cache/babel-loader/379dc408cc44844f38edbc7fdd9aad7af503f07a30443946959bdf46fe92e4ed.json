{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddOrderDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\nimport { getOrderNo } from \"../API/OrderApi\";\nimport { addOrderYarn } from \"../API/OrderYarnApi\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizes = [\"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\"];\nconst AddOrderDetails = ({\n  ArticleNo\n}) => {\n  _s();\n  var _yarnUsageData$;\n  const userId = useSelector(state => state.user.userId);\n  const [yarnUsageData, setYarnUsageData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [quantities, setQuantities] = useState({});\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]);\n  const [orderNo, setOrderNo] = useState(null);\n\n  // Fetch Order No on component load\n  useEffect(() => {\n    const fetchOrderNo = async () => {\n      try {\n        const {\n          OrderNo\n        } = await getOrderNo();\n        setOrderNo(OrderNo);\n      } catch (err) {\n        setError(\"Failed to fetch Order No.\");\n      }\n    };\n    fetchOrderNo();\n  }, []);\n\n  // Fetch Yarn Usage data based on ArticleNo\n  useEffect(() => {\n    const fetchYarnUsage = async () => {\n      if (!ArticleNo) return;\n      setLoading(true);\n      try {\n        const response = await getYarnUsageByArticleNo(ArticleNo);\n        if (response.success && response.data.length > 0) {\n          setYarnUsageData(response.data);\n        } else {\n          setError(\"No yarn usage data found.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch yarn usage data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchYarnUsage();\n  }, [ArticleNo]);\n  const getNonNullSizes = data => sizes.filter(size => data.some(row => row[size] !== null));\n  const handleQuantityChange = (matchingName, size, value) => {\n    const quantity = parseInt(value) || 0;\n    setQuantities(prev => ({\n      ...prev,\n      [matchingName]: {\n        ...prev[matchingName],\n        [size]: quantity\n      }\n    }));\n  };\n  const calculateTotalQuantity = matchingName => {\n    const quantitiesForMatchingName = quantities[matchingName] || {};\n    return getNonNullSizes(yarnUsageData).reduce((total, size) => total + (quantitiesForMatchingName[size] || 0), 0);\n  };\n  const getNonNullYarns = data => {\n    return Array.from({\n      length: 15\n    }, (_, i) => {\n      var _data$yarnKey;\n      const yarnKey = `Yarn${i + 1}`;\n      if ((_data$yarnKey = data[yarnKey]) !== null && _data$yarnKey !== void 0 && _data$yarnKey.YarnId) {\n        return {\n          YarnId: data[yarnKey].YarnId,\n          Weight: data[yarnKey].Weight\n        };\n      }\n      return null;\n    }).filter(Boolean);\n  };\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\n    var _quantities$matchingN;\n    const quantity = (_quantities$matchingN = quantities[matchingName]) === null || _quantities$matchingN === void 0 ? void 0 : _quantities$matchingN[size];\n    if (!quantity) return 0;\n    const row = yarnUsageData.find(row => row.MatchingName === matchingName);\n    const percentage = row ? row[size] : 0;\n    return originalWeight * (1 + percentage / 100) * quantity;\n  };\n  const handleSubmit = async () => {\n    if (!orderNo) {\n      setError(\"Order No is not available.\");\n      return;\n    }\n\n    // Prepare the updated data in the required format for the API\n    const updatedData = yarnUsageData.map(data => {\n      const yarns = getNonNullYarns(data);\n      const updatedYarns = yarns.reduce((acc, yarn, index) => {\n        const updatedYarnDetails = {};\n        let totalWeight = 0;\n        getNonNullSizes(data).forEach(size => {\n          const updatedWeight = calculateUpdatedWeight(yarn.Weight, size, data.MatchingName);\n          updatedYarnDetails[size] = updatedWeight;\n          totalWeight += updatedWeight;\n        });\n        acc[`Yarn${index + 1}`] = {\n          YarnId: yarn.YarnId,\n          Weight: totalWeight\n        };\n        return acc;\n      }, {});\n      return {\n        MatchingName: data.MatchingName,\n        UserId: userId,\n        OrderNo: orderNo,\n        ...updatedYarns // Dynamically adds Yarn1, Yarn2, etc. to the object\n      };\n    });\n    setUpdatedYarnUsageData(updatedData);\n\n    // Flatten the updated data for the API request\n    const yarnRequestPayload = updatedData.map(data => ({\n      MatchingName: data.MatchingName,\n      UserId: data.UserId,\n      OrderNo: data.OrderNo,\n      ...Object.keys(data).filter(key => key.startsWith('Yarn')).reduce((acc, key) => {\n        acc[key] = data[key];\n        return acc;\n      }, {})\n    }));\n    try {\n      const response = await addOrderYarn(yarnRequestPayload);\n      console.log(\"Yarn request added successfully:\", response);\n    } catch (err) {\n      console.error(\"Failed to add yarn request:\", err);\n      setError(\"Failed to add yarn request.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 21\n  }, this);\n  const nonNullSizes = getNonNullSizes(yarnUsageData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Order Quantity Details for Article No: \", ArticleNo, \" with RSN: \", (_yarnUsageData$ = yarnUsageData[0]) === null || _yarnUsageData$ === void 0 ? void 0 : _yarnUsageData$.RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), yarnUsageData.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matching Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: yarnUsageData.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.MatchingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), nonNullSizes.map(size => {\n            var _quantities$data$Matc;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: ((_quantities$data$Matc = quantities[data.MatchingName]) === null || _quantities$data$Matc === void 0 ? void 0 : _quantities$data$Matc[size]) || 0,\n                onChange: e => handleQuantityChange(data.MatchingName, size, e.target.value),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: calculateTotalQuantity(data.MatchingName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, dataIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No yarn usage data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), updatedYarnUsageData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Updated Yarn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Matching Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Yarn ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: updatedYarnUsageData.map((data, dataIndex) => Object.keys(data).map((key, yarnIndex) => key.startsWith(\"Yarn\") ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [yarnIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: Object.keys(data).filter(key => key.startsWith(\"Yarn\")).length,\n              children: data.MatchingName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[key].YarnId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[key].Weight ? data[key].Weight.toFixed(2) : \"-\"\n            }, `${size}-${yarnIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 25\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data[key].Weight.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 23\n            }, this)]\n          }, `${dataIndex}-${yarnIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this) : null))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(AddOrderDetails, \"BuSDYgsFpCyJfjAm9iRfOJgVcno=\", false, function () {\n  return [useSelector];\n});\n_c = AddOrderDetails;\nexport default AddOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"AddOrderDetails\");","map":{"version":3,"names":["React","useState","useEffect","getYarnUsageByArticleNo","getOrderNo","addOrderYarn","useSelector","jsxDEV","_jsxDEV","sizes","AddOrderDetails","ArticleNo","_s","_yarnUsageData$","userId","state","user","yarnUsageData","setYarnUsageData","error","setError","loading","setLoading","quantities","setQuantities","updatedYarnUsageData","setUpdatedYarnUsageData","orderNo","setOrderNo","fetchOrderNo","OrderNo","err","fetchYarnUsage","response","success","data","length","getNonNullSizes","filter","size","some","row","handleQuantityChange","matchingName","value","quantity","parseInt","prev","calculateTotalQuantity","quantitiesForMatchingName","reduce","total","getNonNullYarns","Array","from","_","i","_data$yarnKey","yarnKey","YarnId","Weight","Boolean","calculateUpdatedWeight","originalWeight","_quantities$matchingN","find","MatchingName","percentage","handleSubmit","updatedData","map","yarns","updatedYarns","acc","yarn","index","updatedYarnDetails","totalWeight","forEach","updatedWeight","UserId","yarnRequestPayload","Object","keys","key","startsWith","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","nonNullSizes","RSN","border","cellPadding","style","width","marginTop","dataIndex","_quantities$data$Matc","type","onChange","e","target","min","onClick","yarnIndex","rowSpan","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddOrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\r\nimport { getOrderNo } from \"../API/OrderApi\";\r\nimport { addOrderYarn } from \"../API/OrderYarnApi\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst sizes = [\r\n  \"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\",\r\n];\r\n\r\nconst AddOrderDetails = ({ ArticleNo }) => {\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [yarnUsageData, setYarnUsageData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [quantities, setQuantities] = useState({});\r\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]);\r\n  const [orderNo, setOrderNo] = useState(null);\r\n\r\n  // Fetch Order No on component load\r\n  useEffect(() => {\r\n    const fetchOrderNo = async () => {\r\n      try {\r\n        const { OrderNo } = await getOrderNo();\r\n        setOrderNo(OrderNo);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch Order No.\");\r\n      }\r\n    };\r\n\r\n    fetchOrderNo();\r\n  }, []);\r\n\r\n  // Fetch Yarn Usage data based on ArticleNo\r\n  useEffect(() => {\r\n    const fetchYarnUsage = async () => {\r\n      if (!ArticleNo) return;\r\n      setLoading(true);\r\n      try {\r\n        const response = await getYarnUsageByArticleNo(ArticleNo);\r\n        if (response.success && response.data.length > 0) {\r\n          setYarnUsageData(response.data);\r\n        } else {\r\n          setError(\"No yarn usage data found.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch yarn usage data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchYarnUsage();\r\n  }, [ArticleNo]);\r\n\r\n  const getNonNullSizes = (data) => sizes.filter((size) =>\r\n    data.some((row) => row[size] !== null)\r\n  );\r\n\r\n  const handleQuantityChange = (matchingName, size, value) => {\r\n    const quantity = parseInt(value) || 0;\r\n    setQuantities((prev) => ({\r\n      ...prev,\r\n      [matchingName]: {\r\n        ...prev[matchingName],\r\n        [size]: quantity,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const calculateTotalQuantity = (matchingName) => {\r\n    const quantitiesForMatchingName = quantities[matchingName] || {};\r\n    return getNonNullSizes(yarnUsageData).reduce((total, size) => (\r\n      total + (quantitiesForMatchingName[size] || 0)\r\n    ), 0);\r\n  };\r\n\r\n  const getNonNullYarns = (data) => {\r\n    return Array.from({ length: 15 }, (_, i) => {\r\n      const yarnKey = `Yarn${i + 1}`;\r\n      if (data[yarnKey]?.YarnId) {\r\n        return {\r\n          YarnId: data[yarnKey].YarnId,\r\n          Weight: data[yarnKey].Weight,\r\n        };\r\n      }\r\n      return null;\r\n    }).filter(Boolean);\r\n  };\r\n\r\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\r\n    const quantity = quantities[matchingName]?.[size];\r\n    if (!quantity) return 0;\r\n\r\n    const row = yarnUsageData.find((row) => row.MatchingName === matchingName);\r\n    const percentage = row ? row[size] : 0;\r\n\r\n    return originalWeight * (1 + percentage / 100) * quantity;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!orderNo) {\r\n      setError(\"Order No is not available.\");\r\n      return;\r\n    }\r\n\r\n    // Prepare the updated data in the required format for the API\r\n    const updatedData = yarnUsageData.map((data) => {\r\n      const yarns = getNonNullYarns(data);\r\n      const updatedYarns = yarns.reduce((acc, yarn, index) => {\r\n        const updatedYarnDetails = {};\r\n        let totalWeight = 0;\r\n\r\n        getNonNullSizes(data).forEach((size) => {\r\n          const updatedWeight = calculateUpdatedWeight(yarn.Weight, size, data.MatchingName);\r\n          updatedYarnDetails[size] = updatedWeight;\r\n          totalWeight += updatedWeight;\r\n        });\r\n\r\n        acc[`Yarn${index + 1}`] = {\r\n          YarnId: yarn.YarnId,\r\n          Weight: totalWeight,\r\n        };\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      return { \r\n        MatchingName: data.MatchingName, \r\n        UserId: userId,\r\n        OrderNo: orderNo,\r\n        ...updatedYarns,  // Dynamically adds Yarn1, Yarn2, etc. to the object\r\n      };\r\n    });\r\n\r\n    setUpdatedYarnUsageData(updatedData);\r\n\r\n    // Flatten the updated data for the API request\r\n    const yarnRequestPayload = updatedData.map((data) => ({\r\n      MatchingName: data.MatchingName,\r\n      UserId: data.UserId,\r\n      OrderNo: data.OrderNo,\r\n      ...Object.keys(data)\r\n        .filter(key => key.startsWith('Yarn'))\r\n        .reduce((acc, key) => {\r\n          acc[key] = data[key];\r\n          return acc;\r\n        }, {}),\r\n    }));\r\n\r\n    try {\r\n      const response = await addOrderYarn(yarnRequestPayload);\r\n      console.log(\"Yarn request added successfully:\", response);\r\n    } catch (err) {\r\n      console.error(\"Failed to add yarn request:\", err);\r\n      setError(\"Failed to add yarn request.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const nonNullSizes = getNonNullSizes(yarnUsageData);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Order Quantity Details for Article No: {ArticleNo} with RSN: {yarnUsageData[0]?.RSN}\r\n      </h2>\r\n\r\n      {yarnUsageData.length ? (\r\n        <table border=\"1\" cellPadding=\"10\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Matching Name</th>\r\n              {nonNullSizes.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {yarnUsageData.map((data, dataIndex) => (\r\n              <tr key={dataIndex}>\r\n                <td>{data.MatchingName}</td>\r\n                {nonNullSizes.map((size) => (\r\n                  <td key={size}>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={quantities[data.MatchingName]?.[size] || 0}\r\n                      onChange={(e) =>\r\n                        handleQuantityChange(data.MatchingName, size, e.target.value)\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n                <td>{calculateTotalQuantity(data.MatchingName)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div>No yarn usage data found.</div>\r\n      )}\r\n\r\n      <button onClick={handleSubmit}>Submit</button>\r\n\r\n      {updatedYarnUsageData.length > 0 && (\r\n        <div style={{ marginTop: \"30px\" }}>\r\n          <h2>Updated Yarn Details</h2>\r\n          <table border=\"1\" cellPadding=\"10\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Matching Name</th>\r\n                <th>Yarn ID</th>\r\n                {nonNullSizes.map((size) => (\r\n                  <th key={size}>{size}</th>\r\n                ))}\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {updatedYarnUsageData.map((data, dataIndex) =>\r\n                Object.keys(data).map((key, yarnIndex) =>\r\n                  key.startsWith(\"Yarn\") ? (\r\n                    <tr key={`${dataIndex}-${yarnIndex}`}>\r\n                      {yarnIndex === 0 && <td rowSpan={Object.keys(data).filter(key => key.startsWith(\"Yarn\")).length}>{data.MatchingName}</td>}\r\n                      <td>{data[key].YarnId}</td>\r\n                      {nonNullSizes.map((size) => (\r\n                        <td key={`${size}-${yarnIndex}`}>\r\n                          {data[key].Weight ? data[key].Weight.toFixed(2) : \"-\"}\r\n                        </td>\r\n                      ))}\r\n                      <td>{data[key].Weight.toFixed(2)}</td>\r\n                    </tr>\r\n                  ) : null\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrderDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}