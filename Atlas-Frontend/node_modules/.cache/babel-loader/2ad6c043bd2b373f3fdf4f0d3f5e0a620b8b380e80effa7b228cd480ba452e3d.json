{"ast":null,"code":"import React,{useEffect,useState}from'react';import{getAllMachines}from'../API/MachineApi';import{useNavigate}from'react-router-dom';import\"../Styles/MachineDetails.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MachineDetails=()=>{const[machines,setMachines]=useState([]);const[error,setError]=useState('');const[success,setSuccess]=useState('');const navigate=useNavigate();// Fetch all machines on component mount\nuseEffect(()=>{const fetchMachines=async()=>{try{const result=await getAllMachines();setSuccess('Data fetched successfully.');setMachines(result.data);}catch(err){setError('Error fetching machines');}};fetchMachines();},[]);console.log(machines);// Handle back button click\nconst handleBackButton=()=>{navigate('/machine');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"All Machines\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),success&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:success}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"MachineNo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"ModelNo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"MachineType\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Category\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Count Period\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Machine System\"}),/*#__PURE__*/_jsx(\"th\",{children:\"MachineStatus\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Remarks\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:machines.length>0?machines.map(machine=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:machine.MachineNo}),/*#__PURE__*/_jsx(\"td\",{children:machine.ModelNo}),/*#__PURE__*/_jsx(\"td\",{children:machine.MachineType}),/*#__PURE__*/_jsx(\"td\",{children:machine.Category}),/*#__PURE__*/_jsx(\"td\",{children:machine.CountPeriod}),\" \",/*#__PURE__*/_jsx(\"td\",{children:machine.MachineSystem}),\" \",/*#__PURE__*/_jsx(\"td\",{children:machine.MachineStatus}),/*#__PURE__*/_jsx(\"td\",{children:machine.Remarks})]},machine.MachineNo)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"8\",style:{textAlign:'center'},children:\"No machines found\"})})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBackButton,style:{marginBottom:'20px'},children:\"Back\"})]});};export default MachineDetails;","map":{"version":3,"names":["React","useEffect","useState","getAllMachines","useNavigate","jsx","_jsx","jsxs","_jsxs","MachineDetails","machines","setMachines","error","setError","success","setSuccess","navigate","fetchMachines","result","data","err","console","log","handleBackButton","children","style","color","length","map","machine","MachineNo","ModelNo","MachineType","Category","CountPeriod","MachineSystem","MachineStatus","Remarks","colSpan","textAlign","onClick","marginBottom"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/MachineDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAllMachines } from '../API/MachineApi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"../Styles/MachineDetails.css\";\r\n\r\nconst MachineDetails = () => {\r\n  const [machines, setMachines] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch all machines on component mount\r\n  useEffect(() => {\r\n    const fetchMachines = async () => {\r\n      try {\r\n        const result = await getAllMachines();\r\n        setSuccess('Data fetched successfully.');\r\n        setMachines(result.data);\r\n      } catch (err) {\r\n        setError('Error fetching machines');\r\n      }\r\n    };\r\n    fetchMachines();\r\n  }, []);\r\n\r\n  console.log(machines);\r\n  \r\n  // Handle back button click\r\n  const handleBackButton = () => {\r\n    navigate('/machine');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>All Machines</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>MachineNo</th>\r\n            <th>ModelNo</th>\r\n            <th>MachineType</th>\r\n            <th>Category</th>\r\n            <th>Count Period</th>\r\n            <th>Machine System</th>\r\n            <th>MachineStatus</th>\r\n            <th>Remarks</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {machines.length > 0 ? (\r\n            machines.map((machine) => (\r\n              <tr key={machine.MachineNo}>\r\n                <td>{machine.MachineNo}</td>\r\n                <td>{machine.ModelNo}</td>\r\n                <td>{machine.MachineType}</td>\r\n                <td>{machine.Category}</td>\r\n                <td>{machine.CountPeriod}</td> {/* Changed <th> to <td> */}\r\n                <td>{machine.MachineSystem}</td> {/* Changed <th> to <td> */}\r\n                <td>{machine.MachineStatus}</td>\r\n                <td>{machine.Remarks}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"8\" style={{ textAlign: 'center' }}>No machines found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <button onClick={handleBackButton} style={{ marginBottom: '20px' }}>\r\n        Back\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}