{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\UpdatKnittingRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { updateRecord, getSampleDetailsByRSN } from \"../API/SampleApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateKnittingDetails = ({\n  RSN\n}) => {\n  _s();\n  const [sampleDetails, setSampleDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [updatedData, setUpdatedData] = useState({});\n\n  // Fetch data when RSN changes\n  useEffect(() => {\n    if (RSN) {\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const response = await getSampleDetailsByRSN(RSN);\n          setSampleDetails(response.data);\n        } catch (err) {\n          setError(\"Failed to fetch sample details.\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }\n  }, [RSN]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedData({\n      ...updatedData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const result = await updateRecord({\n        RSN,\n        ...updatedData\n      });\n      setSuccessMessage(result.message);\n      setError(\"\"); // Reset error message if the update was successful\n    } catch (err) {\n      setError(err.message);\n      setSuccessMessage(\"\"); // Reset success message if there was an error\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Sample Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), sampleDetails && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.entries(sampleDetails).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: key,\n          value: updatedData[key] || value || \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateKnittingDetails, \"OA9SSrxj4XkXY6TcUPfgpIPF2IU=\");\n_c = UpdateKnittingDetails;\nexport default UpdateKnittingDetails;\nvar _c;\n$RefreshReg$(_c, \"UpdateKnittingDetails\");","map":{"version":3,"names":["React","useState","useEffect","updateRecord","getSampleDetailsByRSN","jsxDEV","_jsxDEV","UpdateKnittingDetails","RSN","_s","sampleDetails","setSampleDetails","loading","setLoading","error","setError","successMessage","setSuccessMessage","updatedData","setUpdatedData","fetchData","response","data","err","handleChange","e","name","value","target","handleSubmit","preventDefault","result","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","Object","entries","map","key","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/UpdatKnittingRecord.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { updateRecord, getSampleDetailsByRSN } from \"../API/SampleApi\";\r\n\r\nconst UpdateKnittingDetails = ({ RSN }) => {\r\n  const [sampleDetails, setSampleDetails] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [updatedData, setUpdatedData] = useState({});\r\n\r\n  // Fetch data when RSN changes\r\n  useEffect(() => {\r\n    if (RSN) {\r\n      const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n          const response = await getSampleDetailsByRSN(RSN);\r\n          setSampleDetails(response.data);\r\n        } catch (err) {\r\n          setError(\"Failed to fetch sample details.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [RSN]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedData({\r\n      ...updatedData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const result = await updateRecord({ RSN, ...updatedData });\r\n      setSuccessMessage(result.message);\r\n      setError(\"\"); // Reset error message if the update was successful\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setSuccessMessage(\"\"); // Reset success message if there was an error\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Sample Data</h2>\r\n      {sampleDetails && (\r\n        <form onSubmit={handleSubmit}>\r\n          {Object.entries(sampleDetails).map(([key, value]) => (\r\n            <div key={key}>\r\n              <label>{key}:</label>\r\n              <input\r\n                type=\"text\"\r\n                name={key}\r\n                value={updatedData[key] || value || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          ))}\r\n          <button type=\"submit\">Update Record</button>\r\n        </form>\r\n      )}\r\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateKnittingDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}