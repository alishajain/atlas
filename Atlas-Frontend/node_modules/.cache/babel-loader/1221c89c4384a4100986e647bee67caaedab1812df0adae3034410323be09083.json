{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddProcesses\\\\AddKachiWash.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addKachiWashData } from \"../../API/KachiWashApi\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddKachiWash = ({\n  RSN\n}) => {\n  _s();\n  const userId = useSelector(state => state.user.userId);\n  const [newKachiWashData, setNewKachiWashData] = useState({\n    RSN: RSN,\n    EmpID: \"\",\n    Chemical: \"\",\n    Quantity: \"\",\n    Cost: \"\",\n    UserId: 'admin'\n  });\n  const handleAddKachiWash = async () => {\n    try {\n      const response = await addKachiWashData(newKachiWashData);\n      // Check if the response contains a message\n      if (response && response.message) {\n        alert(`Success: ${response.message}`);\n      } else {\n        alert(\"Success: KachiWash data added successfully!\");\n      }\n    } catch (error) {\n      // Log the error to the console to better diagnose issues\n      console.error(\"Error adding kachiwash data:\", error);\n\n      // Check if the error has a response with a message\n      const errorMessage = error.response && error.response.data ? error.response.data.message : \"Failed to add kachiwash data.\";\n      alert(`Error: ${errorMessage}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newKachiWashData.RSN,\n      onChange: e => setNewKachiWashData({\n        ...newKachiWashData,\n        RSN: e.target.value\n      }),\n      placeholder: \"RSN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newKachiWashData.EmpID,\n      onChange: e => setNewKachiWashData({\n        ...newKachiWashData,\n        EmpID: e.target.value\n      }),\n      placeholder: \"EmpID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newKachiWashData.Chemical,\n      onChange: e => setNewKachiWashData({\n        ...newKachiWashData,\n        Chemical: e.target.value\n      }),\n      placeholder: \"Chemical\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: newKachiWashData.Quantity,\n      onChange: e => setNewKachiWashData({\n        ...newKachiWashData,\n        Quantity: e.target.value\n      }),\n      placeholder: \"Quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: newKachiWashData.Cost,\n      onChange: e => setNewKachiWashData({\n        ...newKachiWashData,\n        Cost: e.target.value\n      }),\n      placeholder: \"Cost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddKachiWash,\n      children: \"Add KachiWash Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AddKachiWash, \"TvYrdTS5V0O4XwGfFMTj2QvU450=\", false, function () {\n  return [useSelector];\n});\n_c = AddKachiWash;\nexport default AddKachiWash;\nvar _c;\n$RefreshReg$(_c, \"AddKachiWash\");","map":{"version":3,"names":["React","useState","addKachiWashData","useSelector","jsxDEV","_jsxDEV","AddKachiWash","RSN","_s","userId","state","user","newKachiWashData","setNewKachiWashData","EmpID","Chemical","Quantity","Cost","UserId","handleAddKachiWash","response","message","alert","error","console","errorMessage","data","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddProcesses/AddKachiWash.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addKachiWashData } from \"../../API/KachiWashApi\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddKachiWash = ({ RSN }) => {\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [newKachiWashData, setNewKachiWashData] = useState({\r\n    RSN: RSN,\r\n    EmpID: \"\",\r\n    Chemical: \"\",\r\n    Quantity: \"\",\r\n    Cost: \"\",\r\n    UserId: 'admin',\r\n  });\r\n\r\n  const handleAddKachiWash = async () => {\r\n    try {\r\n      const response = await addKachiWashData(newKachiWashData);\r\n      // Check if the response contains a message\r\n      if (response && response.message) {\r\n        alert(`Success: ${response.message}`);\r\n      } else {\r\n        alert(\"Success: KachiWash data added successfully!\");\r\n      }\r\n    } catch (error) {\r\n      // Log the error to the console to better diagnose issues\r\n      console.error(\"Error adding kachiwash data:\", error);\r\n\r\n      // Check if the error has a response with a message\r\n      const errorMessage =\r\n        error.response && error.response.data\r\n          ? error.response.data.message\r\n          : \"Failed to add kachiwash data.\";\r\n      alert(`Error: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={newKachiWashData.RSN}\r\n        onChange={(e) =>\r\n          setNewKachiWashData({ ...newKachiWashData, RSN: e.target.value })\r\n        }\r\n        placeholder=\"RSN\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={newKachiWashData.EmpID}\r\n        onChange={(e) =>\r\n          setNewKachiWashData({ ...newKachiWashData, EmpID: e.target.value })\r\n        }\r\n        placeholder=\"EmpID\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={newKachiWashData.Chemical}\r\n        onChange={(e) =>\r\n          setNewKachiWashData({ ...newKachiWashData, Chemical: e.target.value })\r\n        }\r\n        placeholder=\"Chemical\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={newKachiWashData.Quantity}\r\n        onChange={(e) =>\r\n          setNewKachiWashData({ ...newKachiWashData, Quantity: e.target.value })\r\n        }\r\n        placeholder=\"Quantity\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={newKachiWashData.Cost}\r\n        onChange={(e) =>\r\n          setNewKachiWashData({ ...newKachiWashData, Cost: e.target.value })\r\n        }\r\n        placeholder=\"Cost\"\r\n      />\r\n      <button onClick={handleAddKachiWash}>Add KachiWash Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddKachiWash;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}