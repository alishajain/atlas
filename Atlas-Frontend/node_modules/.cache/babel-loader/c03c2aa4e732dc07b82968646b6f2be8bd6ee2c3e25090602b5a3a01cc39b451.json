{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddOrderDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddOrderDetails = ({\n  ArticleNo\n}) => {\n  _s();\n  var _yarnUsageData$;\n  const [yarnUsageData, setYarnUsageData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [quantities, setQuantities] = useState({});\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]); // To store the updated yarn data\n\n  useEffect(() => {\n    const fetchYarnUsage = async () => {\n      try {\n        const response = await getYarnUsageByArticleNo(ArticleNo);\n        if (response.success && response.data && response.data.length > 0) {\n          setYarnUsageData(response.data);\n        } else {\n          setError(\"No data found for this ArticleNo.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch yarn usage data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchYarnUsage();\n  }, [ArticleNo]);\n  useEffect(() => {\n    // Initialize the updated yarn usage data with all sizes set to 0\n    if (yarnUsageData.length > 0 && updatedYarnUsageData.length === 0) {\n      const initializedData = yarnUsageData.map(data => {\n        const yarns = getNonNullYarns(data);\n        const initializedYarns = yarns.map(yarn => {\n          const initializedYarnDetails = {};\n          nonNullSizes.forEach(size => {\n            initializedYarnDetails[size] = 0; // Initialize all sizes to 0\n          });\n          return {\n            ...yarn,\n            updatedYarnDetails: initializedYarnDetails // Initialize updated weights to 0\n          };\n        });\n        return {\n          ...data,\n          yarns: initializedYarns\n        };\n      });\n      setUpdatedYarnUsageData(initializedData);\n    }\n  }, [yarnUsageData]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  // List of all possible sizes (to ensure we check across all data)\n  const sizes = [\"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\"];\n\n  // Function to get the sizes that have non-null values across all MatchingNames\n  const getAllNonNullSizes = data => {\n    const nonNullSizes = sizes.filter(size => data.some(row => row[size] !== null));\n    return nonNullSizes;\n  };\n\n  // Get all non-null sizes across all yarn usage data\n  const nonNullSizes = getAllNonNullSizes(yarnUsageData);\n\n  // Function to handle quantity input changes\n  const handleQuantityChange = (matchingName, size, value) => {\n    setQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [matchingName]: {\n        ...prevQuantities[matchingName],\n        [size]: value\n      }\n    }));\n  };\n\n  // Function to get non-null yarns (YarnId and Weight)\n  const getNonNullYarns = data => {\n    const yarns = [];\n    for (let i = 1; i <= 15; i++) {\n      const yarnKey = `Yarn${i}`;\n      if (data[yarnKey] && data[yarnKey].YarnId) {\n        yarns.push({\n          YarnId: data[yarnKey].YarnId,\n          Weight: data[yarnKey].Weight\n        });\n      }\n    }\n    return yarns;\n  };\n\n  // Function to calculate the updated weight based on the quantity change\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\n    var _quantities$matchingN;\n    // Fetch the quantity for the given matchingName and size\n    const quantity = (_quantities$matchingN = quantities[matchingName]) === null || _quantities$matchingN === void 0 ? void 0 : _quantities$matchingN[size];\n    if (!quantity) {\n      return originalWeight; // If no quantity provided, return original weight\n    }\n\n    // Find the percentage change for the given size\n    const row = yarnUsageData.find(row => row.MatchingName === matchingName);\n    const percentage = row ? row[size] : 0;\n\n    // Calculate the updated weight based on percentage and quantity\n    const updatedWeight = originalWeight * (1 + percentage / 100) * quantity;\n    return updatedWeight;\n  };\n\n  // Handle the submit button click to perform the calculation and update table 2\n  const handleSubmit = () => {\n    const updatedData = yarnUsageData.map(data => {\n      const yarns = getNonNullYarns(data);\n      const updatedYarns = yarns.map(yarn => {\n        const updatedYarnDetails = {};\n        nonNullSizes.forEach(size => {\n          // Calculate weight for each size\n          const updatedWeight = calculateUpdatedWeight(yarn.Weight, size, data.MatchingName);\n          updatedYarnDetails[size] = updatedWeight; // Store updated weight for each size\n        });\n        return {\n          ...yarn,\n          updatedYarnDetails\n        };\n      });\n      return {\n        ...data,\n        yarns: updatedYarns\n      };\n    });\n    setUpdatedYarnUsageData(updatedData);\n  };\n\n  // Calculate the total weight for each yarn across all sizes\n  const calculateTotal = yarn => {\n    return nonNullSizes.reduce((total, size) => {\n      return total + (yarn.updatedYarnDetails[size] || 0); // Add up all the weights\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Order Quantity Details for Article No: \", ArticleNo, \" with RSN:\", \" \", (_yarnUsageData$ = yarnUsageData[0]) === null || _yarnUsageData$ === void 0 ? void 0 : _yarnUsageData$.RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), yarnUsageData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matching Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: yarnUsageData.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.MatchingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), nonNullSizes.map(size => {\n            var _quantities$data$Matc;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: ((_quantities$data$Matc = quantities[data.MatchingName]) === null || _quantities$data$Matc === void 0 ? void 0 : _quantities$data$Matc[size]) || \"\",\n                onChange: e => handleQuantityChange(data.MatchingName, size, e.target.value),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this);\n          })]\n        }, dataIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No yarn usage data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), updatedYarnUsageData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Updated Yarn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Matching Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Yarn ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: updatedYarnUsageData.map((data, dataIndex) => {\n            return data.yarns.map((yarn, yarnIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [yarnIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: data.yarns.length,\n                children: data.MatchingName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yarn.YarnId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yarn.Weight.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yarn.updatedYarnDetails[size] !== undefined ? yarn.updatedYarnDetails[size].toFixed(2) : \"-\"\n              }, `${size}-${yarnIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: calculateTotal(yarn).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this)]\n            }, `${dataIndex}-${yarnIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this));\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(AddOrderDetails, \"Oh2l4ucLTy5U/DRvtx5nA3Qor6M=\");\n_c = AddOrderDetails;\nexport default AddOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"AddOrderDetails\");","map":{"version":3,"names":["React","useState","useEffect","getYarnUsageByArticleNo","jsxDEV","_jsxDEV","AddOrderDetails","ArticleNo","_s","_yarnUsageData$","yarnUsageData","setYarnUsageData","error","setError","loading","setLoading","quantities","setQuantities","updatedYarnUsageData","setUpdatedYarnUsageData","fetchYarnUsage","response","success","data","length","err","initializedData","map","yarns","getNonNullYarns","initializedYarns","yarn","initializedYarnDetails","nonNullSizes","forEach","size","updatedYarnDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","sizes","getAllNonNullSizes","filter","some","row","handleQuantityChange","matchingName","value","prevQuantities","i","yarnKey","YarnId","push","Weight","calculateUpdatedWeight","originalWeight","_quantities$matchingN","quantity","find","MatchingName","percentage","updatedWeight","handleSubmit","updatedData","updatedYarns","calculateTotal","reduce","total","RSN","border","cellPadding","style","width","marginTop","dataIndex","_quantities$data$Matc","type","onChange","e","target","min","onClick","yarnIndex","rowSpan","toFixed","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddOrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\r\n\r\nconst AddOrderDetails = ({ ArticleNo }) => {\r\n  const [yarnUsageData, setYarnUsageData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [quantities, setQuantities] = useState({});\r\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]); // To store the updated yarn data\r\n\r\n  useEffect(() => {\r\n    const fetchYarnUsage = async () => {\r\n      try {\r\n        const response = await getYarnUsageByArticleNo(ArticleNo);\r\n        if (response.success && response.data && response.data.length > 0) {\r\n          setYarnUsageData(response.data);\r\n        } else {\r\n          setError(\"No data found for this ArticleNo.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch yarn usage data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchYarnUsage();\r\n  }, [ArticleNo]);\r\n\r\n  useEffect(() => {\r\n    // Initialize the updated yarn usage data with all sizes set to 0\r\n    if (yarnUsageData.length > 0 && updatedYarnUsageData.length === 0) {\r\n      const initializedData = yarnUsageData.map((data) => {\r\n        const yarns = getNonNullYarns(data);\r\n        const initializedYarns = yarns.map((yarn) => {\r\n          const initializedYarnDetails = {};\r\n\r\n          nonNullSizes.forEach((size) => {\r\n            initializedYarnDetails[size] = 0; // Initialize all sizes to 0\r\n          });\r\n\r\n          return {\r\n            ...yarn,\r\n            updatedYarnDetails: initializedYarnDetails, // Initialize updated weights to 0\r\n          };\r\n        });\r\n\r\n        return {\r\n          ...data,\r\n          yarns: initializedYarns,\r\n        };\r\n      });\r\n\r\n      setUpdatedYarnUsageData(initializedData);\r\n    }\r\n  }, [yarnUsageData]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  // List of all possible sizes (to ensure we check across all data)\r\n  const sizes = [\r\n    \"Freesize\",\r\n    \"XS\",\r\n    \"S\",\r\n    \"M\",\r\n    \"L\",\r\n    \"XL\",\r\n    \"2XL\",\r\n    \"3XL\",\r\n    \"4XL\",\r\n    \"5XL\",\r\n  ];\r\n\r\n  // Function to get the sizes that have non-null values across all MatchingNames\r\n  const getAllNonNullSizes = (data) => {\r\n    const nonNullSizes = sizes.filter((size) =>\r\n      data.some((row) => row[size] !== null)\r\n    );\r\n    return nonNullSizes;\r\n  };\r\n\r\n  // Get all non-null sizes across all yarn usage data\r\n  const nonNullSizes = getAllNonNullSizes(yarnUsageData);\r\n\r\n  // Function to handle quantity input changes\r\n  const handleQuantityChange = (matchingName, size, value) => {\r\n    setQuantities((prevQuantities) => ({\r\n      ...prevQuantities,\r\n      [matchingName]: {\r\n        ...prevQuantities[matchingName],\r\n        [size]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Function to get non-null yarns (YarnId and Weight)\r\n  const getNonNullYarns = (data) => {\r\n    const yarns = [];\r\n    for (let i = 1; i <= 15; i++) {\r\n      const yarnKey = `Yarn${i}`;\r\n      if (data[yarnKey] && data[yarnKey].YarnId) {\r\n        yarns.push({\r\n          YarnId: data[yarnKey].YarnId,\r\n          Weight: data[yarnKey].Weight,\r\n        });\r\n      }\r\n    }\r\n    return yarns;\r\n  };\r\n\r\n  // Function to calculate the updated weight based on the quantity change\r\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\r\n    // Fetch the quantity for the given matchingName and size\r\n    const quantity = quantities[matchingName]?.[size];\r\n    if (!quantity) {\r\n      return originalWeight; // If no quantity provided, return original weight\r\n    }\r\n\r\n    // Find the percentage change for the given size\r\n    const row = yarnUsageData.find((row) => row.MatchingName === matchingName);\r\n    const percentage = row ? row[size] : 0;\r\n\r\n    // Calculate the updated weight based on percentage and quantity\r\n    const updatedWeight = originalWeight * (1 + percentage / 100) * quantity;\r\n    return updatedWeight;\r\n  };\r\n\r\n  // Handle the submit button click to perform the calculation and update table 2\r\n  const handleSubmit = () => {\r\n    const updatedData = yarnUsageData.map((data) => {\r\n      const yarns = getNonNullYarns(data);\r\n      const updatedYarns = yarns.map((yarn) => {\r\n        const updatedYarnDetails = {};\r\n\r\n        nonNullSizes.forEach((size) => {\r\n          // Calculate weight for each size\r\n          const updatedWeight = calculateUpdatedWeight(\r\n            yarn.Weight,\r\n            size,\r\n            data.MatchingName\r\n          );\r\n          updatedYarnDetails[size] = updatedWeight; // Store updated weight for each size\r\n        });\r\n\r\n        return {\r\n          ...yarn,\r\n          updatedYarnDetails,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...data,\r\n        yarns: updatedYarns,\r\n      };\r\n    });\r\n\r\n    setUpdatedYarnUsageData(updatedData);\r\n  };\r\n\r\n  // Calculate the total weight for each yarn across all sizes\r\n  const calculateTotal = (yarn) => {\r\n    return nonNullSizes.reduce((total, size) => {\r\n      return total + (yarn.updatedYarnDetails[size] || 0); // Add up all the weights\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Order Quantity Details for Article No: {ArticleNo} with RSN:{\" \"}\r\n        {yarnUsageData[0]?.RSN}\r\n      </h2>\r\n\r\n      {/* Table for Yarn Quantity Inputs */}\r\n      {yarnUsageData.length > 0 ? (\r\n        <table\r\n          border=\"1\"\r\n          cellPadding=\"10\"\r\n          style={{ width: \"100%\", marginTop: \"20px\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Matching Name</th>\r\n              {nonNullSizes.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {yarnUsageData.map((data, dataIndex) => (\r\n              <tr key={dataIndex}>\r\n                <td>{data.MatchingName}</td>\r\n                {nonNullSizes.map((size) => (\r\n                  <td key={size}>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={quantities[data.MatchingName]?.[size] || \"\"}\r\n                      onChange={(e) =>\r\n                        handleQuantityChange(\r\n                          data.MatchingName,\r\n                          size,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div>No yarn usage data found.</div>\r\n      )}\r\n\r\n      {/* Submit Button to trigger calculation */}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n\r\n      {/* Table for YarnId and Weight (After Submit) */}\r\n      {updatedYarnUsageData.length > 0 && (\r\n        <div style={{ marginTop: \"30px\" }}>\r\n          <h2>Updated Yarn Details</h2>\r\n          <table\r\n            border=\"1\"\r\n            cellPadding=\"10\"\r\n            style={{ width: \"100%\", marginTop: \"20px\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Matching Name</th>\r\n                <th>Yarn ID</th>\r\n                <th>Weight</th>\r\n                {nonNullSizes.map((size) => (\r\n                  <th key={size}>{size}</th>\r\n                ))}\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {updatedYarnUsageData.map((data, dataIndex) => {\r\n                return data.yarns.map((yarn, yarnIndex) => (\r\n                  <tr key={`${dataIndex}-${yarnIndex}`}>\r\n                    {yarnIndex === 0 && (\r\n                      <td rowSpan={data.yarns.length}>{data.MatchingName}</td>\r\n                    )}\r\n                    <td>{yarn.YarnId}</td>\r\n                    <td>{yarn.Weight.toFixed(2)}</td>\r\n                    {/* Display Yarn Details for non-null sizes */}\r\n                    {nonNullSizes.map((size) => (\r\n                      <td key={`${size}-${yarnIndex}`}>\r\n                        {yarn.updatedYarnDetails[size] !== undefined\r\n                          ? yarn.updatedYarnDetails[size].toFixed(2)\r\n                          : \"-\"}\r\n                      </td>\r\n                    ))}\r\n                    <td>{calculateTotal(yarn).toFixed(2)}</td>\r\n                  </tr>\r\n                ));\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrderDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACzC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtEC,SAAS,CAAC,MAAM;IACd,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,uBAAuB,CAACI,SAAS,CAAC;QACzD,IAAIc,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACjEb,gBAAgB,CAACU,QAAQ,CAACE,IAAI,CAAC;QACjC,CAAC,MAAM;UACLV,QAAQ,CAAC,mCAAmC,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZZ,QAAQ,CAAC,kCAAkC,CAAC;MAC9C,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEfL,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,aAAa,CAACc,MAAM,GAAG,CAAC,IAAIN,oBAAoB,CAACM,MAAM,KAAK,CAAC,EAAE;MACjE,MAAME,eAAe,GAAGhB,aAAa,CAACiB,GAAG,CAAEJ,IAAI,IAAK;QAClD,MAAMK,KAAK,GAAGC,eAAe,CAACN,IAAI,CAAC;QACnC,MAAMO,gBAAgB,GAAGF,KAAK,CAACD,GAAG,CAAEI,IAAI,IAAK;UAC3C,MAAMC,sBAAsB,GAAG,CAAC,CAAC;UAEjCC,YAAY,CAACC,OAAO,CAAEC,IAAI,IAAK;YAC7BH,sBAAsB,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACpC,CAAC,CAAC;UAEF,OAAO;YACL,GAAGJ,IAAI;YACPK,kBAAkB,EAAEJ,sBAAsB,CAAE;UAC9C,CAAC;QACH,CAAC,CAAC;QAEF,OAAO;UACL,GAAGT,IAAI;UACPK,KAAK,EAAEE;QACT,CAAC;MACH,CAAC,CAAC;MAEFX,uBAAuB,CAACO,eAAe,CAAC;IAC1C;EACF,CAAC,EAAE,CAAChB,aAAa,CAAC,CAAC;EAEnB,IAAII,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAAgC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI7B,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAgC,QAAA,EAAMzB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;;EAEA;EACA,MAAMC,KAAK,GAAG,CACZ,UAAU,EACV,IAAI,EACJ,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;;EAED;EACA,MAAMC,kBAAkB,GAAIpB,IAAI,IAAK;IACnC,MAAMU,YAAY,GAAGS,KAAK,CAACE,MAAM,CAAET,IAAI,IACrCZ,IAAI,CAACsB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACX,IAAI,CAAC,KAAK,IAAI,CACvC,CAAC;IACD,OAAOF,YAAY;EACrB,CAAC;;EAED;EACA,MAAMA,YAAY,GAAGU,kBAAkB,CAACjC,aAAa,CAAC;;EAEtD;EACA,MAAMqC,oBAAoB,GAAGA,CAACC,YAAY,EAAEb,IAAI,EAAEc,KAAK,KAAK;IAC1DhC,aAAa,CAAEiC,cAAc,KAAM;MACjC,GAAGA,cAAc;MACjB,CAACF,YAAY,GAAG;QACd,GAAGE,cAAc,CAACF,YAAY,CAAC;QAC/B,CAACb,IAAI,GAAGc;MACV;IACF,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMpB,eAAe,GAAIN,IAAI,IAAK;IAChC,MAAMK,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,OAAO,GAAG,OAAOD,CAAC,EAAE;MAC1B,IAAI5B,IAAI,CAAC6B,OAAO,CAAC,IAAI7B,IAAI,CAAC6B,OAAO,CAAC,CAACC,MAAM,EAAE;QACzCzB,KAAK,CAAC0B,IAAI,CAAC;UACTD,MAAM,EAAE9B,IAAI,CAAC6B,OAAO,CAAC,CAACC,MAAM;UAC5BE,MAAM,EAAEhC,IAAI,CAAC6B,OAAO,CAAC,CAACG;QACxB,CAAC,CAAC;MACJ;IACF;IACA,OAAO3B,KAAK;EACd,CAAC;;EAED;EACA,MAAM4B,sBAAsB,GAAGA,CAACC,cAAc,EAAEtB,IAAI,EAAEa,YAAY,KAAK;IAAA,IAAAU,qBAAA;IACrE;IACA,MAAMC,QAAQ,IAAAD,qBAAA,GAAG1C,UAAU,CAACgC,YAAY,CAAC,cAAAU,qBAAA,uBAAxBA,qBAAA,CAA2BvB,IAAI,CAAC;IACjD,IAAI,CAACwB,QAAQ,EAAE;MACb,OAAOF,cAAc,CAAC,CAAC;IACzB;;IAEA;IACA,MAAMX,GAAG,GAAGpC,aAAa,CAACkD,IAAI,CAAEd,GAAG,IAAKA,GAAG,CAACe,YAAY,KAAKb,YAAY,CAAC;IAC1E,MAAMc,UAAU,GAAGhB,GAAG,GAAGA,GAAG,CAACX,IAAI,CAAC,GAAG,CAAC;;IAEtC;IACA,MAAM4B,aAAa,GAAGN,cAAc,IAAI,CAAC,GAAGK,UAAU,GAAG,GAAG,CAAC,GAAGH,QAAQ;IACxE,OAAOI,aAAa;EACtB,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGvD,aAAa,CAACiB,GAAG,CAAEJ,IAAI,IAAK;MAC9C,MAAMK,KAAK,GAAGC,eAAe,CAACN,IAAI,CAAC;MACnC,MAAM2C,YAAY,GAAGtC,KAAK,CAACD,GAAG,CAAEI,IAAI,IAAK;QACvC,MAAMK,kBAAkB,GAAG,CAAC,CAAC;QAE7BH,YAAY,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC7B;UACA,MAAM4B,aAAa,GAAGP,sBAAsB,CAC1CzB,IAAI,CAACwB,MAAM,EACXpB,IAAI,EACJZ,IAAI,CAACsC,YACP,CAAC;UACDzB,kBAAkB,CAACD,IAAI,CAAC,GAAG4B,aAAa,CAAC,CAAC;QAC5C,CAAC,CAAC;QAEF,OAAO;UACL,GAAGhC,IAAI;UACPK;QACF,CAAC;MACH,CAAC,CAAC;MAEF,OAAO;QACL,GAAGb,IAAI;QACPK,KAAK,EAAEsC;MACT,CAAC;IACH,CAAC,CAAC;IAEF/C,uBAAuB,CAAC8C,WAAW,CAAC;EACtC,CAAC;;EAED;EACA,MAAME,cAAc,GAAIpC,IAAI,IAAK;IAC/B,OAAOE,YAAY,CAACmC,MAAM,CAAC,CAACC,KAAK,EAAElC,IAAI,KAAK;MAC1C,OAAOkC,KAAK,IAAItC,IAAI,CAACK,kBAAkB,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,oBACE9B,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,GAAI,yCACqC,EAAC9B,SAAS,EAAC,YAAU,EAAC,GAAG,GAAAE,eAAA,GAC/DC,aAAa,CAAC,CAAC,CAAC,cAAAD,eAAA,uBAAhBA,eAAA,CAAkB6D,GAAG;IAAA;MAAAhC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EAGJ/B,aAAa,CAACc,MAAM,GAAG,CAAC,gBACvBnB,OAAA;MACEkE,MAAM,EAAC,GAAG;MACVC,WAAW,EAAC,IAAI;MAChBC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAtC,QAAA,gBAE5ChC,OAAA;QAAAgC,QAAA,eACEhC,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAAgC,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACrBR,YAAY,CAACN,GAAG,CAAEQ,IAAI,iBACrB9B,OAAA;YAAAgC,QAAA,EAAgBF;UAAI,GAAXA,IAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRpC,OAAA;QAAAgC,QAAA,EACG3B,aAAa,CAACiB,GAAG,CAAC,CAACJ,IAAI,EAAEqD,SAAS,kBACjCvE,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAAgC,QAAA,EAAKd,IAAI,CAACsC;UAAY;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC3BR,YAAY,CAACN,GAAG,CAAEQ,IAAI;YAAA,IAAA0C,qBAAA;YAAA,oBACrBxE,OAAA;cAAAgC,QAAA,eACEhC,OAAA;gBACEyE,IAAI,EAAC,QAAQ;gBACb7B,KAAK,EAAE,EAAA4B,qBAAA,GAAA7D,UAAU,CAACO,IAAI,CAACsC,YAAY,CAAC,cAAAgB,qBAAA,uBAA7BA,qBAAA,CAAgC1C,IAAI,CAAC,KAAI,EAAG;gBACnD4C,QAAQ,EAAGC,CAAC,IACVjC,oBAAoB,CAClBxB,IAAI,CAACsC,YAAY,EACjB1B,IAAI,EACJ6C,CAAC,CAACC,MAAM,CAAChC,KACX,CACD;gBACDiC,GAAG,EAAC;cAAG;gBAAA5C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR;YAAC,GAZKN,IAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaT,CAAC;UAAA,CACN,CAAC;QAAA,GAjBKmC,SAAS;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAERpC,OAAA;MAAAgC,QAAA,EAAK;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACpC,eAGDpC,OAAA;MAAQ8E,OAAO,EAAEnB,YAAa;MAAA3B,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG7CvB,oBAAoB,CAACM,MAAM,GAAG,CAAC,iBAC9BnB,OAAA;MAAKoE,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAtC,QAAA,gBAChChC,OAAA;QAAAgC,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BpC,OAAA;QACEkE,MAAM,EAAC,GAAG;QACVC,WAAW,EAAC,IAAI;QAChBC,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAtC,QAAA,gBAE5ChC,OAAA;UAAAgC,QAAA,eACEhC,OAAA;YAAAgC,QAAA,gBACEhC,OAAA;cAAAgC,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBpC,OAAA;cAAAgC,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBpC,OAAA;cAAAgC,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACdR,YAAY,CAACN,GAAG,CAAEQ,IAAI,iBACrB9B,OAAA;cAAAgC,QAAA,EAAgBF;YAAI,GAAXA,IAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAC1B,CAAC,eACFpC,OAAA;cAAAgC,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpC,OAAA;UAAAgC,QAAA,EACGnB,oBAAoB,CAACS,GAAG,CAAC,CAACJ,IAAI,EAAEqD,SAAS,KAAK;YAC7C,OAAOrD,IAAI,CAACK,KAAK,CAACD,GAAG,CAAC,CAACI,IAAI,EAAEqD,SAAS,kBACpC/E,OAAA;cAAAgC,QAAA,GACG+C,SAAS,KAAK,CAAC,iBACd/E,OAAA;gBAAIgF,OAAO,EAAE9D,IAAI,CAACK,KAAK,CAACJ,MAAO;gBAAAa,QAAA,EAAEd,IAAI,CAACsC;cAAY;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACxD,eACDpC,OAAA;gBAAAgC,QAAA,EAAKN,IAAI,CAACsB;cAAM;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtBpC,OAAA;gBAAAgC,QAAA,EAAKN,IAAI,CAACwB,MAAM,CAAC+B,OAAO,CAAC,CAAC;cAAC;gBAAAhD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EAEhCR,YAAY,CAACN,GAAG,CAAEQ,IAAI,iBACrB9B,OAAA;gBAAAgC,QAAA,EACGN,IAAI,CAACK,kBAAkB,CAACD,IAAI,CAAC,KAAKoD,SAAS,GACxCxD,IAAI,CAACK,kBAAkB,CAACD,IAAI,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC,GACxC;cAAG,GAHA,GAAGnD,IAAI,IAAIiD,SAAS,EAAE;gBAAA9C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAI3B,CACL,CAAC,eACFpC,OAAA;gBAAAgC,QAAA,EAAK8B,cAAc,CAACpC,IAAI,CAAC,CAACuD,OAAO,CAAC,CAAC;cAAC;gBAAAhD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAdnC,GAAGmC,SAAS,IAAIQ,SAAS,EAAE;cAAA9C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAehC,CACL,CAAC;UACJ,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA7QIF,eAAe;AAAAkF,EAAA,GAAflF,eAAe;AA+QrB,eAAeA,eAAe;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}