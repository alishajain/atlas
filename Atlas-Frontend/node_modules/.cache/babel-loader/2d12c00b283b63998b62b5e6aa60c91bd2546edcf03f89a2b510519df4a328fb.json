{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getImageByRSN } from \"../API/ImageApi\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowImage = ({\n  RSN\n}) => {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await getImageByRSN(Number(RSN));\n\n        // Check if response data contains image and handle it\n        if (response.data && response.data.length > 0 && response.data[0].ImageData) {\n          const imagePath = response.data[0].ImageData.replace(/\\\\/g, \"/\");\n          setImageData(imagePath);\n        } else {\n          setImageData(null); // No image data found, but still keep update button\n        }\n      } catch (err) {\n        setError(\"Error fetching image\");\n        console.error(\"Error details:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImage();\n  }, [RSN]);\n\n  // Navigate to the Update Image page\n  const handleUpdateImage = () => {\n    navigate(`/update-image/${RSN}`, {\n      state: {\n        RSN: RSN\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateImage,\n        children: \"Update Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), imageData ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000/${imageData}`,\n      alt: \"Sample\",\n      style: {\n        width: \"100%\",\n        maxWidth: \"600px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No image found for this RSN. You can upload a new one.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowImage, \"Kx4wcagGqL975zBxwKk5q9zRsfw=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowImage;\nexport default ShowImage;\nvar _c;\n$RefreshReg$(_c, \"ShowImage\");","map":{"version":3,"names":["React","useState","useEffect","getImageByRSN","useNavigate","jsxDEV","_jsxDEV","ShowImage","RSN","_s","imageData","setImageData","loading","setLoading","error","setError","navigate","fetchImage","response","Number","data","length","ImageData","imagePath","replace","err","console","handleUpdateImage","state","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","src","alt","width","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowImage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getImageByRSN } from \"../API/ImageApi\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\r\n\r\nconst ShowImage = ({ RSN }) => {\r\n  const [imageData, setImageData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const response = await getImageByRSN(Number(RSN));\r\n\r\n        // Check if response data contains image and handle it\r\n        if (response.data && response.data.length > 0 && response.data[0].ImageData) {\r\n          const imagePath = response.data[0].ImageData.replace(/\\\\/g, \"/\");\r\n          setImageData(imagePath);\r\n        } else {\r\n          setImageData(null); // No image data found, but still keep update button\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching image\");\r\n        console.error(\"Error details:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, [RSN]);\r\n\r\n  // Navigate to the Update Image page\r\n  const handleUpdateImage = () => {\r\n    navigate(`/update-image/${RSN}`, { state: { RSN: RSN } });\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading image...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <button onClick={handleUpdateImage}>Update Image</button>\r\n      </div>\r\n      {imageData ? (\r\n        <img\r\n          src={`http://localhost:5000/${imageData}`}\r\n          alt=\"Sample\"\r\n          style={{ width: \"100%\", maxWidth: \"600px\" }}\r\n        />\r\n      ) : (\r\n        <p>No image found for this RSN. You can upload a new one.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFJ,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QACd,MAAMG,QAAQ,GAAG,MAAMf,aAAa,CAACgB,MAAM,CAACX,GAAG,CAAC,CAAC;;QAEjD;QACA,IAAIU,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,SAAS,EAAE;UAC3E,MAAMC,SAAS,GAAGL,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,SAAS,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;UAChEb,YAAY,CAACY,SAAS,CAAC;QACzB,CAAC,MAAM;UACLZ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACtB;MACF,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZV,QAAQ,CAAC,sBAAsB,CAAC;QAChCW,OAAO,CAACZ,KAAK,CAAC,gBAAgB,EAAEW,GAAG,CAAC;MACtC,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACT,GAAG,CAAC,CAAC;;EAET;EACA,MAAMmB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BX,QAAQ,CAAC,iBAAiBR,GAAG,EAAE,EAAE;MAAEoB,KAAK,EAAE;QAAEpB,GAAG,EAAEA;MAAI;IAAE,CAAC,CAAC;EAC3D,CAAC;EAED,IAAII,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAuB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,IAAInB,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAAuB,QAAA,EAAIf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,oBACE3B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAK4B,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,eACnCvB,OAAA;QAAQ8B,OAAO,EAAET,iBAAkB;QAAAE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EACLvB,SAAS,gBACRJ,OAAA;MACE+B,GAAG,EAAE,yBAAyB3B,SAAS,EAAG;MAC1C4B,GAAG,EAAC,QAAQ;MACZJ,KAAK,EAAE;QAAEK,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAQ;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,gBAEF3B,OAAA;MAAAuB,QAAA,EAAG;IAAsD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7DIF,SAAS;EAAA,QAKIH,WAAW;AAAA;AAAAqC,EAAA,GALxBlC,SAAS;AA+Df,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}