{"ast":null,"code":"import axios from'axios';// API base URL\nconst API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Function to get comments for a specific RSN\nexport const getCommentsByRSN=async RSN=>{try{const response=await axios.get(`${API_URL}/comments/${RSN}`);return response.data;}catch(error){console.error('Error fetching comments:',error);throw new Error('Failed to fetch comments');}};// Function to add a new comment\nexport const addComment=async(RSN,userId,comment)=>{try{const data={RSN,UserId:userId,Comments:comment};const response=await axios.post(`${API_URL}/comments`,data);console.log(response.data);return response.data;}catch(error){console.error('Error adding comment:',error);throw new Error('Failed to add comment');}};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getCommentsByRSN","RSN","response","get","data","error","console","Error","addComment","userId","comment","UserId","Comments","post","log"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/CommentApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API base URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Function to get comments for a specific RSN\r\nexport const getCommentsByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/comments/${RSN}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching comments:', error);\r\n    throw new Error('Failed to fetch comments');\r\n  }\r\n};\r\n\r\n// Function to add a new comment\r\nexport const addComment = async (RSN, userId, comment) => {\r\n  try {\r\n    const data = { RSN, UserId: userId, Comments: comment };\r\n    const response = await axios.post(`${API_URL}/comments`, data);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding comment:', error);\r\n    throw new Error('Failed to add comment');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E;AACA,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAC,GAAG,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,aAAaK,GAAG,EAAE,CAAC,CAC9D,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,IAAI,CAAAE,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOP,GAAG,CAAEQ,MAAM,CAAEC,OAAO,GAAK,CACxD,GAAI,CACF,KAAM,CAAAN,IAAI,CAAG,CAAEH,GAAG,CAAEU,MAAM,CAAEF,MAAM,CAAEG,QAAQ,CAAEF,OAAQ,CAAC,CACvD,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAP,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,WAAW,CAAEQ,IAAI,CAAC,CAC9DE,OAAO,CAACQ,GAAG,CAACZ,QAAQ,CAACE,IAAI,CAAC,CAC1B,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,IAAI,CAAAE,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}