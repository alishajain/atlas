{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import{getColorMatchingByRSN}from\"../API/ColorApi\";import{useSelector}from\"react-redux\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddArticle=()=>{const location=useLocation();const navigate=useNavigate();const userId=useSelector(state=>state.user.userId);// RSN fetched from location state\nconst RSN=location.state?location.state.RSN:null;// State for form data\nconst[articleNumber,setArticleNumber]=useState(\"\");const[sizes,setSizes]=useState({freesize:{selected:false,weight:\"\"},xs:{selected:false,weight:\"\"},s:{selected:false,weight:\"\"},m:{selected:false,weight:\"\"},l:{selected:false,weight:\"\"},xl:{selected:false,weight:\"\"},xxl:{selected:false,weight:\"\"},\"3xl\":{selected:false,weight:\"\"},\"4xl\":{selected:false,weight:\"\"},\"5xl\":{selected:false,weight:\"\"}});const[selectedColors,setSelectedColors]=useState([]);const[colorOptions,setColorOptions]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");// Fetch matching colors based on RSN\nuseEffect(()=>{const colors=async()=>{setLoading(true);try{const response=await getColorMatchingByRSN(RSN);// Filter unique color options based on MatchingName\nconst uniqueColors=[...new Map(response.data.map(color=>[color.MatchingName,color])).values()];setColorOptions(uniqueColors);}catch(err){setError(\"Failed to fetch colors.\");}finally{setLoading(false);}};if(RSN){colors();}},[RSN]);// Handle form submission\nconst handleSubmit=event=>{event.preventDefault();// Prepare form data\nconst formData={RSN,articleNumber,sizes,selectedColors};console.log(\"Form data:\",formData);// Example of navigating after submission (you can replace this with your actual submit logic)\nnavigate(\"/success\");// Assuming you have a success route\n};// Handle checkbox change for sizes\nconst handleSizeChange=e=>{const{name,checked}=e.target;setSizes(prevSizes=>({...prevSizes,[name]:{...prevSizes[name],selected:checked}}));};// Handle weight variation input change for sizes\nconst handleWeightChange=e=>{const{name,value}=e.target;setSizes(prevSizes=>({...prevSizes,[name]:{...prevSizes[name],weight:value}}));};// Handle checkbox change for selected colors\nconst handleColorChange=e=>{const{name,checked}=e.target;setSelectedColors(prevColors=>checked?[...prevColors,name]:prevColors.filter(color=>color!==name));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add Article\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"RSN:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:RSN,readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Article Number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:articleNumber,onChange:e=>setArticleNumber(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sizes:\"}),/*#__PURE__*/_jsx(\"div\",{children:Object.keys(sizes).map(size=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:size,checked:sizes[size].selected,onChange:handleSizeChange}),/*#__PURE__*/_jsx(\"label\",{children:size.toUpperCase()}),sizes[size].selected&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:`${size}_weight`,value:sizes[size].weight,placeholder:\"Weight Variation Percentage\",onChange:handleWeightChange})]},size))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Selected Colors:\"}),/*#__PURE__*/_jsx(\"div\",{children:colorOptions.map(color=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:color.MatchingName,onChange:handleColorChange}),/*#__PURE__*/_jsx(\"label\",{children:color.MatchingName})]},color.MatchingName))})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})})]})]});};export default AddArticle;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","getColorMatchingByRSN","useSelector","jsx","_jsx","jsxs","_jsxs","AddArticle","location","navigate","userId","state","user","RSN","articleNumber","setArticleNumber","sizes","setSizes","freesize","selected","weight","xs","s","m","l","xl","xxl","selectedColors","setSelectedColors","colorOptions","setColorOptions","loading","setLoading","error","setError","colors","response","uniqueColors","Map","data","map","color","MatchingName","values","err","handleSubmit","event","preventDefault","formData","console","log","handleSizeChange","e","name","checked","target","prevSizes","handleWeightChange","value","handleColorChange","prevColors","filter","children","onSubmit","type","readOnly","onChange","required","Object","keys","size","toUpperCase","placeholder"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddArticle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { getColorMatchingByRSN } from \"../API/ColorApi\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddArticle = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  // RSN fetched from location state\r\n  const RSN = location.state ? location.state.RSN : null;\r\n\r\n  // State for form data\r\n  const [articleNumber, setArticleNumber] = useState(\"\");\r\n  const [sizes, setSizes] = useState({\r\n    freesize: { selected: false, weight: \"\" },\r\n    xs: { selected: false, weight: \"\" },\r\n    s: { selected: false, weight: \"\" },\r\n    m: { selected: false, weight: \"\" },\r\n    l: { selected: false, weight: \"\" },\r\n    xl: { selected: false, weight: \"\" },\r\n    xxl: { selected: false, weight: \"\" },\r\n    \"3xl\": { selected: false, weight: \"\" },\r\n    \"4xl\": { selected: false, weight: \"\" },\r\n    \"5xl\": { selected: false, weight: \"\" },\r\n  });\r\n  const [selectedColors, setSelectedColors] = useState([]);\r\n  const [colorOptions, setColorOptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch matching colors based on RSN\r\n  useEffect(() => {\r\n    const colors = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getColorMatchingByRSN(RSN);\r\n        // Filter unique color options based on MatchingName\r\n        const uniqueColors = [\r\n          ...new Map(response.data.map((color) => [color.MatchingName, color])).values(),\r\n        ];\r\n        setColorOptions(uniqueColors);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch colors.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (RSN) {\r\n      colors();\r\n    }\r\n  }, [RSN]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Prepare form data\r\n    const formData = {\r\n      RSN,\r\n      articleNumber,\r\n      sizes,\r\n      selectedColors,\r\n    };\r\n\r\n    console.log(\"Form data:\", formData);\r\n\r\n    // Example of navigating after submission (you can replace this with your actual submit logic)\r\n    navigate(\"/success\"); // Assuming you have a success route\r\n  };\r\n\r\n  // Handle checkbox change for sizes\r\n  const handleSizeChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setSizes((prevSizes) => ({\r\n      ...prevSizes,\r\n      [name]: { ...prevSizes[name], selected: checked },\r\n    }));\r\n  };\r\n\r\n  // Handle weight variation input change for sizes\r\n  const handleWeightChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSizes((prevSizes) => ({\r\n      ...prevSizes,\r\n      [name]: { ...prevSizes[name], weight: value },\r\n    }));\r\n  };\r\n\r\n  // Handle checkbox change for selected colors\r\n  const handleColorChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setSelectedColors((prevColors) =>\r\n      checked\r\n        ? [...prevColors, name]\r\n        : prevColors.filter((color) => color !== name)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add Article</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* RSN Field (read-only) */}\r\n        <div>\r\n          <label>RSN:</label>\r\n          <input type=\"text\" value={RSN} readOnly />\r\n        </div>\r\n\r\n        {/* Article Number Field */}\r\n        <div>\r\n          <label>Article Number:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={articleNumber}\r\n            onChange={(e) => setArticleNumber(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Sizes Checkboxes with Weight Variation */}\r\n        <div>\r\n          <label>Sizes:</label>\r\n          <div>\r\n            {Object.keys(sizes).map((size) => (\r\n              <div key={size}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={size}\r\n                  checked={sizes[size].selected}\r\n                  onChange={handleSizeChange}\r\n                />\r\n                <label>{size.toUpperCase()}</label>\r\n                {sizes[size].selected && (\r\n                  <input\r\n                    type=\"text\"\r\n                    name={`${size}_weight`}\r\n                    value={sizes[size].weight}\r\n                    placeholder=\"Weight Variation Percentage\"\r\n                    onChange={handleWeightChange}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Colors Checkboxes */}\r\n        <div>\r\n          <label>Selected Colors:</label>\r\n          <div>\r\n            {colorOptions.map((color) => (\r\n              <div key={color.MatchingName}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={color.MatchingName}\r\n                  onChange={handleColorChange}\r\n                />\r\n                <label>{color.MatchingName}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddArticle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}