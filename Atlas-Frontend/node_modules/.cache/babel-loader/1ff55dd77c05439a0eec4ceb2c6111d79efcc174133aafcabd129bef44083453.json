{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddColorDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addColorDetail } from \"../API/ColorDetailApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddColorDetails = ({\n  numColors,\n  matchingNames,\n  RSN,\n  selectedStates\n}) => {\n  _s();\n  // Define initial state for the form with default values\n  const initialState = {\n    ColorId: \"\",\n    BaseColor: {\n      name: null,\n      weight: 0\n    },\n    // Base color with subfields name and weight\n    colors: Array(14).fill({\n      name: null,\n      weight: 0\n    }),\n    // Default name is null, weight is 0\n    totalWeight: 0 // Total weight field\n  };\n  const [formData, setFormData] = useState(Array(numColors).fill(initialState));\n\n  // Handle change for input fields (ColorId, BaseColor Name/Weight, and each Color Name/Weight)\n  const handleInputChange = (e, index, field) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedFormData = [...formData];\n    if (field === \"colors\") {\n      updatedFormData[index].colors[name] = value;\n    } else if (field === \"BaseColor\") {\n      updatedFormData[index].BaseColor[name] = value;\n    } else {\n      updatedFormData[index][name] = value;\n    }\n\n    // Recalculate total weight whenever a weight field is changed\n    if (field === \"colors\" && name.includes(\"weight\")) {\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce((sum, color) => {\n        return sum + (parseFloat(color.weight) || 0); // Sum up all color weights, defaulting to 0 if invalid\n      }, 0);\n    }\n\n    // Recalculate total weight for BaseColor\n    if (field === \"BaseColor\" && name === \"weight\") {\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce((sum, color) => {\n        return sum + (parseFloat(color.weight) || 0);\n      }, 0) + (parseFloat(updatedFormData[index].BaseColor.weight) || 0);\n    }\n    setFormData(updatedFormData);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data in the expected format\n    const colorData = formData.map(row => {\n      const colors = row.colors.reduce((acc, color, index) => {\n        acc[`Color${index + 1}`] = {\n          name: color.name,\n          weight: color.weight\n        };\n        return acc;\n      }, {});\n      return {\n        ColorId: row.ColorId,\n        BaseColor: row.BaseColor,\n        // Include BaseColor object with name and weight\n        totalWeight: row.totalWeight,\n        // Add totalWeight to the object\n        ...colors // Add Color1, Color2, ... Color14 to the object\n      };\n    });\n    try {\n      // Send the data to the backend via the addColorDetail API call from ColordetailsApi.js\n      const response = await Promise.all(colorData.map(data => addColorDetail(data)));\n      console.log(response); // Log the successful response\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: \"100%\",\n        tableLayout: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            style: {\n              width: \"4%\"\n            },\n            children: \"ColorId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            style: {\n              width: \"4%\"\n            },\n            children: \"Base Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), [...Array(14)].map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            style: {\n              width: \"6%\"\n            },\n            children: [\"Color \", index + 1]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            style: {\n              width: \"4%\"\n            },\n            children: \"Total Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: formData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"ColorId\",\n              value: row.ColorId,\n              onChange: e => handleInputChange(e, rowIndex, \"ColorId\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: row.BaseColor.name || \"\",\n              placeholder: \"Base Color Name\",\n              onChange: e => handleInputChange(e, rowIndex, \"BaseColor\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"weight\",\n              value: row.BaseColor.weight || 0,\n              placeholder: \"Base Color Weight\",\n              onChange: e => handleInputChange(e, rowIndex, \"BaseColor\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), row.colors.map((color, colorIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: colorIndex,\n                value: color.name || \"\",\n                placeholder: `Color ${colorIndex + 1} Name`,\n                onChange: e => handleInputChange(e, rowIndex, \"colors\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: colorIndex,\n                value: color.weight || 0,\n                placeholder: `Color ${colorIndex + 1} Weight`,\n                onChange: e => handleInputChange(e, rowIndex, \"colors\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, colorIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"totalWeight\",\n              value: row.totalWeight,\n              readOnly: true,\n              style: {\n                backgroundColor: \"#f0f0f0\"\n              } // Make it read-only\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AddColorDetails, \"ynf/TbGkNSXq3adX97ZbK07S0sI=\");\n_c = AddColorDetails;\nexport default AddColorDetails;\nvar _c;\n$RefreshReg$(_c, \"AddColorDetails\");","map":{"version":3,"names":["React","useState","addColorDetail","jsxDEV","_jsxDEV","AddColorDetails","numColors","matchingNames","RSN","selectedStates","_s","initialState","ColorId","BaseColor","name","weight","colors","Array","fill","totalWeight","formData","setFormData","handleInputChange","e","index","field","value","target","updatedFormData","includes","reduce","sum","color","parseFloat","handleSubmit","preventDefault","colorData","map","row","acc","response","Promise","all","data","console","log","error","onSubmit","children","border","style","width","tableLayout","rowSpan","fileName","_jsxFileName","lineNumber","columnNumber","_","colSpan","rowIndex","type","onChange","placeholder","colorIndex","Fragment","readOnly","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddColorDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addColorDetail } from \"../API/ColorDetailApi\";\r\n\r\nconst AddColorDetails = ({ numColors, matchingNames, RSN, selectedStates }) => {\r\n  // Define initial state for the form with default values\r\n  const initialState = {\r\n    ColorId: \"\",\r\n    BaseColor: { name: null, weight: 0 }, // Base color with subfields name and weight\r\n    colors: Array(14).fill({ name: null, weight: 0 }), // Default name is null, weight is 0\r\n    totalWeight: 0, // Total weight field\r\n  };\r\n\r\n  const [formData, setFormData] = useState(Array(numColors).fill(initialState));\r\n\r\n  // Handle change for input fields (ColorId, BaseColor Name/Weight, and each Color Name/Weight)\r\n  const handleInputChange = (e, index, field) => {\r\n    const { name, value } = e.target;\r\n    const updatedFormData = [...formData];\r\n\r\n    if (field === \"colors\") {\r\n      updatedFormData[index].colors[name] = value;\r\n    } else if (field === \"BaseColor\") {\r\n      updatedFormData[index].BaseColor[name] = value;\r\n    } else {\r\n      updatedFormData[index][name] = value;\r\n    }\r\n\r\n    // Recalculate total weight whenever a weight field is changed\r\n    if (field === \"colors\" && name.includes(\"weight\")) {\r\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce(\r\n        (sum, color) => {\r\n          return sum + (parseFloat(color.weight) || 0); // Sum up all color weights, defaulting to 0 if invalid\r\n        },\r\n        0\r\n      );\r\n    }\r\n\r\n    // Recalculate total weight for BaseColor\r\n    if (field === \"BaseColor\" && name === \"weight\") {\r\n      updatedFormData[index].totalWeight =\r\n        updatedFormData[index].colors.reduce((sum, color) => {\r\n          return sum + (parseFloat(color.weight) || 0);\r\n        }, 0) + (parseFloat(updatedFormData[index].BaseColor.weight) || 0);\r\n    }\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data in the expected format\r\n    const colorData = formData.map((row) => {\r\n      const colors = row.colors.reduce((acc, color, index) => {\r\n        acc[`Color${index + 1}`] = { name: color.name, weight: color.weight };\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        ColorId: row.ColorId,\r\n        BaseColor: row.BaseColor, // Include BaseColor object with name and weight\r\n        totalWeight: row.totalWeight, // Add totalWeight to the object\r\n        ...colors, // Add Color1, Color2, ... Color14 to the object\r\n      };\r\n    });\r\n\r\n    try {\r\n      // Send the data to the backend via the addColorDetail API call from ColordetailsApi.js\r\n      const response = await Promise.all(\r\n        colorData.map((data) => addColorDetail(data))\r\n      );\r\n      console.log(response); // Log the successful response\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <table border=\"1\" style={{ width: \"100%\", tableLayout: \"auto\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th rowSpan=\"2\" style={{ width: \"4%\" }}>\r\n              ColorId\r\n            </th>\r\n            <th rowSpan=\"2\" style={{ width: \"4%\" }}>\r\n              Base Color\r\n            </th>\r\n            {/* Color 1 to Color 14 with sub-columns for Name and Weight */}\r\n            {[...Array(14)].map((_, index) => (\r\n              <th colSpan=\"2\" key={index} style={{ width: \"6%\" }}>\r\n                Color {index + 1}\r\n              </th>\r\n            ))}\r\n            <th rowSpan=\"2\" style={{ width: \"4%\" }}>\r\n              Total Weight\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {formData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"ColorId\"\r\n                  value={row.ColorId}\r\n                  onChange={(e) => handleInputChange(e, rowIndex, \"ColorId\")}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={row.BaseColor.name || \"\"}\r\n                  placeholder=\"Base Color Name\"\r\n                  onChange={(e) => handleInputChange(e, rowIndex, \"BaseColor\")}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"weight\"\r\n                  value={row.BaseColor.weight || 0}\r\n                  placeholder=\"Base Color Weight\"\r\n                  onChange={(e) => handleInputChange(e, rowIndex, \"BaseColor\")}\r\n                />\r\n              </td>\r\n\r\n              {/* Loop through Color1 to Color14 */}\r\n              {row.colors.map((color, colorIndex) => (\r\n                <React.Fragment key={colorIndex}>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      name={colorIndex}\r\n                      value={color.name || \"\"}\r\n                      placeholder={`Color ${colorIndex + 1} Name`}\r\n                      onChange={(e) => handleInputChange(e, rowIndex, \"colors\")}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      name={colorIndex}\r\n                      value={color.weight || 0}\r\n                      placeholder={`Color ${colorIndex + 1} Weight`}\r\n                      onChange={(e) => handleInputChange(e, rowIndex, \"colors\")}\r\n                    />\r\n                  </td>\r\n                </React.Fragment>\r\n              ))}\r\n\r\n              {/* Total Weight */}\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"totalWeight\"\r\n                  value={row.totalWeight}\r\n                  readOnly\r\n                  style={{ backgroundColor: \"#f0f0f0\" }} // Make it read-only\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddColorDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}