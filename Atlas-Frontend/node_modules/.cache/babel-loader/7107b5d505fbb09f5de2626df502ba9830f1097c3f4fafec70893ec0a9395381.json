{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddSampleDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addSampleDetails } from \"../API/SampleApi\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSampleDetails = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    articleName: \"\",\n    designFileNo: \"\",\n    seriesArticleFileNo: \"\",\n    articleType: \"\",\n    gender: \"\",\n    machineSpeed: \"\",\n    designer: \"\",\n    grapher: \"\",\n    master: \"\",\n    sampleStatus: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [id]: value\n    }));\n  };\n  const handleMachineSpeedChange = e => {\n    const value = e.target.value;\n    if (!isNaN(value)) {\n      setFormData(prevData => ({\n        ...prevData,\n        machineSpeed: value\n      }));\n    }\n  };\n  const validateForm = () => {\n    const {\n      articleName,\n      designFileNo,\n      seriesArticleFileNo,\n      articleType,\n      gender,\n      machineSpeed,\n      designer,\n      grapher,\n      master,\n      sampleStatus\n    } = formData;\n    return articleName && designFileNo && seriesArticleFileNo && articleType && gender && machineSpeed && designer && grapher && master && sampleStatus;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      setMessage(\"All fields are required.\");\n      return;\n    }\n    const {\n      articleName,\n      designFileNo,\n      seriesArticleFileNo,\n      articleType,\n      gender,\n      machineSpeed,\n      designer,\n      grapher,\n      master,\n      sampleStatus\n    } = formData;\n    const data = {\n      articleName,\n      designFileNo,\n      seriesArticleFileNo,\n      articleType,\n      gender,\n      machineSpeed,\n      designer,\n      grapher,\n      master,\n      sampleStatus\n    };\n    try {\n      setLoading(true);\n      const result = await addSampleDetails(data);\n      setMessage(result.message || \"Sample details added successfully.\");\n\n      // Redirect to another page on success (for example, the sample details page)\n      navigate(\"/sample-details\"); // Use navigate instead of history.push\n    } catch (error) {\n      setMessage(error.message || \"An error occurred while adding the sample details.\");\n    } finally {\n      setLoading(false);\n    }\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Sample Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: [key.replace(/([A-Z])/g, \" $1\").toUpperCase(), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            type: key === \"machineSpeed\" ? \"number\" : \"text\",\n            value: formData[key],\n            onChange: key === \"machineSpeed\" ? handleMachineSpeedChange : handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSampleDetails, \"qUEsaMQsuGFCHUWZjbvjZELV3dE=\", false, function () {\n  return [useNavigate];\n});\n_c = AddSampleDetails;\nexport default AddSampleDetails;\nvar _c;\n$RefreshReg$(_c, \"AddSampleDetails\");","map":{"version":3,"names":["React","useState","addSampleDetails","useNavigate","jsxDEV","_jsxDEV","AddSampleDetails","_s","formData","setFormData","articleName","designFileNo","seriesArticleFileNo","articleType","gender","machineSpeed","designer","grapher","master","sampleStatus","message","setMessage","loading","setLoading","navigate","handleChange","e","id","value","target","prevData","handleMachineSpeedChange","isNaN","validateForm","handleSubmit","preventDefault","data","result","error","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","replace","toUpperCase","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddSampleDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addSampleDetails } from \"../API/SampleApi\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\r\n\r\nconst AddSampleDetails = () => {\r\n  const [formData, setFormData] = useState({\r\n    articleName: \"\",\r\n    designFileNo: \"\",\r\n    seriesArticleFileNo: \"\",\r\n    articleType: \"\",\r\n    gender: \"\",\r\n    machineSpeed: \"\",\r\n    designer: \"\",\r\n    grapher: \"\",\r\n    master: \"\",\r\n    sampleStatus: \"\",\r\n  });\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();  // Initialize the navigate function\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [id]: value,\r\n    }));\r\n  };\r\n\r\n  const handleMachineSpeedChange = (e) => {\r\n    const value = e.target.value;\r\n    if (!isNaN(value)) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        machineSpeed: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const {\r\n      articleName,\r\n      designFileNo,\r\n      seriesArticleFileNo,\r\n      articleType,\r\n      gender,\r\n      machineSpeed,\r\n      designer,\r\n      grapher,\r\n      master,\r\n      sampleStatus,\r\n    } = formData;\r\n\r\n    return (\r\n      articleName &&\r\n      designFileNo &&\r\n      seriesArticleFileNo &&\r\n      articleType &&\r\n      gender &&\r\n      machineSpeed &&\r\n      designer &&\r\n      grapher &&\r\n      master &&\r\n      sampleStatus\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    const { articleName, designFileNo, seriesArticleFileNo, articleType, gender, machineSpeed, designer, grapher, master, sampleStatus } = formData;\r\n\r\n    const data = {\r\n      articleName,\r\n      designFileNo,\r\n      seriesArticleFileNo,\r\n      articleType,\r\n      gender,\r\n      machineSpeed,\r\n      designer,\r\n      grapher,\r\n      master,\r\n      sampleStatus,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await addSampleDetails(data);\r\n      setMessage(result.message || \"Sample details added successfully.\");\r\n\r\n      // Redirect to another page on success (for example, the sample details page)\r\n      navigate(\"/sample-details\");  // Use navigate instead of history.push\r\n    } catch (error) {\r\n      setMessage(error.message || \"An error occurred while adding the sample details.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Add Sample Details</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {Object.keys(formData).map((key) => (\r\n            <div key={key}>\r\n              <label htmlFor={key}>{key.replace(/([A-Z])/g, \" $1\").toUpperCase()}:</label>\r\n              <input\r\n                id={key}\r\n                type={key === \"machineSpeed\" ? \"number\" : \"text\"}\r\n                value={formData[key]}\r\n                onChange={key === \"machineSpeed\" ? handleMachineSpeedChange : handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          ))}\r\n          <button type=\"submit\" disabled={loading}>\r\n            Add New\r\n          </button>\r\n        </form>\r\n        {loading && <p>Loading...</p>}\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSampleDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}