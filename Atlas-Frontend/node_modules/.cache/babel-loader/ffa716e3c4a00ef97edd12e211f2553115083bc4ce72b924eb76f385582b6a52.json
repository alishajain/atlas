{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddCutting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addCuttingData } from '../API/CuttingApi';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCutting = ({\n  RSN\n}) => {\n  _s();\n  const userId = useSelector(state => state.user.userId);\n  const [newCuttingData, setNewCuttingData] = useState({\n    RSN: RSN,\n    EmpID: '',\n    Cost: '',\n    UserId: userId\n  });\n  const handleAddCutting = async () => {\n    try {\n      const response = await addCuttingData(newCuttingData);\n      console.log(response); // Check response here\n\n      // Check if the response contains a message\n      if (response && response.message) {\n        alert(`Success: ${response.message}`);\n      } else {\n        alert('Success: Cutting data added successfully!');\n      }\n    } catch (error) {\n      // Log the error to the console to better diagnose issues\n      console.error('Error adding cutting data:', error);\n\n      // Check if the error has a response with a message\n      const errorMessage = error.response && error.response.data ? error.response.data.message : 'Failed to add cutting data.';\n      alert(`Error: ${errorMessage}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCuttingData.RSN,\n      onChange: e => setNewCuttingData({\n        ...newCuttingData,\n        RSN: e.target.value\n      }),\n      placeholder: \"RSN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCuttingData.EmpID,\n      onChange: e => setNewCuttingData({\n        ...newCuttingData,\n        EmpID: e.target.value\n      }),\n      placeholder: \"EmpID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: newCuttingData.Cost,\n      onChange: e => setNewCuttingData({\n        ...newCuttingData,\n        Cost: e.target.value\n      }),\n      placeholder: \"Cost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCutting,\n      children: \"Add Cutting Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCutting, \"OUKbaQwtWbCaZf7imL4jq5Vx8LI=\", false, function () {\n  return [useSelector];\n});\n_c = AddCutting;\nexport default AddCutting;\nvar _c;\n$RefreshReg$(_c, \"AddCutting\");","map":{"version":3,"names":["React","useState","addCuttingData","useSelector","jsxDEV","_jsxDEV","AddCutting","RSN","_s","userId","state","user","newCuttingData","setNewCuttingData","EmpID","Cost","UserId","handleAddCutting","response","console","log","message","alert","error","errorMessage","data","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddCutting.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { addCuttingData } from '../API/CuttingApi';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddCutting = ({RSN}) => {\r\n  \r\n    const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [newCuttingData, setNewCuttingData] = useState({\r\n    RSN: RSN,\r\n    EmpID: '',\r\n    Cost: '',\r\n    UserId: userId,\r\n  });\r\n\r\n  const handleAddCutting = async () => {\r\n    try {\r\n      const response = await addCuttingData(newCuttingData);\r\n      console.log(response); // Check response here\r\n\r\n      // Check if the response contains a message\r\n      if (response && response.message) {\r\n        alert(`Success: ${response.message}`);\r\n      } else {\r\n        alert('Success: Cutting data added successfully!');\r\n      }\r\n    } catch (error) {\r\n      // Log the error to the console to better diagnose issues\r\n      console.error('Error adding cutting data:', error);\r\n\r\n      // Check if the error has a response with a message\r\n      const errorMessage = error.response && error.response.data ? error.response.data.message : 'Failed to add cutting data.';\r\n      alert(`Error: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={newCuttingData.RSN}\r\n        onChange={(e) => setNewCuttingData({ ...newCuttingData, RSN: e.target.value })}\r\n        placeholder=\"RSN\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={newCuttingData.EmpID}\r\n        onChange={(e) => setNewCuttingData({ ...newCuttingData, EmpID: e.target.value })}\r\n        placeholder=\"EmpID\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={newCuttingData.Cost}\r\n        onChange={(e) => setNewCuttingData({ ...newCuttingData, Cost: e.target.value })}\r\n        placeholder=\"Cost\"\r\n      />\r\n      <button onClick={handleAddCutting}>Add Cutting Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCutting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}