{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Pages\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { registerUser } from './api'; // Import the registerUser function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [userID, setUserID] = useState('');\n  const [empID, setEmpID] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Function to check if EmpID already exists\n  const checkIfEmpIDExists = async empID => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/users`);\n      const users = await response.json();\n\n      // Check if any user has the same EmpID\n      const userExists = users.some(user => user.EmpID === empID);\n      return userExists;\n    } catch (error) {\n      console.error(\"Error checking EmpID:\", error);\n      setMessage(\"Error checking EmpID availability.\");\n      return false; // Assuming no user exists if error occurs\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation\n    if (!userID || !empID || !password) {\n      setMessage('All fields are required!');\n      return;\n    }\n\n    // Check if the EmpID already exists\n    const empIDExists = await checkIfEmpIDExists(empID);\n    if (empIDExists) {\n      setMessage('An account with this EmpID already exists.');\n      return;\n    }\n    try {\n      setLoading(true); // Set loading state to true while submitting the form\n\n      // Register the user if EmpID is unique\n      const userData = {\n        UserID: userID,\n        EmpID: empID,\n        Password: password\n      };\n      const data = await registerUser(userData);\n      if (data.success) {\n        setMessage('Signup successful!'); // Show success message\n      } else {\n        setMessage(data.message || 'Signup failed!');\n      }\n    } catch (error) {\n      setMessage('An error occurred during signup!');\n      console.error('Error during signup:', error);\n    } finally {\n      setLoading(false); // Reset loading state after request is completed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"UserID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userID,\n          onChange: e => setUserID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Employee ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: empID,\n          onChange: e => setEmpID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Signing up...' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"Pf4dlywLYyrjbHWay4YD8aiH/4g=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","Signup","_s","userID","setUserID","empID","setEmpID","password","setPassword","message","setMessage","loading","setLoading","checkIfEmpIDExists","response","fetch","users","json","userExists","some","user","EmpID","error","console","handleSubmit","e","preventDefault","empIDExists","userData","UserID","Password","data","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { registerUser } from './api'; // Import the registerUser function\r\n\r\nconst Signup = () => {\r\n  const [userID, setUserID] = useState('');\r\n  const [empID, setEmpID] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Function to check if EmpID already exists\r\n  const checkIfEmpIDExists = async (empID) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users`);\r\n      const users = await response.json();\r\n\r\n      // Check if any user has the same EmpID\r\n      const userExists = users.some(user => user.EmpID === empID);\r\n      return userExists;\r\n    } catch (error) {\r\n      console.error(\"Error checking EmpID:\", error);\r\n      setMessage(\"Error checking EmpID availability.\");\r\n      return false; // Assuming no user exists if error occurs\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation\r\n    if (!userID || !empID || !password) {\r\n      setMessage('All fields are required!');\r\n      return;\r\n    }\r\n\r\n    // Check if the EmpID already exists\r\n    const empIDExists = await checkIfEmpIDExists(empID);\r\n    if (empIDExists) {\r\n      setMessage('An account with this EmpID already exists.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true); // Set loading state to true while submitting the form\r\n\r\n      // Register the user if EmpID is unique\r\n      const userData = { UserID: userID, EmpID: empID, Password: password };\r\n      const data = await registerUser(userData);\r\n\r\n      if (data.success) {\r\n        setMessage('Signup successful!');  // Show success message\r\n      } else {\r\n        setMessage(data.message || 'Signup failed!');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred during signup!');\r\n      console.error('Error during signup:', error);\r\n    } finally {\r\n      setLoading(false);  // Reset loading state after request is completed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label>UserID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userID}\r\n            onChange={(e) => setUserID(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Employee ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={empID}\r\n            onChange={(e) => setEmpID(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Signing up...' : 'Sign Up'}\r\n        </button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMgB,kBAAkB,GAAG,MAAOR,KAAK,IAAK;IAC1C,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAEnC;MACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKhB,KAAK,CAAC;MAC3D,OAAOa,UAAU;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CZ,UAAU,CAAC,oCAAoC,CAAC;MAChD,OAAO,KAAK,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACvB,MAAM,IAAI,CAACE,KAAK,IAAI,CAACE,QAAQ,EAAE;MAClCG,UAAU,CAAC,0BAA0B,CAAC;MACtC;IACF;;IAEA;IACA,MAAMiB,WAAW,GAAG,MAAMd,kBAAkB,CAACR,KAAK,CAAC;IACnD,IAAIsB,WAAW,EAAE;MACfjB,UAAU,CAAC,4CAA4C,CAAC;MACxD;IACF;IAEA,IAAI;MACFE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;MAElB;MACA,MAAMgB,QAAQ,GAAG;QAAEC,MAAM,EAAE1B,MAAM;QAAEkB,KAAK,EAAEhB,KAAK;QAAEyB,QAAQ,EAAEvB;MAAS,CAAC;MACrE,MAAMwB,IAAI,GAAG,MAAMjC,YAAY,CAAC8B,QAAQ,CAAC;MAEzC,IAAIG,IAAI,CAACC,OAAO,EAAE;QAChBtB,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAE;MACrC,CAAC,MAAM;QACLA,UAAU,CAACqB,IAAI,CAACtB,OAAO,IAAI,gBAAgB,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdZ,UAAU,CAAC,kCAAkC,CAAC;MAC9Ca,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKiC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BlC,OAAA;MAAAkC,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACftC,OAAA;MAAMuC,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BlC,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlC,OAAA;UAAAkC,QAAA,EAAO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBtC,OAAA;UACEwC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtC,MAAO;UACduC,QAAQ,EAAGjB,CAAC,IAAKrB,SAAS,CAACqB,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC3CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlC,OAAA;UAAAkC,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BtC,OAAA;UACEwC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEpC,KAAM;UACbqC,QAAQ,EAAGjB,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlC,OAAA;UAAAkC,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBtC,OAAA;UACEwC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAElC,QAAS;UAChBmC,QAAQ,EAAGjB,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAACK,QAAQ,EAAElC,OAAQ;QAAAuB,QAAA,EACrCvB,OAAO,GAAG,eAAe,GAAG;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACN7B,OAAO,iBAAIT,OAAA;MAAAkC,QAAA,EAAIzB;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACpC,EAAA,CAjGID,MAAM;AAAA6C,EAAA,GAAN7C,MAAM;AAmGZ,eAAeA,MAAM;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}