{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowColor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getColorMatchingByRSN, getPanel } from \"../API/ColorApi\";\nimport { getColorDetailByColorId } from \"../API/ColorDetailApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidValue = value => {\n  return value !== null && value !== \"\" && value !== 0;\n};\nconst ShowColor = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const RSN = location.state ? location.state.RSN : null;\n  const [colorMatchingData, setColorMatchingData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [colorDetails, setColorDetails] = useState({});\n  const [selectedPanels, setSelectedPanels] = useState(null);\n  const [selectedStates, setSelectedStates] = useState({}); // State to store selectedStates\n\n  // First useEffect for fetching color matching data\n  useEffect(() => {\n    const fetchColorMatchingData = async () => {\n      setLoading(true);\n      try {\n        const response = await getColorMatchingByRSN(RSN);\n        setColorMatchingData(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch color matching details.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (RSN) {\n      fetchColorMatchingData();\n    }\n  }, [RSN]);\n  console.log(colorMatchingData);\n\n  // Fetch color detail by ColorId\n  const fetchColorDetail = async ColorId => {\n    if (!colorDetails[ColorId]) {\n      try {\n        const response = await getColorDetailByColorId(ColorId);\n        setColorDetails(prevDetails => ({\n          ...prevDetails,\n          [ColorId]: response\n        }));\n      } catch (err) {\n        console.error(\"Failed to fetch color detail for\", ColorId);\n      }\n    }\n  };\n\n  // Fetch selected panels and update selectedStates when panels are fetched\n  useEffect(() => {\n    const fetchPanelData = async () => {\n      try {\n        const response = await getPanel(RSN);\n        setSelectedPanels(response.data);\n\n        // Format selectedPanels as selectedStates (object with values as keys and true as values)\n        const states = response.data.reduce((acc, panel) => {\n          const panelKey = panel.Panel;\n          if (panelKey) {\n            acc[panelKey] = true;\n          }\n          return acc;\n        }, {});\n        setSelectedStates(states);\n      } catch (err) {\n        console.error(\"Failed to fetch panel data:\", err);\n      }\n    };\n    if (RSN && !selectedPanels) {\n      fetchPanelData();\n    }\n  }, [RSN, selectedPanels]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading color matching data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 21\n  }, this);\n\n  // Group color matching data by MatchingName\n  const groupedData = colorMatchingData === null || colorMatchingData === void 0 ? void 0 : colorMatchingData.reduce((acc, item) => {\n    const {\n      MatchingName\n    } = item;\n    if (!acc[MatchingName]) {\n      acc[MatchingName] = [];\n    }\n    acc[MatchingName].push(item);\n    return acc;\n  }, {});\n\n  // Function to calculate and log the total yarn used grouped by yarnId for each MatchingName\n  const logTotalYarnUsage = () => {\n    if (!groupedData) return;\n    Object.keys(groupedData).forEach(matchingName => {\n      const yarnUsageByYarnId = {};\n      groupedData[matchingName].forEach(item => {\n        var _colorDetails$ColorId;\n        const ColorId = item.ColorId;\n        const details = (_colorDetails$ColorId = colorDetails[ColorId]) === null || _colorDetails$ColorId === void 0 ? void 0 : _colorDetails$ColorId[0];\n\n        // Check if color details are valid\n        if (details) {\n          const yarnKeys = [\"BaseColor\", \"Color1\", \"Color2\", \"Color3\", \"Color4\", \"Color5\", \"Color6\", \"Color7\", \"Color8\", \"Color9\", \"Color10\", \"Color11\", \"Color12\", \"Color13\", \"Color14\"];\n          yarnKeys.forEach(colorKey => {\n            const colorData = details[colorKey];\n            if (colorData && isValidValue(colorData.Weight) && isValidValue(colorData.YarnId)) {\n              const yarnId = colorData.YarnId;\n              const weight = colorData.Weight;\n\n              // Sum up the weight for the yarnId\n              if (!yarnUsageByYarnId[yarnId]) {\n                yarnUsageByYarnId[yarnId] = 0;\n              }\n              yarnUsageByYarnId[yarnId] += weight;\n            }\n          });\n        }\n      });\n\n      // Log the total yarn usage for the current MatchingName\n      console.log(`Total Yarn Usage for Matching Name: ${matchingName}`);\n      Object.keys(yarnUsageByYarnId).forEach(yarnId => {\n        console.log(`Yarn ID: ${yarnId}, Total Weight: ${yarnUsageByYarnId[yarnId]} grams`);\n      });\n    });\n  };\n\n  // Call logTotalYarnUsage function to log the yarn usage\n  useEffect(() => {\n    logTotalYarnUsage();\n  }, [colorDetails, groupedData]);\n\n  // Function to render color details for each ColorId\n  const renderColorDetail = ColorId => {\n    var _colorDetails$ColorId2;\n    const details = (_colorDetails$ColorId2 = colorDetails[ColorId]) === null || _colorDetails$ColorId2 === void 0 ? void 0 : _colorDetails$ColorId2[0];\n    if (details) {\n      const colorKeys = [\"BaseColor\", \"Color1\", \"Color2\", \"Color3\", \"Color4\", \"Color5\", \"Color6\", \"Color7\", \"Color8\", \"Color9\", \"Color10\", \"Color11\", \"Color12\", \"Color13\", \"Color14\"];\n\n      // Filter out invalid values\n      const validColorKeys = colorKeys.filter(colorKey => {\n        const colorData = details[colorKey];\n        return colorData && isValidValue(colorData.Name) && isValidValue(colorData.Weight);\n      });\n      const names = validColorKeys.map(colorKey => details[colorKey].Name);\n      const weights = validColorKeys.map(colorKey => details[colorKey].Weight);\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: validColorKeys.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), validColorKeys.map((colorKey, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: colorKey\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), names.map((name, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), weights.map((weight, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: weight\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No color details available for this ColorId.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Function to handle navigation back\n  const handleBack = () => {\n    navigate(`/show-sample/${RSN}`, {\n      state: {\n        RSN\n      }\n    });\n  };\n\n  // Function to handle navigation next\n  const handleNext = () => {\n    navigate(`/sample-actions/${RSN}`, {\n      state: {\n        RSN\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Color Matching Details for RSN: \", RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), groupedData ? Object.keys(groupedData).map((matchingName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Matching name: \", matchingName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ColorId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Color Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: groupedData[matchingName].map((item, itemIndex) => {\n            fetchColorDetail(item.ColorId);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.ColorId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.Panel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), renderColorDetail(item.ColorId), \" \"]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No color matching details available for this RSN.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowColor, \"8xlEfU10sm7qB4Pcueq6xyJ3dxk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ShowColor;\nexport default ShowColor;\nvar _c;\n$RefreshReg$(_c, \"ShowColor\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","getColorMatchingByRSN","getPanel","getColorDetailByColorId","jsxDEV","_jsxDEV","isValidValue","value","ShowColor","_s","location","navigate","RSN","state","colorMatchingData","setColorMatchingData","loading","setLoading","error","setError","colorDetails","setColorDetails","selectedPanels","setSelectedPanels","selectedStates","setSelectedStates","fetchColorMatchingData","response","data","err","console","log","fetchColorDetail","ColorId","prevDetails","fetchPanelData","states","reduce","acc","panel","panelKey","Panel","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","groupedData","item","MatchingName","push","logTotalYarnUsage","Object","keys","forEach","matchingName","yarnUsageByYarnId","_colorDetails$ColorId","details","yarnKeys","colorKey","colorData","Weight","YarnId","yarnId","weight","renderColorDetail","_colorDetails$ColorId2","colorKeys","validColorKeys","filter","Name","names","map","weights","length","border","width","index","name","handleBack","handleNext","marginTop","itemIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowColor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { getColorMatchingByRSN, getPanel } from \"../API/ColorApi\";\r\nimport { getColorDetailByColorId } from \"../API/ColorDetailApi\";\r\n\r\nconst isValidValue = (value) => {\r\n  return value !== null && value !== \"\" && value !== 0;\r\n};\r\n\r\nconst ShowColor = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const RSN = location.state ? location.state.RSN : null;\r\n\r\n  const [colorMatchingData, setColorMatchingData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [colorDetails, setColorDetails] = useState({});\r\n  const [selectedPanels, setSelectedPanels] = useState(null);\r\n  const [selectedStates, setSelectedStates] = useState({}); // State to store selectedStates\r\n\r\n  // First useEffect for fetching color matching data\r\n  useEffect(() => {\r\n    const fetchColorMatchingData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getColorMatchingByRSN(RSN);\r\n        setColorMatchingData(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch color matching details.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (RSN) {\r\n      fetchColorMatchingData();\r\n    }\r\n  }, [RSN]);\r\n\r\n  console.log(colorMatchingData);\r\n\r\n  // Fetch color detail by ColorId\r\n  const fetchColorDetail = async (ColorId) => {\r\n    if (!colorDetails[ColorId]) {\r\n      try {\r\n        const response = await getColorDetailByColorId(ColorId);\r\n        setColorDetails((prevDetails) => ({\r\n          ...prevDetails,\r\n          [ColorId]: response,\r\n        }));\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch color detail for\", ColorId);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fetch selected panels and update selectedStates when panels are fetched\r\n  useEffect(() => {\r\n    const fetchPanelData = async () => {\r\n      try {\r\n        const response = await getPanel(RSN);\r\n        setSelectedPanels(response.data);\r\n\r\n        // Format selectedPanels as selectedStates (object with values as keys and true as values)\r\n        const states = response.data.reduce((acc, panel) => {\r\n          const panelKey = panel.Panel;\r\n          if (panelKey) {\r\n            acc[panelKey] = true;\r\n          }\r\n          return acc;\r\n        }, {});\r\n        \r\n        setSelectedStates(states);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch panel data:\", err);\r\n      }\r\n    };\r\n\r\n    if (RSN && !selectedPanels) {\r\n      fetchPanelData();\r\n    }\r\n  }, [RSN, selectedPanels]);\r\n\r\n  if (loading) return <p>Loading color matching data...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n\r\n  // Group color matching data by MatchingName\r\n  const groupedData = colorMatchingData?.reduce((acc, item) => {\r\n    const { MatchingName } = item;\r\n    if (!acc[MatchingName]) {\r\n      acc[MatchingName] = [];\r\n    }\r\n    acc[MatchingName].push(item);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Function to calculate and log the total yarn used grouped by yarnId for each MatchingName\r\n  const logTotalYarnUsage = () => {\r\n    if (!groupedData) return;\r\n\r\n    Object.keys(groupedData).forEach((matchingName) => {\r\n      const yarnUsageByYarnId = {};\r\n\r\n      groupedData[matchingName].forEach((item) => {\r\n        const ColorId = item.ColorId;\r\n        const details = colorDetails[ColorId]?.[0];\r\n\r\n        // Check if color details are valid\r\n        if (details) {\r\n          const yarnKeys = [\r\n            \"BaseColor\",\r\n            \"Color1\",\r\n            \"Color2\",\r\n            \"Color3\",\r\n            \"Color4\",\r\n            \"Color5\",\r\n            \"Color6\",\r\n            \"Color7\",\r\n            \"Color8\",\r\n            \"Color9\",\r\n            \"Color10\",\r\n            \"Color11\",\r\n            \"Color12\",\r\n            \"Color13\",\r\n            \"Color14\",\r\n          ];\r\n\r\n          yarnKeys.forEach((colorKey) => {\r\n            const colorData = details[colorKey];\r\n            if (colorData && isValidValue(colorData.Weight) && isValidValue(colorData.YarnId)) {\r\n              const yarnId = colorData.YarnId;\r\n              const weight = colorData.Weight;\r\n\r\n              // Sum up the weight for the yarnId\r\n              if (!yarnUsageByYarnId[yarnId]) {\r\n                yarnUsageByYarnId[yarnId] = 0;\r\n              }\r\n              yarnUsageByYarnId[yarnId] += weight;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      // Log the total yarn usage for the current MatchingName\r\n      console.log(`Total Yarn Usage for Matching Name: ${matchingName}`);\r\n      Object.keys(yarnUsageByYarnId).forEach((yarnId) => {\r\n        console.log(`Yarn ID: ${yarnId}, Total Weight: ${yarnUsageByYarnId[yarnId]} grams`);\r\n      });\r\n    });\r\n  };\r\n\r\n  // Call logTotalYarnUsage function to log the yarn usage\r\n  useEffect(() => {\r\n    logTotalYarnUsage();\r\n  }, [colorDetails, groupedData]);\r\n\r\n  // Function to render color details for each ColorId\r\n  const renderColorDetail = (ColorId) => {\r\n    const details = colorDetails[ColorId]?.[0];\r\n    if (details) {\r\n      const colorKeys = [\r\n        \"BaseColor\",\r\n        \"Color1\",\r\n        \"Color2\",\r\n        \"Color3\",\r\n        \"Color4\",\r\n        \"Color5\",\r\n        \"Color6\",\r\n        \"Color7\",\r\n        \"Color8\",\r\n        \"Color9\",\r\n        \"Color10\",\r\n        \"Color11\",\r\n        \"Color12\",\r\n        \"Color13\",\r\n        \"Color14\",\r\n      ];\r\n\r\n      // Filter out invalid values\r\n      const validColorKeys = colorKeys.filter((colorKey) => {\r\n        const colorData = details[colorKey];\r\n        return (\r\n          colorData &&\r\n          isValidValue(colorData.Name) &&\r\n          isValidValue(colorData.Weight)\r\n        );\r\n      });\r\n\r\n      const names = validColorKeys.map((colorKey) => details[colorKey].Name);\r\n      const weights = validColorKeys.map(\r\n        (colorKey) => details[colorKey].Weight\r\n      );\r\n\r\n      return (\r\n        <td>\r\n          {validColorKeys.length > 0 ? (\r\n            <table border=\"1\" style={{ width: \"100%\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Property</th>\r\n                  {validColorKeys.map((colorKey, index) => (\r\n                    <th key={index}>{colorKey}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Name</td>\r\n                  {names.map((name, index) => (\r\n                    <td key={index}>{name}</td>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td>Weight</td>\r\n                  {weights.map((weight, index) => (\r\n                    <td key={index}>{weight}</td>\r\n                  ))}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No color details available for this ColorId.</p>\r\n          )}\r\n        </td>\r\n      );\r\n    }\r\n    return <td>Loading...</td>;\r\n  };\r\n\r\n  // Function to handle navigation back\r\n  const handleBack = () => {\r\n    navigate(`/show-sample/${RSN}`, { state: { RSN } });\r\n  };\r\n\r\n  // Function to handle navigation next\r\n  const handleNext = () => {\r\n    navigate(`/sample-actions/${RSN}`, { state: { RSN } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Color Matching Details for RSN: {RSN}</h1>\r\n      {groupedData ? (\r\n        Object.keys(groupedData).map((matchingName, index) => (\r\n          <div key={index}>\r\n            <h2>Matching name: {matchingName}</h2>\r\n            <table border=\"1\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>ColorId</th>\r\n                  <th>Panel</th>\r\n                  <th>Color Details</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupedData[matchingName].map((item, itemIndex) => {\r\n                  fetchColorDetail(item.ColorId);\r\n                  return (\r\n                    <tr key={itemIndex}>\r\n                      <td>{item.ColorId}</td>\r\n                      <td>{item.Panel}</td>\r\n                      {renderColorDetail(item.ColorId)}{\" \"}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No color matching details available for this RSN.</p>\r\n      )}\r\n      <div>\r\n        <button onClick={handleBack}>Back</button>\r\n        <button onClick={handleNext}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowColor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,qBAAqB,EAAEC,QAAQ,QAAQ,iBAAiB;AACjE,SAASC,uBAAuB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,OAAOA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,CAAC;AACtD,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,GAAG,GAAGF,QAAQ,CAACG,KAAK,GAAGH,QAAQ,CAACG,KAAK,CAACD,GAAG,GAAG,IAAI;EAEtD,MAAM,CAACE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,MAAM4B,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzCT,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAM1B,qBAAqB,CAACW,GAAG,CAAC;QACjDG,oBAAoB,CAACY,QAAQ,CAACC,IAAI,CAAC;MACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZV,QAAQ,CAAC,yCAAyC,CAAC;MACrD,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIL,GAAG,EAAE;MACPc,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACd,GAAG,CAAC,CAAC;EAETkB,OAAO,CAACC,GAAG,CAACjB,iBAAiB,CAAC;;EAE9B;EACA,MAAMkB,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C,IAAI,CAACb,YAAY,CAACa,OAAO,CAAC,EAAE;MAC1B,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMxB,uBAAuB,CAAC8B,OAAO,CAAC;QACvDZ,eAAe,CAAEa,WAAW,KAAM;UAChC,GAAGA,WAAW;UACd,CAACD,OAAO,GAAGN;QACb,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACZ,KAAK,CAAC,kCAAkC,EAAEe,OAAO,CAAC;MAC5D;IACF;EACF,CAAC;;EAED;EACAnC,SAAS,CAAC,MAAM;IACd,MAAMqC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMzB,QAAQ,CAACU,GAAG,CAAC;QACpCW,iBAAiB,CAACI,QAAQ,CAACC,IAAI,CAAC;;QAEhC;QACA,MAAMQ,MAAM,GAAGT,QAAQ,CAACC,IAAI,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;UAClD,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK;UAC5B,IAAID,QAAQ,EAAE;YACZF,GAAG,CAACE,QAAQ,CAAC,GAAG,IAAI;UACtB;UACA,OAAOF,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAENb,iBAAiB,CAACW,MAAM,CAAC;MAC3B,CAAC,CAAC,OAAOP,GAAG,EAAE;QACZC,OAAO,CAACZ,KAAK,CAAC,6BAA6B,EAAEW,GAAG,CAAC;MACnD;IACF,CAAC;IAED,IAAIjB,GAAG,IAAI,CAACU,cAAc,EAAE;MAC1Ba,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACvB,GAAG,EAAEU,cAAc,CAAC,CAAC;EAEzB,IAAIN,OAAO,EAAE,oBAAOX,OAAA;IAAAqC,QAAA,EAAG;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACzD,IAAI5B,KAAK,EAAE,oBAAOb,OAAA;IAAG0C,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,EAAExB;EAAK;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAEzD;EACA,MAAMG,WAAW,GAAGnC,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEuB,MAAM,CAAC,CAACC,GAAG,EAAEY,IAAI,KAAK;IAC3D,MAAM;MAAEC;IAAa,CAAC,GAAGD,IAAI;IAC7B,IAAI,CAACZ,GAAG,CAACa,YAAY,CAAC,EAAE;MACtBb,GAAG,CAACa,YAAY,CAAC,GAAG,EAAE;IACxB;IACAb,GAAG,CAACa,YAAY,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;IAC5B,OAAOZ,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACJ,WAAW,EAAE;IAElBK,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAACO,OAAO,CAAEC,YAAY,IAAK;MACjD,MAAMC,iBAAiB,GAAG,CAAC,CAAC;MAE5BT,WAAW,CAACQ,YAAY,CAAC,CAACD,OAAO,CAAEN,IAAI,IAAK;QAAA,IAAAS,qBAAA;QAC1C,MAAM1B,OAAO,GAAGiB,IAAI,CAACjB,OAAO;QAC5B,MAAM2B,OAAO,IAAAD,qBAAA,GAAGvC,YAAY,CAACa,OAAO,CAAC,cAAA0B,qBAAA,uBAArBA,qBAAA,CAAwB,CAAC,CAAC;;QAE1C;QACA,IAAIC,OAAO,EAAE;UACX,MAAMC,QAAQ,GAAG,CACf,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;UAEDA,QAAQ,CAACL,OAAO,CAAEM,QAAQ,IAAK;YAC7B,MAAMC,SAAS,GAAGH,OAAO,CAACE,QAAQ,CAAC;YACnC,IAAIC,SAAS,IAAIzD,YAAY,CAACyD,SAAS,CAACC,MAAM,CAAC,IAAI1D,YAAY,CAACyD,SAAS,CAACE,MAAM,CAAC,EAAE;cACjF,MAAMC,MAAM,GAAGH,SAAS,CAACE,MAAM;cAC/B,MAAME,MAAM,GAAGJ,SAAS,CAACC,MAAM;;cAE/B;cACA,IAAI,CAACN,iBAAiB,CAACQ,MAAM,CAAC,EAAE;gBAC9BR,iBAAiB,CAACQ,MAAM,CAAC,GAAG,CAAC;cAC/B;cACAR,iBAAiB,CAACQ,MAAM,CAAC,IAAIC,MAAM;YACrC;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;;MAEF;MACArC,OAAO,CAACC,GAAG,CAAC,uCAAuC0B,YAAY,EAAE,CAAC;MAClEH,MAAM,CAACC,IAAI,CAACG,iBAAiB,CAAC,CAACF,OAAO,CAAEU,MAAM,IAAK;QACjDpC,OAAO,CAACC,GAAG,CAAC,YAAYmC,MAAM,mBAAmBR,iBAAiB,CAACQ,MAAM,CAAC,QAAQ,CAAC;MACrF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACApE,SAAS,CAAC,MAAM;IACduD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACjC,YAAY,EAAE6B,WAAW,CAAC,CAAC;;EAE/B;EACA,MAAMmB,iBAAiB,GAAInC,OAAO,IAAK;IAAA,IAAAoC,sBAAA;IACrC,MAAMT,OAAO,IAAAS,sBAAA,GAAGjD,YAAY,CAACa,OAAO,CAAC,cAAAoC,sBAAA,uBAArBA,sBAAA,CAAwB,CAAC,CAAC;IAC1C,IAAIT,OAAO,EAAE;MACX,MAAMU,SAAS,GAAG,CAChB,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;;MAED;MACA,MAAMC,cAAc,GAAGD,SAAS,CAACE,MAAM,CAAEV,QAAQ,IAAK;QACpD,MAAMC,SAAS,GAAGH,OAAO,CAACE,QAAQ,CAAC;QACnC,OACEC,SAAS,IACTzD,YAAY,CAACyD,SAAS,CAACU,IAAI,CAAC,IAC5BnE,YAAY,CAACyD,SAAS,CAACC,MAAM,CAAC;MAElC,CAAC,CAAC;MAEF,MAAMU,KAAK,GAAGH,cAAc,CAACI,GAAG,CAAEb,QAAQ,IAAKF,OAAO,CAACE,QAAQ,CAAC,CAACW,IAAI,CAAC;MACtE,MAAMG,OAAO,GAAGL,cAAc,CAACI,GAAG,CAC/Bb,QAAQ,IAAKF,OAAO,CAACE,QAAQ,CAAC,CAACE,MAClC,CAAC;MAED,oBACE3D,OAAA;QAAAqC,QAAA,EACG6B,cAAc,CAACM,MAAM,GAAG,CAAC,gBACxBxE,OAAA;UAAOyE,MAAM,EAAC,GAAG;UAAC/B,KAAK,EAAE;YAAEgC,KAAK,EAAE;UAAO,CAAE;UAAArC,QAAA,gBACzCrC,OAAA;YAAAqC,QAAA,eACErC,OAAA;cAAAqC,QAAA,gBACErC,OAAA;gBAAAqC,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAChByB,cAAc,CAACI,GAAG,CAAC,CAACb,QAAQ,EAAEkB,KAAK,kBAClC3E,OAAA;gBAAAqC,QAAA,EAAiBoB;cAAQ,GAAhBkB,KAAK;gBAAArC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAC/B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRzC,OAAA;YAAAqC,QAAA,gBACErC,OAAA;cAAAqC,QAAA,gBACErC,OAAA;gBAAAqC,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACZ4B,KAAK,CAACC,GAAG,CAAC,CAACM,IAAI,EAAED,KAAK,kBACrB3E,OAAA;gBAAAqC,QAAA,EAAiBuC;cAAI,GAAZD,KAAK;gBAAArC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACLzC,OAAA;cAAAqC,QAAA,gBACErC,OAAA;gBAAAqC,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACd8B,OAAO,CAACD,GAAG,CAAC,CAACR,MAAM,EAAEa,KAAK,kBACzB3E,OAAA;gBAAAqC,QAAA,EAAiByB;cAAM,GAAda,KAAK;gBAAArC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAC7B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAERzC,OAAA;UAAAqC,QAAA,EAAG;QAA4C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACnD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAET;IACA,oBAAOzC,OAAA;MAAAqC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMoC,UAAU,GAAGA,CAAA,KAAM;IACvBvE,QAAQ,CAAC,gBAAgBC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAED;MAAI;IAAE,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMuE,UAAU,GAAGA,CAAA,KAAM;IACvBxE,QAAQ,CAAC,mBAAmBC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAED;MAAI;IAAE,CAAC,CAAC;EACxD,CAAC;EAED,oBACEP,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,GAAI,kCAAgC,EAAC9B,GAAG;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7CG,WAAW,GACVK,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAAC0B,GAAG,CAAC,CAAClB,YAAY,EAAEuB,KAAK,kBAC/C3E,OAAA;MAAAqC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,GAAI,iBAAe,EAACe,YAAY;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCzC,OAAA;QAAOyE,MAAM,EAAC,GAAG;QAAC/B,KAAK,EAAE;UAAEgC,KAAK,EAAE,MAAM;UAAEK,SAAS,EAAE;QAAO,CAAE;QAAA1C,QAAA,gBAC5DrC,OAAA;UAAAqC,QAAA,eACErC,OAAA;YAAAqC,QAAA,gBACErC,OAAA;cAAAqC,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBzC,OAAA;cAAAqC,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdzC,OAAA;cAAAqC,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRzC,OAAA;UAAAqC,QAAA,EACGO,WAAW,CAACQ,YAAY,CAAC,CAACkB,GAAG,CAAC,CAACzB,IAAI,EAAEmC,SAAS,KAAK;YAClDrD,gBAAgB,CAACkB,IAAI,CAACjB,OAAO,CAAC;YAC9B,oBACE5B,OAAA;cAAAqC,QAAA,gBACErC,OAAA;gBAAAqC,QAAA,EAAKQ,IAAI,CAACjB;cAAO;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBzC,OAAA;gBAAAqC,QAAA,EAAKQ,IAAI,CAACT;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACpBsB,iBAAiB,CAAClB,IAAI,CAACjB,OAAO,CAAC,EAAE,GAAG;YAAA,GAH9BoD,SAAS;cAAA1C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAId,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAtBAkC,KAAK;MAAArC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAuBV,CACN,CAAC,gBAEFzC,OAAA;MAAAqC,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxD,eACDzC,OAAA;MAAAqC,QAAA,gBACErC,OAAA;QAAQiF,OAAO,EAAEJ,UAAW;QAAAxC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CzC,OAAA;QAAQiF,OAAO,EAAEH,UAAW;QAAAzC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrC,EAAA,CA/QID,SAAS;EAAA,QACIT,WAAW,EACXC,WAAW;AAAA;AAAAuF,EAAA,GAFxB/E,SAAS;AAiRf,eAAeA,SAAS;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}