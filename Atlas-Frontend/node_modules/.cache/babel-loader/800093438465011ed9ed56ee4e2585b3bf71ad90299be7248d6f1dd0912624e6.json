{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCommentsByRSN, addComment } from '../API/CommentApi';\nimport { useSelector } from \"react-redux\";\nimport \"../Styles/Comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  RSN\n}) => {\n  _s();\n  // State hooks for comments and new comment input\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isCommentBoxVisible, setIsCommentBoxVisible] = useState(false);\n\n  // Get userId from the Redux store\n  const userId = useSelector(state => state.user.userId);\n\n  // Fetch comments on component mount or when RSN changes\n  const fetchComments = async () => {\n    try {\n      const result = await getCommentsByRSN(RSN);\n      setComments(result.data);\n    } catch (error) {\n      console.error('Failed to fetch comments:', error.message);\n    }\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [RSN]);\n\n  // Handle submitting a new comment\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) {\n      alert(\"Comment cannot be empty.\");\n      return;\n    }\n    try {\n      const result = await addComment(RSN, userId, newComment);\n      setNewComment('');\n      setIsCommentBoxVisible(false);\n      alert(result.message || 'Comment added successfully');\n      fetchComments();\n    } catch (error) {\n      alert(error.message || 'Failed to add comment');\n    }\n  };\n\n  // Handle showing and hiding the comment textbox\n  const handleAddCommentClick = () => {\n    setIsCommentBoxVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Comments for RSN: \", RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comment Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: \"No comments available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this) : comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: comment.UserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(comment.Date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: comment.Comments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isCommentBoxVisible ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCommentClick,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Enter your comment here\",\n            required: true,\n            className: \"textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsCommentBoxVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"7GQu5c/Ab4fuO513mFGV3/FwaGs=\", false, function () {\n  return [useSelector];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","getCommentsByRSN","addComment","useSelector","jsxDEV","_jsxDEV","Comments","RSN","_s","comments","setComments","newComment","setNewComment","isCommentBoxVisible","setIsCommentBoxVisible","userId","state","user","fetchComments","result","data","error","console","message","handleSubmit","e","preventDefault","trim","alert","handleAddCommentClick","children","fileName","_jsxFileName","lineNumber","columnNumber","length","colSpan","map","comment","index","UserId","Date","toLocaleString","onClick","onSubmit","value","onChange","target","placeholder","required","className","type","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getCommentsByRSN, addComment } from '../API/CommentApi';\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../Styles/Comments.css\";\r\n\r\nconst Comments = ({ RSN }) => {\r\n  // State hooks for comments and new comment input\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [isCommentBoxVisible, setIsCommentBoxVisible] = useState(false);\r\n  \r\n  // Get userId from the Redux store\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  // Fetch comments on component mount or when RSN changes\r\n  const fetchComments = async () => {\r\n    try {\r\n      const result = await getCommentsByRSN(RSN);\r\n      setComments(result.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch comments:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [RSN]);\r\n\r\n  // Handle submitting a new comment\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newComment.trim()) {\r\n      alert(\"Comment cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await addComment(RSN, userId, newComment);\r\n      setNewComment('');\r\n      setIsCommentBoxVisible(false);\r\n      alert(result.message || 'Comment added successfully');\r\n\r\n      fetchComments();\r\n    } catch (error) {\r\n      alert(error.message || 'Failed to add comment');\r\n    }\r\n  };\r\n\r\n  // Handle showing and hiding the comment textbox\r\n  const handleAddCommentClick = () => {\r\n    setIsCommentBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comments for RSN: {RSN}</h2>\r\n      \r\n      <div>\r\n        <h3>Comment Section</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>User</th>\r\n              <th>Date</th>\r\n              <th>Comments</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {comments.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"2\">No comments available</td>\r\n              </tr>\r\n            ) : (\r\n              comments.map((comment, index) => (\r\n                <tr key={index}>\r\n                  <td>{comment.UserId}</td>\r\n                  <td>{new Date(comment.Date).toLocaleString()}</td>\r\n                  <td>{comment.Comments}</td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div>\r\n        {!isCommentBoxVisible ? (\r\n          <button onClick={handleAddCommentClick}>Add Comment</button>\r\n        ) : (\r\n          <div>\r\n            <h3>Add a Comment</h3>\r\n            <form onSubmit={handleSubmit}>\r\n              <textarea\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n                placeholder=\"Enter your comment here\"\r\n                required\r\n                className='textarea'\r\n              />\r\n              <div>\r\n                <button type=\"submit\">Submit Comment</button>\r\n                <button type=\"button\" onClick={() => setIsCommentBoxVisible(false)}>Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}