{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\PanelSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PanelSelection = () => {\n  _s();\n  // Defining all states using an object for simplicity\n  const [selectedStates, setSelectedStates] = useState({\n    frontRight: false,\n    frontLeft: false,\n    frontComplete: false,\n    backRight: false,\n    backLeft: false,\n    backComplete: false,\n    sleeveRight: false,\n    sleeveLeft: false,\n    bothSleeves: false,\n    tape: false,\n    kharcha1: false,\n    kharcha2: false,\n    kharcha3: false\n  });\n\n  // Handle state changes for checkboxes\n  const handleCheckboxChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelectedStates(prevState => ({\n      ...prevState,\n      [name]: checked\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(selectedStates).map(state => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: state,\n          checked: selectedStates[state],\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), state]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, state, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PanelSelection, \"1EL+vxsWq+4Zz8PXhHAl/f142BM=\");\n_c = PanelSelection;\nexport default PanelSelection;\nvar _c;\n$RefreshReg$(_c, \"PanelSelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PanelSelection","_s","selectedStates","setSelectedStates","frontRight","frontLeft","frontComplete","backRight","backLeft","backComplete","sleeveRight","sleeveLeft","bothSleeves","tape","kharcha1","kharcha2","kharcha3","handleCheckboxChange","event","name","checked","target","prevState","children","Object","keys","map","state","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/PanelSelection.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst PanelSelection = () => {\r\n  // Defining all states using an object for simplicity\r\n  const [selectedStates, setSelectedStates] = useState({\r\n    frontRight: false,\r\n    frontLeft: false,\r\n    frontComplete: false,\r\n    backRight: false,\r\n    backLeft: false,\r\n    backComplete: false,\r\n    sleeveRight: false,\r\n    sleeveLeft: false,\r\n    bothSleeves: false,\r\n    tape: false,\r\n    kharcha1: false,\r\n    kharcha2: false,\r\n    kharcha3: false,\r\n  });\r\n\r\n  // Handle state changes for checkboxes\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setSelectedStates((prevState) => ({\r\n      ...prevState,\r\n      [name]: checked,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(selectedStates).map((state) => (\r\n        <div key={state}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={state}\r\n              checked={selectedStates[state]}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            {state}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PanelSelection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC;IACnDO,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IAChBC,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE,KAAK;IAClBC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACtClB,iBAAiB,CAAEmB,SAAS,KAAM;MAChC,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACErB,OAAA;IAAAwB,QAAA,EACGC,MAAM,CAACC,IAAI,CAACvB,cAAc,CAAC,CAACwB,GAAG,CAAEC,KAAK,iBACrC5B,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UACE6B,IAAI,EAAC,UAAU;UACfT,IAAI,EAAEQ,KAAM;UACZP,OAAO,EAAElB,cAAc,CAACyB,KAAK,CAAE;UAC/BE,QAAQ,EAAEZ;QAAqB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EACDN,KAAK;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,GATAN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA5CID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}