{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{loginUser,registerUser}from'../API/UserApi';// Async action for logging in\nexport const login=createAsyncThunk('user/login',async(credentials,_ref)=>{let{rejectWithValue}=_ref;try{const response=await loginUser(credentials);return response;}catch(error){return rejectWithValue(error);}});// Async action for signing up\nexport const signup=createAsyncThunk('user/signup',async(userData,_ref2)=>{let{rejectWithValue}=_ref2;try{const response=await registerUser(userData);return response;}catch(error){return rejectWithValue(error);}});// Create the user slice of the state\nexport const userSlice=createSlice({name:'user',initialState:{userId:'',loading:false,error:''},reducers:{// Action to set userId\nsetUserId:(state,action)=>{state.userId=action.payload;},// Action to clear userId (for logout functionality)\nlogout:state=>{state.userId='';},setError:(state,action)=>{state.error=action.payload;},clearError:state=>{state.error='';}},extraReducers:builder=>{builder// Handle login\n.addCase(login.pending,state=>{state.loading=true;state.error='';}).addCase(login.fulfilled,(state,action)=>{state.loading=false;state.userId=action.payload.UserID;}).addCase(login.rejected,(state,action)=>{state.loading=false;state.error=action.payload.message||'Login failed';})// Handle signup\n.addCase(signup.pending,state=>{state.loading=true;state.error='';}).addCase(signup.fulfilled,(state,action)=>{state.loading=false;state.userId=action.payload.UserID;}).addCase(signup.rejected,(state,action)=>{state.loading=false;state.error=action.payload.message||'Signup failed';});}});// Export the action creators\nexport const{setUserId,logout,setError,clearError}=userSlice.actions;// Export the reducer to be included in the store\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","registerUser","login","credentials","_ref","rejectWithValue","response","error","signup","userData","_ref2","userSlice","name","initialState","userId","loading","reducers","setUserId","state","action","payload","logout","setError","clearError","extraReducers","builder","addCase","pending","fulfilled","UserID","rejected","message","actions","reducer"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Redux/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { loginUser, registerUser } from '../API/UserApi';\r\n\r\n// Async action for logging in\r\nexport const login = createAsyncThunk(\r\n  'user/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await loginUser(credentials);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\n// Async action for signing up\r\nexport const signup = createAsyncThunk(\r\n  'user/signup',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await registerUser(userData);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\n// Create the user slice of the state\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    userId: '',\r\n    loading: false,\r\n    error: '',\r\n  },\r\n  reducers: {\r\n    // Action to set userId\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    // Action to clear userId (for logout functionality)\r\n    logout: (state) => {\r\n      state.userId = '';\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Handle login\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = '';\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userId = action.payload.UserID;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message || 'Login failed';\r\n      })\r\n\r\n      // Handle signup\r\n      .addCase(signup.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = '';\r\n      })\r\n      .addCase(signup.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userId = action.payload.UserID;\r\n      })\r\n      .addCase(signup.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message || 'Signup failed';\r\n      });\r\n  },\r\n});\r\n\r\n// Export the action creators\r\nexport const { setUserId, logout, setError, clearError } = userSlice.actions;\r\n\r\n// Export the reducer to be included in the store\r\nexport default userSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}