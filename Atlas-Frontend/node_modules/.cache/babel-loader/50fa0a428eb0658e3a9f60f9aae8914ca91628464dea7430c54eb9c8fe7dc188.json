{"ast":null,"code":"import axios from 'axios';\n\n// Set base URL for API (adjust as needed)\nconst API_URL = 'http://localhost:5000/api'; // Change to your server URL\n\n// Function to upload an image\nexport const uploadImage = async (imageData, imageName, RSN, userId) => {\n  const formData = new FormData();\n  formData.append('image', imageData);\n  formData.append('imageName', imageName);\n  formData.append('RSN', RSN);\n  formData.append(\"userId\", userId);\n  try {\n    console.log(formData);\n    const response = await axios.post(`${API_URL}/upload-image`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error uploading image:\", error);\n    throw error; // Rethrow the error to be handled in the component\n  }\n};\n\n// Function to fetch image by RSN\nexport const getImageByRSN = async RSN => {\n  try {\n    const response = await axios.get(`${API_URL}/image/${RSN}`);\n    return response.data; // This should return ImageData (base64 string or file path)\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error fetching image:\", error.response.data);\n      console.error(\"Status Code:\", error.response.status);\n    } else if (error.request) {\n      console.error(\"No response from server:\", error.request);\n    } else {\n      console.error(\"Error during request setup:\", error.message);\n    }\n    throw error; // Propagate error for further handling\n  }\n};","map":{"version":3,"names":["axios","API_URL","uploadImage","imageData","imageName","RSN","userId","formData","FormData","append","console","log","response","post","headers","data","error","getImageByRSN","get","status","request","message"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/API/ImageApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set base URL for API (adjust as needed)\r\nconst API_URL = 'http://localhost:5000/api'; // Change to your server URL\r\n\r\n// Function to upload an image\r\nexport const uploadImage = async (imageData, imageName, RSN, userId) => {\r\n  const formData = new FormData();\r\n  formData.append('image', imageData);\r\n  formData.append('imageName', imageName);\r\n  formData.append('RSN', RSN);\r\n  formData.append(\"userId\", userId);\r\n\r\n  try {\r\n    console.log(formData);\r\n    const response = await axios.post(`${API_URL}/upload-image`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error uploading image:\", error);\r\n    throw error; // Rethrow the error to be handled in the component\r\n  }\r\n};\r\n\r\n\r\n// Function to fetch image by RSN\r\nexport const getImageByRSN = async (RSN) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/image/${RSN}`);\r\n    return response.data; // This should return ImageData (base64 string or file path)\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error(\"Error fetching image:\", error.response.data);\r\n      console.error(\"Status Code:\", error.response.status);\r\n    } else if (error.request) {\r\n      console.error(\"No response from server:\", error.request);\r\n    } else {\r\n      console.error(\"Error during request setup:\", error.message);\r\n    }\r\n    throw error; // Propagate error for further handling\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,KAAK;EACtE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,CAAC;EACnCI,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;EACvCG,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEJ,GAAG,CAAC;EAC3BE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC;EAEjC,IAAI;IACFI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,eAAe,EAAEM,QAAQ,EAAE;MACrEO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAGD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOZ,GAAG,IAAK;EAC1C,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,UAAUI,GAAG,EAAE,CAAC;IAC3D,OAAOO,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClBF,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAAC;MAC3DL,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACJ,QAAQ,CAACO,MAAM,CAAC;IACtD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxBV,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACI,OAAO,CAAC;IAC1D,CAAC,MAAM;MACLV,OAAO,CAACM,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACK,OAAO,CAAC;IAC7D;IACA,MAAML,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}