{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddOrderDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\nimport { getOrderNo } from \"../API/OrderApi\"; // Make sure this API exists\nimport { addOrderYarn } from \"../API/OrderYarnApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddOrderDetails = ({\n  ArticleNo\n}) => {\n  _s();\n  var _yarnUsageData$;\n  const [yarnUsageData, setYarnUsageData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [quantities, setQuantities] = useState({});\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]);\n  const [orderNo, setOrderNo] = useState(null); // State to store Order No\n\n  // Fetch Order No on component load\n  useEffect(() => {\n    const fetchOrderNo = async () => {\n      try {\n        const response = await getOrderNo();\n        setOrderNo(response.OrderNo);\n      } catch (err) {\n        setError(\"Failed to fetch Order No.\");\n      }\n    };\n    fetchOrderNo();\n  }, []);\n\n  // Fetch Yarn Usage data based on ArticleNo\n  useEffect(() => {\n    const fetchYarnUsage = async () => {\n      try {\n        const response = await getYarnUsageByArticleNo(ArticleNo);\n        if (response.success && response.data && response.data.length > 0) {\n          setYarnUsageData(response.data);\n        } else {\n          setError(\"No data found for this ArticleNo.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch yarn usage data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (ArticleNo) {\n      fetchYarnUsage();\n    }\n  }, [ArticleNo]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  const sizes = [\"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\"];\n  const getAllNonNullSizes = data => {\n    const nonNullSizes = sizes.filter(size => data.some(row => row[size] !== null));\n    return nonNullSizes;\n  };\n  const nonNullSizes = getAllNonNullSizes(yarnUsageData);\n  const handleQuantityChange = (matchingName, size, value) => {\n    const quantity = parseInt(value) || 0;\n    setQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [matchingName]: {\n        ...prevQuantities[matchingName],\n        [size]: quantity\n      }\n    }));\n  };\n  const calculateTotalQuantity = matchingName => {\n    const quantitiesForMatchingName = quantities[matchingName] || {};\n    const totalQuantity = nonNullSizes.reduce((total, size) => {\n      return total + (quantitiesForMatchingName[size] || 0);\n    }, 0);\n    return totalQuantity;\n  };\n  const getNonNullYarns = data => {\n    const yarns = [];\n    for (let i = 1; i <= 15; i++) {\n      const yarnKey = `Yarn${i}`;\n      if (data[yarnKey] && data[yarnKey].YarnId) {\n        yarns.push({\n          YarnId: data[yarnKey].YarnId,\n          Weight: data[yarnKey].Weight\n        });\n      }\n    }\n    return yarns;\n  };\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\n    var _quantities$matchingN;\n    const quantity = (_quantities$matchingN = quantities[matchingName]) === null || _quantities$matchingN === void 0 ? void 0 : _quantities$matchingN[size];\n    if (!quantity) {\n      return 0;\n    }\n    const row = yarnUsageData.find(row => row.MatchingName === matchingName);\n    const percentage = row ? row[size] : 0;\n    const updatedWeight = originalWeight * (1 + percentage / 100) * quantity;\n    return updatedWeight;\n  };\n  const handleSubmit = async () => {\n    if (!orderNo) {\n      setError(\"Order No is not available.\");\n      return;\n    }\n    const updatedData = yarnUsageData.map(data => {\n      const yarns = getNonNullYarns(data);\n      const updatedYarns = yarns.map(yarn => {\n        const updatedYarnDetails = {};\n        let totalWeight = 0;\n        nonNullSizes.forEach(size => {\n          const updatedWeight = calculateUpdatedWeight(yarn.Weight, size, data.MatchingName);\n          updatedYarnDetails[size] = updatedWeight;\n          totalWeight += updatedWeight;\n        });\n        return {\n          ...yarn,\n          updatedYarnDetails,\n          totalWeight\n        };\n      });\n      return {\n        MatchingName: data.MatchingName,\n        yarns: updatedYarns\n      };\n    });\n\n    // Set the updated data to state\n    setUpdatedYarnUsageData(updatedData);\n\n    // Prepare data for API call in the required format\n    const yarnRequestPayload = updatedData.flatMap(data => data.yarns.map(yarn => ({\n      MatchingName: data.MatchingName,\n      YarnId: yarn.YarnId,\n      TotalWeight: yarn.totalWeight,\n      OrderNo: orderNo // Include OrderNo in the payload\n    })));\n    try {\n      // Send the data to the backend API\n      const response = await addOrderYarn(yarnRequestPayload);\n      console.log(\"Yarn request added successfully:\", response);\n    } catch (error) {\n      console.error(\"Failed to add yarn request:\", error);\n      setError(\"Failed to add yarn request.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Order Quantity Details for Article No: \", ArticleNo, \" with RSN:\", \" \", (_yarnUsageData$ = yarnUsageData[0]) === null || _yarnUsageData$ === void 0 ? void 0 : _yarnUsageData$.RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), yarnUsageData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matching Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: yarnUsageData.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.MatchingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), nonNullSizes.map(size => {\n            var _quantities$data$Matc;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: ((_quantities$data$Matc = quantities[data.MatchingName]) === null || _quantities$data$Matc === void 0 ? void 0 : _quantities$data$Matc[size]) || 0,\n                onChange: e => handleQuantityChange(data.MatchingName, size, e.target.value),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: calculateTotalQuantity(data.MatchingName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, dataIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No yarn usage data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), updatedYarnUsageData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Updated Yarn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Matching Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Yarn ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: updatedYarnUsageData.map((data, dataIndex) => {\n            return data.yarns.map((yarn, yarnIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [yarnIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: data.yarns.length,\n                children: data.MatchingName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yarn.YarnId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yarn.updatedYarnDetails[size] ? yarn.updatedYarnDetails[size].toFixed(2) : \"-\"\n              }, `${size}-${yarnIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yarn.totalWeight.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)]\n            }, `${dataIndex}-${yarnIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this));\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(AddOrderDetails, \"IG+SQ8xiIVOZc5xN4tHlUZAyTNw=\");\n_c = AddOrderDetails;\nexport default AddOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"AddOrderDetails\");","map":{"version":3,"names":["React","useState","useEffect","getYarnUsageByArticleNo","getOrderNo","addOrderYarn","jsxDEV","_jsxDEV","AddOrderDetails","ArticleNo","_s","_yarnUsageData$","yarnUsageData","setYarnUsageData","error","setError","loading","setLoading","quantities","setQuantities","updatedYarnUsageData","setUpdatedYarnUsageData","orderNo","setOrderNo","fetchOrderNo","response","OrderNo","err","fetchYarnUsage","success","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","sizes","getAllNonNullSizes","nonNullSizes","filter","size","some","row","handleQuantityChange","matchingName","value","quantity","parseInt","prevQuantities","calculateTotalQuantity","quantitiesForMatchingName","totalQuantity","reduce","total","getNonNullYarns","yarns","i","yarnKey","YarnId","push","Weight","calculateUpdatedWeight","originalWeight","_quantities$matchingN","find","MatchingName","percentage","updatedWeight","handleSubmit","updatedData","map","updatedYarns","yarn","updatedYarnDetails","totalWeight","forEach","yarnRequestPayload","flatMap","TotalWeight","console","log","RSN","border","cellPadding","style","width","marginTop","dataIndex","_quantities$data$Matc","type","onChange","e","target","min","onClick","yarnIndex","rowSpan","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddOrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\r\nimport { getOrderNo } from \"../API/OrderApi\";  // Make sure this API exists\r\nimport { addOrderYarn } from \"../API/OrderYarnApi\";\r\n\r\nconst AddOrderDetails = ({ ArticleNo }) => {\r\n  const [yarnUsageData, setYarnUsageData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [quantities, setQuantities] = useState({});\r\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]);\r\n  const [orderNo, setOrderNo] = useState(null); // State to store Order No\r\n\r\n  // Fetch Order No on component load\r\n  useEffect(() => {\r\n    const fetchOrderNo = async () => {\r\n      try {\r\n        const response = await getOrderNo();\r\n          setOrderNo(response.OrderNo);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch Order No.\");\r\n      }\r\n    };\r\n\r\n    fetchOrderNo();\r\n  }, []);\r\n\r\n  // Fetch Yarn Usage data based on ArticleNo\r\n  useEffect(() => {\r\n    const fetchYarnUsage = async () => {\r\n      try {\r\n        const response = await getYarnUsageByArticleNo(ArticleNo);\r\n        if (response.success && response.data && response.data.length > 0) {\r\n          setYarnUsageData(response.data);\r\n        } else {\r\n          setError(\"No data found for this ArticleNo.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch yarn usage data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (ArticleNo) {\r\n      fetchYarnUsage();\r\n    }\r\n  }, [ArticleNo]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  const sizes = [\r\n    \"Freesize\",\r\n    \"XS\",\r\n    \"S\",\r\n    \"M\",\r\n    \"L\",\r\n    \"XL\",\r\n    \"2XL\",\r\n    \"3XL\",\r\n    \"4XL\",\r\n    \"5XL\",\r\n  ];\r\n\r\n  const getAllNonNullSizes = (data) => {\r\n    const nonNullSizes = sizes.filter((size) =>\r\n      data.some((row) => row[size] !== null)\r\n    );\r\n    return nonNullSizes;\r\n  };\r\n\r\n  const nonNullSizes = getAllNonNullSizes(yarnUsageData);\r\n\r\n  const handleQuantityChange = (matchingName, size, value) => {\r\n    const quantity = parseInt(value) || 0;\r\n    setQuantities((prevQuantities) => ({\r\n      ...prevQuantities,\r\n      [matchingName]: {\r\n        ...prevQuantities[matchingName],\r\n        [size]: quantity,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const calculateTotalQuantity = (matchingName) => {\r\n    const quantitiesForMatchingName = quantities[matchingName] || {};\r\n    const totalQuantity = nonNullSizes.reduce((total, size) => {\r\n      return total + (quantitiesForMatchingName[size] || 0);\r\n    }, 0);\r\n    return totalQuantity;\r\n  };\r\n\r\n  const getNonNullYarns = (data) => {\r\n    const yarns = [];\r\n    for (let i = 1; i <= 15; i++) {\r\n      const yarnKey = `Yarn${i}`;\r\n      if (data[yarnKey] && data[yarnKey].YarnId) {\r\n        yarns.push({\r\n          YarnId: data[yarnKey].YarnId,\r\n          Weight: data[yarnKey].Weight,\r\n        });\r\n      }\r\n    }\r\n    return yarns;\r\n  };\r\n\r\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\r\n    const quantity = quantities[matchingName]?.[size];\r\n    if (!quantity) {\r\n      return 0;\r\n    }\r\n\r\n    const row = yarnUsageData.find((row) => row.MatchingName === matchingName);\r\n    const percentage = row ? row[size] : 0;\r\n\r\n    const updatedWeight = originalWeight * (1 + percentage / 100) * quantity;\r\n    return updatedWeight;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!orderNo) {\r\n      setError(\"Order No is not available.\");\r\n      return;\r\n    }\r\n\r\n    const updatedData = yarnUsageData.map((data) => {\r\n      const yarns = getNonNullYarns(data);\r\n      const updatedYarns = yarns.map((yarn) => {\r\n        const updatedYarnDetails = {};\r\n        let totalWeight = 0;\r\n\r\n        nonNullSizes.forEach((size) => {\r\n          const updatedWeight = calculateUpdatedWeight(\r\n            yarn.Weight,\r\n            size,\r\n            data.MatchingName\r\n          );\r\n          updatedYarnDetails[size] = updatedWeight;\r\n          totalWeight += updatedWeight;\r\n        });\r\n\r\n        return {\r\n          ...yarn,\r\n          updatedYarnDetails,\r\n          totalWeight,\r\n        };\r\n      });\r\n\r\n      return {\r\n        MatchingName: data.MatchingName,\r\n        yarns: updatedYarns,\r\n      };\r\n    });\r\n\r\n    // Set the updated data to state\r\n    setUpdatedYarnUsageData(updatedData);\r\n\r\n    // Prepare data for API call in the required format\r\n    const yarnRequestPayload = updatedData.flatMap((data) =>\r\n      data.yarns.map((yarn) => ({\r\n        MatchingName: data.MatchingName,\r\n        YarnId: yarn.YarnId,\r\n        TotalWeight: yarn.totalWeight,\r\n        OrderNo: orderNo,  // Include OrderNo in the payload\r\n      }))\r\n    );\r\n\r\n    try {\r\n      // Send the data to the backend API\r\n      const response = await addOrderYarn(yarnRequestPayload);\r\n      console.log(\"Yarn request added successfully:\", response);\r\n    } catch (error) {\r\n      console.error(\"Failed to add yarn request:\", error);\r\n      setError(\"Failed to add yarn request.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Order Quantity Details for Article No: {ArticleNo} with RSN:{\" \"}\r\n        {yarnUsageData[0]?.RSN}\r\n      </h2>\r\n\r\n      {yarnUsageData.length > 0 ? (\r\n        <table border=\"1\" cellPadding=\"10\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Matching Name</th>\r\n              {nonNullSizes.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {yarnUsageData.map((data, dataIndex) => (\r\n              <tr key={dataIndex}>\r\n                <td>{data.MatchingName}</td>\r\n                {nonNullSizes.map((size) => (\r\n                  <td key={size}>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={quantities[data.MatchingName]?.[size] || 0}\r\n                      onChange={(e) =>\r\n                        handleQuantityChange(\r\n                          data.MatchingName,\r\n                          size,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n                <td>{calculateTotalQuantity(data.MatchingName)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div>No yarn usage data found.</div>\r\n      )}\r\n\r\n      <button onClick={handleSubmit}>Submit</button>\r\n\r\n      {updatedYarnUsageData.length > 0 && (\r\n        <div style={{ marginTop: \"30px\" }}>\r\n          <h2>Updated Yarn Details</h2>\r\n          <table border=\"1\" cellPadding=\"10\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Matching Name</th>\r\n                <th>Yarn ID</th>\r\n                {nonNullSizes.map((size) => (\r\n                  <th key={size}>{size}</th>\r\n                ))}\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {updatedYarnUsageData.map((data, dataIndex) => {\r\n                return data.yarns.map((yarn, yarnIndex) => (\r\n                  <tr key={`${dataIndex}-${yarnIndex}`}>\r\n                    {yarnIndex === 0 && (\r\n                      <td rowSpan={data.yarns.length}>{data.MatchingName}</td>\r\n                    )}\r\n                    <td>{yarn.YarnId}</td>\r\n                    {nonNullSizes.map((size) => (\r\n                      <td key={`${size}-${yarnIndex}`}>\r\n                        {yarn.updatedYarnDetails[size]\r\n                          ? yarn.updatedYarnDetails[size].toFixed(2)\r\n                          : \"-\"}\r\n                      </td>\r\n                    ))}\r\n                    <td>{yarn.totalWeight.toFixed(2)}</td>\r\n                  </tr>\r\n                ));\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrderDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}