{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\YarnStockDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YarnStockDetails = () => {\n  _s();\n  const [yarnStockDetails, setYarnStockDetails] = useState([]); // Ensure initial state is an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to format the date to a readable format\n  const formatDate = date => {\n    const jsDate = new Date(date);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return jsDate.toLocaleDateString(\"en-US\", options);\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/YarnStock\").then(response => {\n      if (Array.isArray(response.data.data)) {\n        // Ensure the response is an array\n        setYarnStockDetails(response.data.data);\n      } else {\n        setError(\"Invalid data format received.\");\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []);\n  console.log(yarnStockDetails);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Yarn Details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching yarn details: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Yarn Inventory Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"YarnID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Supplier Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Supplier City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weight (in Kgs)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bill Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [Array.isArray(yarnStockDetails) && yarnStockDetails.map(yarn => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(yarn.Date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: yarn.YarnID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: yarn.SupplierName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: yarn.SupplierCity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: yarn.Weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: yarn.Amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: yarn.BillNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, `${yarn.YarnId}-${yarn.BillNo}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)), !Array.isArray(yarnStockDetails) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not an Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(YarnStockDetails, \"6xo7FI3MccZgxYyCvvpHBC471cc=\");\n_c = YarnStockDetails;\nexport default YarnStockDetails;\nvar _c;\n$RefreshReg$(_c, \"YarnStockDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","YarnStockDetails","_s","yarnStockDetails","setYarnStockDetails","loading","setLoading","error","setError","formatDate","date","jsDate","Date","options","year","month","day","toLocaleDateString","get","then","response","Array","isArray","data","catch","message","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","yarn","YarnID","SupplierName","SupplierCity","Weight","Amount","BillNo","YarnId","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/YarnStockDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst YarnStockDetails = () => {\r\n  const [yarnStockDetails, setYarnStockDetails] = useState([]); // Ensure initial state is an array\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to format the date to a readable format\r\n  const formatDate = (date) => {\r\n    const jsDate = new Date(date);\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    };\r\n    return jsDate.toLocaleDateString(\"en-US\", options);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/YarnStock\")\r\n      .then((response) => {\r\n        if (Array.isArray(response.data.data)) {\r\n          // Ensure the response is an array\r\n          setYarnStockDetails(response.data.data);\r\n        } else {\r\n          setError(\"Invalid data format received.\");\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  console.log(yarnStockDetails);\r\n\r\n  if (loading) {\r\n    return <p>Loading Yarn Details...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error fetching yarn details: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Yarn Inventory Details</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>YarnID</th>\r\n              <th>Supplier Name</th>\r\n              <th>Supplier City</th>\r\n              <th>Weight (in Kgs)</th>\r\n              <th>Cost</th>\r\n              <th>Bill Number</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Array.isArray(yarnStockDetails) &&\r\n              yarnStockDetails.map((yarn) => (\r\n                <tr key={`${yarn.YarnId}-${yarn.BillNo}`}>\r\n                  <td>{formatDate(yarn.Date)}</td>\r\n                  <td>{yarn.YarnID}</td>\r\n                  <td>{yarn.SupplierName}</td>\r\n                  <td>{yarn.SupplierCity}</td>\r\n                  <td>{yarn.Weight}</td>\r\n                  <td>{yarn.Amount}</td>\r\n                  <td>{yarn.BillNo}</td>\r\n                </tr>\r\n              ))}\r\n            {!Array.isArray(yarnStockDetails) && <p>Not an Array</p>}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YarnStockDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}