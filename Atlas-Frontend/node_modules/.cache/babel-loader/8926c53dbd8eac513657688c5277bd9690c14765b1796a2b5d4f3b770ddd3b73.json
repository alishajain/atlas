{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowOrderYarn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { searchOrderYarn } from \"../API/OrderYarnApi\"; // Import the API function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowOrderYarn = () => {\n  _s();\n  const [orderYarnData, setOrderYarnData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch order yarn details when the component mounts or when OrderNo changes\n  useEffect(() => {\n    if (!orderNo) return; // If OrderNo is not provided, don't make the request\n\n    const fetchOrderYarnData = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Clear previous error\n\n        const response = await searchOrderYarn(orderNo); // Call the API with OrderNo\n        setOrderYarnData(response.data); // Set the response data to state\n      } catch (err) {\n        setError(\"Error fetching order yarn data\");\n        console.error(\"Error fetching order yarn data:\", err);\n      } finally {\n        setLoading(false); // Set loading to false after request is completed\n      }\n    };\n    fetchOrderYarnData();\n  }, [orderNo]); // Dependency array ensures this runs only when OrderNo changes\n\n  // Handle input change for OrderNo\n  const handleOrderNoChange = e => {\n    setOrderNo(e.target.value); // Update OrderNo when the input changes\n  };\n\n  // Show loading message\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading order yarn data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show error message if an error occurred\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show order yarn details if available\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Order Yarn Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), orderYarnData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Order Yarn Data for OrderNo: \", orderNo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Field Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(orderYarnData).map(key => orderYarnData[key] !== null && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: orderYarnData[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found for this OrderNo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowOrderYarn, \"EUDMAXXIDRkUjc/Loa3Kc1daezM=\");\n_c = ShowOrderYarn;\nexport default ShowOrderYarn;\nvar _c;\n$RefreshReg$(_c, \"ShowOrderYarn\");","map":{"version":3,"names":["React","useState","useEffect","searchOrderYarn","jsxDEV","_jsxDEV","ShowOrderYarn","_s","orderYarnData","setOrderYarnData","loading","setLoading","error","setError","orderNo","fetchOrderYarnData","response","data","err","console","handleOrderNoChange","e","setOrderNo","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowOrderYarn.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { searchOrderYarn } from \"../API/OrderYarnApi\"; // Import the API function\r\n\r\nconst ShowOrderYarn = () => {\r\n  const [orderYarnData, setOrderYarnData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch order yarn details when the component mounts or when OrderNo changes\r\n  useEffect(() => {\r\n    if (!orderNo) return; // If OrderNo is not provided, don't make the request\r\n\r\n    const fetchOrderYarnData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null); // Clear previous error\r\n\r\n        const response = await searchOrderYarn(orderNo); // Call the API with OrderNo\r\n        setOrderYarnData(response.data); // Set the response data to state\r\n      } catch (err) {\r\n        setError(\"Error fetching order yarn data\");\r\n        console.error(\"Error fetching order yarn data:\", err);\r\n      } finally {\r\n        setLoading(false); // Set loading to false after request is completed\r\n      }\r\n    };\r\n\r\n    fetchOrderYarnData();\r\n  }, [orderNo]); // Dependency array ensures this runs only when OrderNo changes\r\n\r\n  // Handle input change for OrderNo\r\n  const handleOrderNoChange = (e) => {\r\n    setOrderNo(e.target.value); // Update OrderNo when the input changes\r\n  };\r\n\r\n  // Show loading message\r\n  if (loading) {\r\n    return <p>Loading order yarn data...</p>;\r\n  }\r\n\r\n  // Show error message if an error occurred\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  // Show order yarn details if available\r\n  return (\r\n    <div>\r\n      <h2>Search Order Yarn Data</h2>\r\n\r\n      {/* Show order yarn data if available */}\r\n      {orderYarnData ? (\r\n        <div>\r\n          <h3>Order Yarn Data for OrderNo: {orderNo}</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field Name</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.keys(orderYarnData).map((key) => (\r\n                orderYarnData[key] !== null && (\r\n                  <tr key={key}>\r\n                    <td>{key}</td>\r\n                    <td>{orderYarnData[key]}</td>\r\n                  </tr>\r\n                )\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>No data found for this OrderNo.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowOrderYarn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}