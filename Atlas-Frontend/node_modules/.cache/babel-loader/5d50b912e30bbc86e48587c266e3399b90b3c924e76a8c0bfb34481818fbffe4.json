{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddOrderDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\nimport { getOrderNo } from \"../API/OrderApi\";\nimport { addOrderDetails } from \"../API/OrderDetailsApi\";\nimport { addOrderYarn } from \"../API/OrderYarnApi\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizes = [\"Freesize\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\", \"4XL\", \"5XL\"];\nconst AddOrderDetails = ({\n  ArticleNo\n}) => {\n  _s();\n  var _yarnUsageData$;\n  const userId = useSelector(state => state.user.userId);\n  const [yarnUsageData, setYarnUsageData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [quantities, setQuantities] = useState({});\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]);\n  const [orderNo, setOrderNo] = useState(null);\n\n  // Fetch Order No on component load\n  useEffect(() => {\n    const fetchOrderNo = async () => {\n      try {\n        const {\n          OrderNo\n        } = await getOrderNo();\n        setOrderNo(OrderNo);\n      } catch (err) {\n        setError(\"Failed to fetch Order No.\");\n      }\n    };\n    fetchOrderNo();\n  }, []);\n\n  // Fetch Yarn Usage data based on ArticleNo\n  useEffect(() => {\n    const fetchYarnUsage = async () => {\n      if (!ArticleNo) return;\n      setLoading(true);\n      try {\n        const response = await getYarnUsageByArticleNo(ArticleNo);\n        if (response.success && response.data.length > 0) {\n          setYarnUsageData(response.data);\n        } else {\n          setError(\"No yarn usage data found.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch yarn usage data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchYarnUsage();\n  }, [ArticleNo]);\n  const getNonNullSizes = data => {\n    if (Array.isArray(data)) {\n      return sizes.filter(size => data.some(row => row[size] !== null));\n    }\n    return sizes.filter(size => data[size] !== null);\n  };\n  const handleQuantityChange = (matchingName, size, value) => {\n    const quantity = parseInt(value) || 0;\n    setQuantities(prev => {\n      const updatedQuantities = {\n        ...prev,\n        [matchingName]: {\n          ...prev[matchingName],\n          [size]: quantity\n        }\n      };\n      return updatedQuantities;\n    });\n  };\n  const calculateTotalQuantity = matchingName => {\n    const quantitiesForMatchingName = quantities[matchingName] || {};\n    return getNonNullSizes(yarnUsageData).reduce((total, size) => total + (quantitiesForMatchingName[size] || 0), 0);\n  };\n  const getNonNullYarns = data => {\n    return Array.from({\n      length: 15\n    }, (_, i) => {\n      var _data$yarnKey;\n      const yarnKey = `Yarn${i + 1}`;\n      if ((_data$yarnKey = data[yarnKey]) !== null && _data$yarnKey !== void 0 && _data$yarnKey.YarnId) {\n        return {\n          YarnId: data[yarnKey].YarnId,\n          Weight: data[yarnKey].Weight\n        };\n      }\n      return null;\n    }).filter(Boolean);\n  };\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\n    var _quantities$matchingN;\n    const quantity = (_quantities$matchingN = quantities[matchingName]) === null || _quantities$matchingN === void 0 ? void 0 : _quantities$matchingN[size];\n    if (quantity <= 0) return 0;\n    const row = yarnUsageData.find(row => row.MatchingName === matchingName);\n    const percentage = row ? row[size] : 0;\n    const weight = originalWeight * (1 + percentage / 100) * quantity;\n    return weight > 0 ? weight : 0;\n  };\n\n  // Pre-calculate yarn details whenever quantities change\n  useEffect(() => {\n    if (yarnUsageData.length > 0 && Object.keys(quantities).length > 0) {\n      const updatedData = yarnUsageData.map(data => {\n        const yarns = getNonNullYarns(data);\n        const updatedYarns = yarns.reduce((acc, yarn, index) => {\n          const updatedYarnDetails = {};\n          let totalWeight = 0;\n\n          // Perform calculation for each size based on updated quantities\n          getNonNullSizes(data).forEach(size => {\n            const updatedWeight = calculateUpdatedWeight(yarn.Weight, size, data.MatchingName);\n            updatedYarnDetails[size] = updatedWeight;\n            totalWeight += updatedWeight;\n          });\n\n          // Assign the calculated weight to the yarn\n          acc[`Yarn${index + 1}`] = {\n            YarnId: yarn.YarnId,\n            Weight: totalWeight,\n            ...updatedYarnDetails\n          };\n          return acc;\n        }, {});\n        return {\n          MatchingName: data.MatchingName,\n          UserId: userId,\n          OrderNo: orderNo,\n          ...updatedYarns\n        };\n      });\n      setUpdatedYarnUsageData(updatedData); // Update the state with the pre-calculated data\n    }\n  }, [quantities, yarnUsageData, userId, orderNo]);\n  const addYarnHandler = async () => {\n    if (updatedYarnUsageData.length === 0) {\n      setError(\"No updated yarn usage data available.\");\n      return;\n    }\n    try {\n      for (const data of updatedYarnUsageData) {\n        const orderYarnData = {\n          MatchingName: data.MatchingName,\n          UserId: data.UserId,\n          OrderNo: data.OrderNo,\n          ...Object.keys(data).filter(key => key.startsWith(\"Yarn\")).reduce((acc, key) => {\n            acc[key] = data[key];\n            return acc;\n          }, {})\n        };\n        await addOrderYarn(orderYarnData);\n      }\n      alert(\"Yarn details added successfully!\");\n    } catch (err) {\n      setError(\"Failed to add yarn request.\");\n    }\n  };\n  const addOrderDetailsHandler = async () => {\n    if (!orderNo) {\n      setError(\"Order No is not available.\");\n      return;\n    }\n    try {\n      for (const data of yarnUsageData) {\n        const matchingName = data.MatchingName;\n        const orderDetails = {\n          OrderNo: orderNo,\n          MatchingName: matchingName,\n          UserId: userId,\n          Total: calculateTotalQuantity(matchingName),\n          ...getNonNullSizes(data).reduce((acc, size) => {\n            var _quantities$matchingN2;\n            acc[size] = ((_quantities$matchingN2 = quantities[matchingName]) === null || _quantities$matchingN2 === void 0 ? void 0 : _quantities$matchingN2[size]) || 0;\n            return acc;\n          }, {})\n        };\n        await addOrderDetails(orderDetails);\n      }\n      alert(\"Order details added successfully!\");\n    } catch (err) {\n      setError(\"Failed to add order details.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 21\n  }, this);\n  const nonNullSizes = getNonNullSizes(yarnUsageData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Order Quantity Details for Article No: \", ArticleNo, \" with RSN:\", \" \", (_yarnUsageData$ = yarnUsageData[0]) === null || _yarnUsageData$ === void 0 ? void 0 : _yarnUsageData$.RSN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), yarnUsageData.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Matching Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: yarnUsageData.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.MatchingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), nonNullSizes.map(size => {\n            var _quantities$data$Matc;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: ((_quantities$data$Matc = quantities[data.MatchingName]) === null || _quantities$data$Matc === void 0 ? void 0 : _quantities$data$Matc[size]) || 0,\n                onChange: e => handleQuantityChange(data.MatchingName, size, e.target.value),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: calculateTotalQuantity(data.MatchingName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this)]\n        }, dataIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No yarn usage data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addOrderDetailsHandler,\n      children: \"Add Quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), updatedYarnUsageData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Updated Yarn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Matching Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Yarn ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), nonNullSizes.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: updatedYarnUsageData.map((data, dataIndex) => {\n            const yarnKeys = Object.keys(data).filter(key => key.startsWith(\"Yarn\"));\n            return yarnKeys.map((key, yarnIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [yarnIndex === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: yarnKeys.length,\n                children: data.MatchingName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data[key].YarnId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), nonNullSizes.map(size => {\n                const updatedWeight = data[key][size] || 0;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: updatedWeight && updatedWeight !== 0 ? updatedWeight.toFixed(2) : 0\n                }, `${size}-${yarnIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: nonNullSizes.reduce((total, size) => {\n                  const updatedWeight = data[key][size] || 0;\n                  return total + updatedWeight;\n                }, 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, `${dataIndex}-${yarnIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this));\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addYarnHandler,\n        children: \"Add Yarn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(AddOrderDetails, \"wzfw/Hr+22Vs3KAYfbDhrjr++gI=\", false, function () {\n  return [useSelector];\n});\n_c = AddOrderDetails;\nexport default AddOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"AddOrderDetails\");","map":{"version":3,"names":["React","useState","useEffect","getYarnUsageByArticleNo","getOrderNo","addOrderDetails","addOrderYarn","useSelector","jsxDEV","_jsxDEV","sizes","AddOrderDetails","ArticleNo","_s","_yarnUsageData$","userId","state","user","yarnUsageData","setYarnUsageData","error","setError","loading","setLoading","quantities","setQuantities","updatedYarnUsageData","setUpdatedYarnUsageData","orderNo","setOrderNo","fetchOrderNo","OrderNo","err","fetchYarnUsage","response","success","data","length","getNonNullSizes","Array","isArray","filter","size","some","row","handleQuantityChange","matchingName","value","quantity","parseInt","prev","updatedQuantities","calculateTotalQuantity","quantitiesForMatchingName","reduce","total","getNonNullYarns","from","_","i","_data$yarnKey","yarnKey","YarnId","Weight","Boolean","calculateUpdatedWeight","originalWeight","_quantities$matchingN","find","MatchingName","percentage","weight","Object","keys","updatedData","map","yarns","updatedYarns","acc","yarn","index","updatedYarnDetails","totalWeight","forEach","updatedWeight","UserId","addYarnHandler","orderYarnData","key","startsWith","alert","addOrderDetailsHandler","orderDetails","Total","_quantities$matchingN2","children","fileName","_jsxFileName","lineNumber","columnNumber","nonNullSizes","RSN","border","cellPadding","style","width","marginTop","dataIndex","_quantities$data$Matc","type","onChange","e","target","min","onClick","yarnKeys","yarnIndex","rowSpan","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddOrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getYarnUsageByArticleNo } from \"../API/YarnUsageApi\";\r\nimport { getOrderNo } from \"../API/OrderApi\";\r\nimport { addOrderDetails } from \"../API/OrderDetailsApi\";\r\nimport { addOrderYarn } from \"../API/OrderYarnApi\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst sizes = [\r\n  \"Freesize\",\r\n  \"XS\",\r\n  \"S\",\r\n  \"M\",\r\n  \"L\",\r\n  \"XL\",\r\n  \"2XL\",\r\n  \"3XL\",\r\n  \"4XL\",\r\n  \"5XL\",\r\n];\r\n\r\nconst AddOrderDetails = ({ ArticleNo }) => {\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const [yarnUsageData, setYarnUsageData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [quantities, setQuantities] = useState({});\r\n  const [updatedYarnUsageData, setUpdatedYarnUsageData] = useState([]);\r\n  const [orderNo, setOrderNo] = useState(null);\r\n\r\n  // Fetch Order No on component load\r\n  useEffect(() => {\r\n    const fetchOrderNo = async () => {\r\n      try {\r\n        const { OrderNo } = await getOrderNo();\r\n        setOrderNo(OrderNo);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch Order No.\");\r\n      }\r\n    };\r\n\r\n    fetchOrderNo();\r\n  }, []);\r\n\r\n  // Fetch Yarn Usage data based on ArticleNo\r\n  useEffect(() => {\r\n    const fetchYarnUsage = async () => {\r\n      if (!ArticleNo) return;\r\n      setLoading(true);\r\n      try {\r\n        const response = await getYarnUsageByArticleNo(ArticleNo);\r\n        if (response.success && response.data.length > 0) {\r\n          setYarnUsageData(response.data);\r\n        } else {\r\n          setError(\"No yarn usage data found.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch yarn usage data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchYarnUsage();\r\n  }, [ArticleNo]);\r\n\r\n  const getNonNullSizes = (data) => {\r\n    if (Array.isArray(data)) {\r\n      return sizes.filter((size) => data.some((row) => row[size] !== null));\r\n    }\r\n    return sizes.filter((size) => data[size] !== null);\r\n  };\r\n\r\n  const handleQuantityChange = (matchingName, size, value) => {\r\n    const quantity = parseInt(value) || 0;\r\n    setQuantities((prev) => {\r\n      const updatedQuantities = {\r\n        ...prev,\r\n        [matchingName]: {\r\n          ...prev[matchingName],\r\n          [size]: quantity,\r\n        },\r\n      };\r\n      return updatedQuantities;\r\n    });\r\n  };\r\n\r\n  const calculateTotalQuantity = (matchingName) => {\r\n    const quantitiesForMatchingName = quantities[matchingName] || {};\r\n    return getNonNullSizes(yarnUsageData).reduce(\r\n      (total, size) => total + (quantitiesForMatchingName[size] || 0),\r\n      0\r\n    );\r\n  };\r\n\r\n  const getNonNullYarns = (data) => {\r\n    return Array.from({ length: 15 }, (_, i) => {\r\n      const yarnKey = `Yarn${i + 1}`;\r\n      if (data[yarnKey]?.YarnId) {\r\n        return {\r\n          YarnId: data[yarnKey].YarnId,\r\n          Weight: data[yarnKey].Weight,\r\n        };\r\n      }\r\n      return null;\r\n    }).filter(Boolean);\r\n  };\r\n\r\n  const calculateUpdatedWeight = (originalWeight, size, matchingName) => {\r\n    const quantity = quantities[matchingName]?.[size];\r\n    if (quantity <= 0) return 0;\r\n\r\n    const row = yarnUsageData.find((row) => row.MatchingName === matchingName);\r\n    const percentage = row ? row[size] : 0;\r\n\r\n    const weight = originalWeight * (1 + percentage / 100) * quantity;\r\n    return weight > 0 ? weight : 0;\r\n  };\r\n\r\n  // Pre-calculate yarn details whenever quantities change\r\n  useEffect(() => {\r\n    if (yarnUsageData.length > 0 && Object.keys(quantities).length > 0) {\r\n      const updatedData = yarnUsageData.map((data) => {\r\n        const yarns = getNonNullYarns(data);\r\n        const updatedYarns = yarns.reduce((acc, yarn, index) => {\r\n          const updatedYarnDetails = {};\r\n          let totalWeight = 0;\r\n\r\n          // Perform calculation for each size based on updated quantities\r\n          getNonNullSizes(data).forEach((size) => {\r\n            const updatedWeight = calculateUpdatedWeight(\r\n              yarn.Weight,\r\n              size,\r\n              data.MatchingName\r\n            );\r\n            updatedYarnDetails[size] = updatedWeight;\r\n            totalWeight += updatedWeight;\r\n          });\r\n\r\n          // Assign the calculated weight to the yarn\r\n          acc[`Yarn${index + 1}`] = {\r\n            YarnId: yarn.YarnId,\r\n            Weight: totalWeight,\r\n            ...updatedYarnDetails,\r\n          };\r\n\r\n          return acc;\r\n        }, {});\r\n\r\n        return {\r\n          MatchingName: data.MatchingName,\r\n          UserId: userId,\r\n          OrderNo: orderNo,\r\n          ...updatedYarns,\r\n        };\r\n      });\r\n\r\n      setUpdatedYarnUsageData(updatedData); // Update the state with the pre-calculated data\r\n    }\r\n  }, [quantities, yarnUsageData, userId, orderNo]);\r\n\r\n  const addYarnHandler = async () => {\r\n    if (updatedYarnUsageData.length === 0) {\r\n      setError(\"No updated yarn usage data available.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      for (const data of updatedYarnUsageData) {\r\n        const orderYarnData = {\r\n          MatchingName: data.MatchingName,\r\n          UserId: data.UserId,\r\n          OrderNo: data.OrderNo,\r\n          ...Object.keys(data)\r\n            .filter((key) => key.startsWith(\"Yarn\"))\r\n            .reduce((acc, key) => {\r\n              acc[key] = data[key];\r\n              return acc;\r\n            }, {}),\r\n        };\r\n\r\n        await addOrderYarn(orderYarnData);\r\n      }\r\n\r\n      alert(\"Yarn details added successfully!\");\r\n    } catch (err) {\r\n      setError(\"Failed to add yarn request.\");\r\n    }\r\n  };\r\n\r\n  const addOrderDetailsHandler = async () => {\r\n    if (!orderNo) {\r\n      setError(\"Order No is not available.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      for (const data of yarnUsageData) {\r\n        const matchingName = data.MatchingName;\r\n\r\n        const orderDetails = {\r\n          OrderNo: orderNo,\r\n          MatchingName: matchingName,\r\n          UserId: userId,\r\n          Total: calculateTotalQuantity(matchingName),\r\n          ...getNonNullSizes(data).reduce((acc, size) => {\r\n            acc[size] = quantities[matchingName]?.[size] || 0;\r\n            return acc;\r\n          }, {}),\r\n        };\r\n\r\n        await addOrderDetails(orderDetails);\r\n      }\r\n\r\n      alert(\"Order details added successfully!\");\r\n    } catch (err) {\r\n      setError(\"Failed to add order details.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const nonNullSizes = getNonNullSizes(yarnUsageData);\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Order Quantity Details for Article No: {ArticleNo} with RSN:{\" \"}\r\n        {yarnUsageData[0]?.RSN}\r\n      </h2>\r\n\r\n      {yarnUsageData.length ? (\r\n        <table\r\n          border=\"1\"\r\n          cellPadding=\"10\"\r\n          style={{ width: \"100%\", marginTop: \"20px\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Matching Name</th>\r\n              {nonNullSizes.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {yarnUsageData.map((data, dataIndex) => (\r\n              <tr key={dataIndex}>\r\n                <td>{data.MatchingName}</td>\r\n                {nonNullSizes.map((size) => (\r\n                  <td key={size}>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={quantities[data.MatchingName]?.[size] || 0}\r\n                      onChange={(e) =>\r\n                        handleQuantityChange(\r\n                          data.MatchingName,\r\n                          size,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n                <td>{calculateTotalQuantity(data.MatchingName)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div>No yarn usage data found.</div>\r\n      )}\r\n\r\n      <button onClick={addOrderDetailsHandler}>Add Quantity</button>\r\n\r\n      {updatedYarnUsageData.length > 0 && (\r\n        <div style={{ marginTop: \"30px\" }}>\r\n          <h2>Updated Yarn Details</h2>\r\n          <table\r\n            border=\"1\"\r\n            cellPadding=\"10\"\r\n            style={{ width: \"100%\", marginTop: \"20px\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Matching Name</th>\r\n                <th>Yarn ID</th>\r\n                {nonNullSizes.map((size) => (\r\n                  <th key={size}>{size}</th>\r\n                ))}\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {updatedYarnUsageData.map((data, dataIndex) => {\r\n                const yarnKeys = Object.keys(data).filter((key) =>\r\n                  key.startsWith(\"Yarn\")\r\n                );\r\n                return yarnKeys.map((key, yarnIndex) => (\r\n                  <tr key={`${dataIndex}-${yarnIndex}`}>\r\n                    {yarnIndex === 0 && (\r\n                      <td rowSpan={yarnKeys.length}>{data.MatchingName}</td>\r\n                    )}\r\n                    <td>{data[key].YarnId}</td>\r\n\r\n                    {nonNullSizes.map((size) => {\r\n                      const updatedWeight = data[key][size] || 0;\r\n\r\n                      return (\r\n                        <td key={`${size}-${yarnIndex}`}>\r\n                          {updatedWeight && updatedWeight !== 0\r\n                            ? updatedWeight.toFixed(2)\r\n                            : 0}\r\n                        </td>\r\n                      );\r\n                    })}\r\n\r\n                    <td>\r\n                      {nonNullSizes\r\n                        .reduce((total, size) => {\r\n                          const updatedWeight = data[key][size] || 0;\r\n                          return total + updatedWeight;\r\n                        }, 0)\r\n                        .toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                ));\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <button onClick={addYarnHandler}>Add Yarn Details</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrderDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}