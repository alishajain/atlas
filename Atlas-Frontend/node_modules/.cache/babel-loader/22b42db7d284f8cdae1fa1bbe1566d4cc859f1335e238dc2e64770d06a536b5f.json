{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddColorDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addColorDetail } from '../API/ColorDetailApi'; // Import the addColorDetail function from ColordetailsApi.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddColorDetail = () => {\n  _s();\n  // Define initial state for the form with default values\n  const initialState = {\n    ColorId: '',\n    BaseColor: {\n      name: null,\n      weight: 0\n    },\n    // Base color with subfields name and weight\n    colors: Array(14).fill({\n      name: null,\n      weight: 0\n    }),\n    // Default name is null, weight is 0\n    totalWeight: 0 // Total weight field\n  };\n  const [formData, setFormData] = useState([initialState]);\n\n  // Handle change for input fields (ColorId, BaseColor Name/Weight, and each Color Name/Weight)\n  const handleInputChange = (e, index, field) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedFormData = [...formData];\n    if (field === 'colors') {\n      updatedFormData[index].colors[name] = value;\n    } else if (field === 'BaseColor') {\n      updatedFormData[index].BaseColor[name] = value;\n    } else {\n      updatedFormData[index][name] = value;\n    }\n\n    // Recalculate total weight whenever a weight field is changed\n    if (field === 'colors' && name.includes('weight')) {\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce((sum, color) => {\n        return sum + (parseFloat(color.weight) || 0); // Sum up all color weights, defaulting to 0 if invalid\n      }, 0);\n    }\n\n    // Recalculate total weight for BaseColor\n    if (field === 'BaseColor' && name === 'weight') {\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce((sum, color) => {\n        return sum + (parseFloat(color.weight) || 0);\n      }, 0) + (parseFloat(updatedFormData[index].BaseColor.weight) || 0);\n    }\n    setFormData(updatedFormData);\n  };\n\n  // Handle adding a new row\n  const handleAddRow = () => {\n    setFormData([...formData, initialState]);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data in the expected format\n    const colorData = formData.map(row => {\n      const colors = row.colors.reduce((acc, color, index) => {\n        acc[`Color${index + 1}`] = {\n          name: color.name,\n          weight: color.weight\n        };\n        return acc;\n      }, {});\n      return {\n        ColorId: row.ColorId,\n        BaseColor: row.BaseColor,\n        // Include BaseColor object with name and weight\n        totalWeight: row.totalWeight,\n        // Add totalWeight to the object\n        ...colors // Add Color1, Color2, ... Color14 to the object\n      };\n    });\n    try {\n      // Send the data to the backend via the addColorDetail API call from ColordetailsApi.js\n      const response = await Promise.all(colorData.map(data => addColorDetail(data)));\n      console.log(response); // Log the successful response\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: '100%',\n        tableLayout: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '4%'\n            },\n            children: \"ColorId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '4%'\n            },\n            children: \"Base Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), [...Array(14)].map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '6%'\n            },\n            children: [\"Color \", index + 1]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '4%'\n            },\n            children: \"Total Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: formData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"ColorId\",\n              value: row.ColorId,\n              onChange: e => handleInputChange(e, rowIndex, 'ColorId')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: row.BaseColor.name || '',\n              placeholder: \"Base Color Name\",\n              onChange: e => handleInputChange(e, rowIndex, 'BaseColor')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"weight\",\n              value: row.BaseColor.weight || 0,\n              placeholder: \"Base Color Weight\",\n              onChange: e => handleInputChange(e, rowIndex, 'BaseColor')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), row.colors.map((color, colorIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: colorIndex,\n                value: color.name || '',\n                placeholder: `Color ${colorIndex + 1} Name`,\n                onChange: e => handleInputChange(e, rowIndex, 'colors')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: colorIndex,\n                value: color.weight || 0,\n                placeholder: `Color ${colorIndex + 1} Weight`,\n                onChange: e => handleInputChange(e, rowIndex, 'colors')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)]\n          }, colorIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"totalWeight\",\n              value: row.totalWeight,\n              readOnly: true,\n              style: {\n                backgroundColor: '#f0f0f0'\n              } // Make it read-only\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AddColorDetail, \"wqtfRc/siC9hmCJv9DVsGOGksBc=\");\n_c = AddColorDetail;\nexport default AddColorDetail;\nvar _c;\n$RefreshReg$(_c, \"AddColorDetail\");","map":{"version":3,"names":["React","useState","addColorDetail","jsxDEV","_jsxDEV","AddColorDetail","_s","initialState","ColorId","BaseColor","name","weight","colors","Array","fill","totalWeight","formData","setFormData","handleInputChange","e","index","field","value","target","updatedFormData","includes","reduce","sum","color","parseFloat","handleAddRow","handleSubmit","preventDefault","colorData","map","row","acc","response","Promise","all","data","console","log","error","onSubmit","children","border","style","width","tableLayout","fileName","_jsxFileName","lineNumber","columnNumber","_","rowIndex","type","onChange","placeholder","colorIndex","Fragment","readOnly","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddColorDetails.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { addColorDetail } from '../API/ColorDetailApi'; // Import the addColorDetail function from ColordetailsApi.js\r\n\r\nconst AddColorDetail = () => {\r\n  // Define initial state for the form with default values\r\n  const initialState = {\r\n    ColorId: '',\r\n    BaseColor: { name: null, weight: 0 }, // Base color with subfields name and weight\r\n    colors: Array(14).fill({ name: null, weight: 0 }), // Default name is null, weight is 0\r\n    totalWeight: 0, // Total weight field\r\n  };\r\n\r\n  const [formData, setFormData] = useState([initialState]);\r\n\r\n  // Handle change for input fields (ColorId, BaseColor Name/Weight, and each Color Name/Weight)\r\n  const handleInputChange = (e, index, field) => {\r\n    const { name, value } = e.target;\r\n    const updatedFormData = [...formData];\r\n\r\n    if (field === 'colors') {\r\n      updatedFormData[index].colors[name] = value;\r\n    } else if (field === 'BaseColor') {\r\n      updatedFormData[index].BaseColor[name] = value;\r\n    } else {\r\n      updatedFormData[index][name] = value;\r\n    }\r\n\r\n    // Recalculate total weight whenever a weight field is changed\r\n    if (field === 'colors' && name.includes('weight')) {\r\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce((sum, color) => {\r\n        return sum + (parseFloat(color.weight) || 0); // Sum up all color weights, defaulting to 0 if invalid\r\n      }, 0);\r\n    }\r\n\r\n    // Recalculate total weight for BaseColor\r\n    if (field === 'BaseColor' && name === 'weight') {\r\n      updatedFormData[index].totalWeight = updatedFormData[index].colors.reduce((sum, color) => {\r\n        return sum + (parseFloat(color.weight) || 0);\r\n      }, 0) + (parseFloat(updatedFormData[index].BaseColor.weight) || 0);\r\n    }\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  // Handle adding a new row\r\n  const handleAddRow = () => {\r\n    setFormData([...formData, initialState]);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data in the expected format\r\n    const colorData = formData.map(row => {\r\n      const colors = row.colors.reduce((acc, color, index) => {\r\n        acc[`Color${index + 1}`] = { name: color.name, weight: color.weight };\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        ColorId: row.ColorId,\r\n        BaseColor: row.BaseColor, // Include BaseColor object with name and weight\r\n        totalWeight: row.totalWeight, // Add totalWeight to the object\r\n        ...colors, // Add Color1, Color2, ... Color14 to the object\r\n      };\r\n    });\r\n\r\n    try {\r\n      // Send the data to the backend via the addColorDetail API call from ColordetailsApi.js\r\n      const response = await Promise.all(colorData.map(data => addColorDetail(data)));\r\n      console.log(response); // Log the successful response\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <table border=\"1\" style={{ width: '100%', tableLayout: 'auto' }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: '4%' }}>ColorId</th>\r\n            <th style={{ width: '4%' }}>Base Color</th>\r\n            {/* Color 1 to Color 14 with sub-columns for Name and Weight */}\r\n            {[...Array(14)].map((_, index) => (\r\n              <th key={index} style={{ width: '6%' }}>\r\n                Color {index + 1}\r\n              </th>\r\n            ))}\r\n            <th style={{ width: '4%' }}>Total Weight</th>\r\n          </tr>\r\n          <tr>\r\n            {/* Sub-columns for each color */}\r\n            <th>Name</th>\r\n            <th>Weight</th>\r\n            {/* Sub-columns for BaseColor */}\r\n            <th>Name</th>\r\n            <th>Weight</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {formData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"ColorId\"\r\n                  value={row.ColorId}\r\n                  onChange={(e) => handleInputChange(e, rowIndex, 'ColorId')}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={row.BaseColor.name || ''}\r\n                  placeholder=\"Base Color Name\"\r\n                  onChange={(e) => handleInputChange(e, rowIndex, 'BaseColor')}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"weight\"\r\n                  value={row.BaseColor.weight || 0}\r\n                  placeholder=\"Base Color Weight\"\r\n                  onChange={(e) => handleInputChange(e, rowIndex, 'BaseColor')}\r\n                />\r\n              </td>\r\n\r\n              {/* Loop through Color1 to Color14 */}\r\n              {row.colors.map((color, colorIndex) => (\r\n                <React.Fragment key={colorIndex}>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      name={colorIndex}\r\n                      value={color.name || ''}\r\n                      placeholder={`Color ${colorIndex + 1} Name`}\r\n                      onChange={(e) => handleInputChange(e, rowIndex, 'colors')}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      name={colorIndex}\r\n                      value={color.weight || 0}\r\n                      placeholder={`Color ${colorIndex + 1} Weight`}\r\n                      onChange={(e) => handleInputChange(e, rowIndex, 'colors')}\r\n                    />\r\n                  </td>\r\n                </React.Fragment>\r\n              ))}\r\n\r\n              {/* Total Weight */}\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"totalWeight\"\r\n                  value={row.totalWeight}\r\n                  readOnly\r\n                  style={{ backgroundColor: '#f0f0f0' }} // Make it read-only\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button type=\"button\" onClick={handleAddRow}>Add Row</button>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddColorDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}