{"ast":null,"code":"import React,{useState}from'react';import{useDispatch}from'react-redux';import{useNavigate}from'react-router-dom';import{setUserId}from'../Redux/userSlice';// Action to set the userId in Redux state\nimport{loginUser}from'../API/UserApi';// API call for logging in\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[userId,setUserIdState]=useState('');const[password,setPassword]=useState('');const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);// Loading state to show progress\nconst dispatch=useDispatch();const navigate=useNavigate();// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();// Basic validation for empty fields\nif(!userId||!password){setMessage(\"User ID and Password are required.\");return;}setLoading(true);// Start loading state\ntry{// Make the login API call\nconst data=await loginUser({UserID:userId,Password:password});if(data.success){dispatch(setUserId(userId));// Dispatching the action to store userId\nsetMessage(data.message);navigate('/home');// Navigate to home on success\n}else{setMessage(data.message);// Display error message\n}}catch(error){setMessage(\"An error occurred during login.\");console.error(\"Error during login:\",error);}finally{setLoading(false);// Reset loading state after request is completed\n}};// Navigate to signup page\nconst handleSignupRedirect=()=>{navigate('/signup');};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to ATLAS\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"UserId:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userId,onChange:e=>setUserIdState(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",disabled:loading,children:[loading?\"Logging in...\":\"Login\",\" \"]})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:handleSignupRedirect,className:\"signup-button\",children:\"Don't have an account? Sign Up\"})]});};export default Login;","map":{"version":3,"names":["React","useState","useDispatch","useNavigate","setUserId","loginUser","jsx","_jsx","jsxs","_jsxs","Login","userId","setUserIdState","password","setPassword","message","setMessage","loading","setLoading","dispatch","navigate","handleSubmit","e","preventDefault","data","UserID","Password","success","error","console","handleSignupRedirect","className","children","onSubmit","type","value","onChange","target","required","disabled","onClick"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setUserId } from '../Redux/userSlice'; // Action to set the userId in Redux state\r\nimport { loginUser } from '../API/UserApi'; // API call for logging in\r\n\r\nconst Login = () => {\r\n  const [userId, setUserIdState] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false); // Loading state to show progress\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic validation for empty fields\r\n    if (!userId || !password) {\r\n      setMessage(\"User ID and Password are required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Start loading state\r\n    try {\r\n      // Make the login API call\r\n      const data = await loginUser({ UserID: userId, Password: password });\r\n\r\n      if (data.success) {\r\n        dispatch(setUserId(userId)); // Dispatching the action to store userId\r\n        setMessage(data.message);\r\n        navigate('/home'); // Navigate to home on success\r\n      } else {\r\n        setMessage(data.message); // Display error message\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"An error occurred during login.\");\r\n      console.error(\"Error during login:\", error);\r\n    } finally {\r\n      setLoading(false); // Reset loading state after request is completed\r\n    }\r\n  };\r\n\r\n  // Navigate to signup page\r\n  const handleSignupRedirect = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Welcome to ATLAS</h1>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label>UserId:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userId}\r\n            onChange={(e) => setUserIdState(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login\"} {/* Button shows progress text */}\r\n        </button>\r\n      </form>\r\n      {message && <p>{message}</p>} {/* Display success or error message */}\r\n\r\n      {/* Button to redirect to Signup page */}\r\n      <button onClick={handleSignupRedirect} className=\"signup-button\">\r\n        Don't have an account? Sign Up\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}