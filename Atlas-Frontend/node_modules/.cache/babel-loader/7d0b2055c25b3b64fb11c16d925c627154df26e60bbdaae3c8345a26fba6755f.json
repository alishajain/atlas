{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\ShowKnittingDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getKnittingDetailsByRSN } from \"../API/SampleApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowKnittingDetails = ({\n  RSN\n}) => {\n  _s();\n  const [knittingData, setKnittingData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (RSN) {\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const response = await getKnittingDetailsByRSN(RSN);\n          setKnittingData(response); // Set the data\n        } catch (err) {\n          setError(\"Failed to fetch knitting details.\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }\n  }, [RSN]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Knitting Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), knittingData && knittingData.length > 0 ? knittingData.map((dataRow, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Details for RSN: \", dataRow.RSN]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"100%\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(dataRow).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: typeof value === \"object\" ? JSON.stringify(value) : value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No relevant data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowKnittingDetails, \"obRk0jq9K2NmhC4IaCFqDOntjfc=\");\n_c = ShowKnittingDetails;\nexport default ShowKnittingDetails;\nvar _c;\n$RefreshReg$(_c, \"ShowKnittingDetails\");","map":{"version":3,"names":["React","useState","useEffect","getKnittingDetailsByRSN","jsxDEV","_jsxDEV","ShowKnittingDetails","RSN","_s","knittingData","setKnittingData","loading","setLoading","error","setError","fetchData","response","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","dataRow","index","border","width","marginTop","Object","entries","key","value","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/ShowKnittingDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getKnittingDetailsByRSN } from \"../API/SampleApi\";\r\n\r\nconst ShowKnittingDetails = ({ RSN }) => {\r\n  const [knittingData, setKnittingData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (RSN) {\r\n      const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n          const response = await getKnittingDetailsByRSN(RSN);\r\n          setKnittingData(response); // Set the data\r\n        } catch (err) {\r\n          setError(\"Failed to fetch knitting details.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [RSN]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Knitting Details</h1>\r\n      {knittingData && knittingData.length > 0 ? (\r\n        knittingData.map((dataRow, index) => (\r\n          <div key={index}>\r\n            <h2>Details for RSN: {dataRow.RSN}</h2>\r\n            <table border=\"1\" style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Field</th>\r\n                  <th>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(dataRow).map(([key, value]) => (\r\n                  <tr key={key}>\r\n                    <td>{key}</td>\r\n                    <td>{typeof value === \"object\" ? JSON.stringify(value) : value}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No relevant data available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowKnittingDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}