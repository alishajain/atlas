{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\AddYarnDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addYarnDetails } from \"../API/YarnApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddYarnDetails = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    YarnType: \"\",\n    YarnCount: \"\",\n    ColorName: \"\",\n    ColorCode: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [id]: value\n    }));\n  };\n  const validateForm = () => {\n    const {\n      YarnType,\n      YarnCount,\n      ColorName,\n      ColorCode\n    } = formData;\n    return YarnType, YarnCount, ColorName, ColorCode;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      setMessage(\"All fields are required.\");\n      return;\n    }\n    const {\n      YarnType,\n      YarnCount,\n      ColorName,\n      ColorCode\n    } = formData;\n    const data = {\n      YarnType,\n      YarnCount,\n      ColorName,\n      ColorCode\n    };\n    try {\n      setLoading(true);\n      const result = await addYarnDetails(data);\n      setMessage(result.message || \"Yarn details added successfully.\");\n    } catch (error) {\n      setMessage(error.message || \"An error occurred while adding the yarn details.\");\n    } finally {\n      setLoading(false);\n    }\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Yarn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: [key.replace(/([A-Z])/g, \" $1\").toUpperCase(), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            type: \"text\",\n            value: formData[key],\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AddYarnDetails, \"lHTpJ0i5QWrTwafxSRJNr0Pg0jM=\");\n_c = AddYarnDetails;\nexport default AddYarnDetails;\nvar _c;\n$RefreshReg$(_c, \"AddYarnDetails\");","map":{"version":3,"names":["React","useState","addYarnDetails","jsxDEV","_jsxDEV","AddYarnDetails","_s","formData","setFormData","YarnType","YarnCount","ColorName","ColorCode","message","setMessage","loading","setLoading","handleChange","e","id","value","target","prevData","validateForm","handleSubmit","preventDefault","data","result","error","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","replace","toUpperCase","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/AddYarnDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addYarnDetails } from \"../API/YarnApi\";\r\n\r\nconst AddYarnDetails = () => {\r\n  const [formData, setFormData] = useState({\r\n    YarnType: \"\",\r\n    YarnCount: \"\",\r\n    ColorName: \"\",\r\n    ColorCode: \"\"\r\n  });\r\n  \r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [id]: value,\r\n    }));\r\n  }; \r\n\r\n  const validateForm = () => {\r\n    const {\r\n      YarnType,\r\n      YarnCount,\r\n      ColorName,\r\n      ColorCode\r\n    } = formData;\r\n\r\n    return (\r\n      YarnType,\r\n      YarnCount,\r\n      ColorName,\r\n      ColorCode\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    const { YarnType,YarnCount, ColorName, ColorCode } = formData;\r\n\r\n    const data = {\r\n      YarnType,\r\n      YarnCount,\r\n      ColorName,\r\n      ColorCode\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await addYarnDetails(data);\r\n      setMessage(result.message || \"Yarn details added successfully.\");\r\n    } catch (error) {\r\n      setMessage(error.message || \"An error occurred while adding the yarn details.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n          <h2>Add Yarn Details</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            {Object.keys(formData).map((key) => (\r\n              <div key={key}>\r\n                <label htmlFor={key}>{key.replace(/([A-Z])/g, \" $1\").toUpperCase()}:</label>\r\n                <input\r\n                  id={key}\r\n                  type=\"text\"\r\n                  value={formData[key]}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            ))}\r\n            <button type=\"submit\" disabled={loading}>\r\n              Add New\r\n            </button>\r\n          </form>\r\n          {loading && <p>Loading...</p>}\r\n          {message && <p>{message}</p>}\r\n          \r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddYarnDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}