{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { loginUser, registerUser } from '../API/UserApi';\n\n// Async action for logging in\nexport const login = createAsyncThunk('user/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await loginUser(credentials); // Call your login API\n    return response; // Success payload (login data)\n  } catch (error) {\n    return rejectWithValue(error); // Error payload (error message)\n  }\n});\n\n// Async action for signing up\nexport const signup = createAsyncThunk('user/signup', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await registerUser(userData); // Call your signup API\n    return response; // Success payload (signup data)\n  } catch (error) {\n    return rejectWithValue(error); // Error payload (error message)\n  }\n});\n\n// Create the user slice of the state\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userId: '',\n    // Initial state for the userId\n    loading: false,\n    // To track the loading state\n    error: '' // To track any errors during login/signup\n  },\n  reducers: {\n    // Action to set userId\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n    // Action to clear userId (for logout functionality)\n    logout: state => {\n      state.userId = '';\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = '';\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Handle login\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = ''; // Reset error when starting the request\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userId = action.payload.UserID; // Set userId on successful login\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message || 'Login failed'; // Handle error\n    })\n\n    // Handle signup\n    .addCase(signup.pending, state => {\n      state.loading = true;\n      state.error = ''; // Reset error when starting the request\n    }).addCase(signup.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userId = action.payload.UserID; // Set userId on successful signup\n    }).addCase(signup.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message || 'Signup failed'; // Handle error\n    });\n  }\n});\n\n// Export the action creators\nexport const {\n  setUserId,\n  logout,\n  setError,\n  clearError\n} = userSlice.actions;\n\n// Export the reducer to be included in the store\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","registerUser","login","credentials","rejectWithValue","response","error","signup","userData","userSlice","name","initialState","userId","loading","reducers","setUserId","state","action","payload","logout","setError","clearError","extraReducers","builder","addCase","pending","fulfilled","UserID","rejected","message","actions","reducer"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Redux/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { loginUser, registerUser } from '../API/UserApi';\r\n\r\n// Async action for logging in\r\nexport const login = createAsyncThunk(\r\n  'user/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await loginUser(credentials); // Call your login API\r\n      return response; // Success payload (login data)\r\n    } catch (error) {\r\n      return rejectWithValue(error); // Error payload (error message)\r\n    }\r\n  }\r\n);\r\n\r\n// Async action for signing up\r\nexport const signup = createAsyncThunk(\r\n  'user/signup',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await registerUser(userData); // Call your signup API\r\n      return response; // Success payload (signup data)\r\n    } catch (error) {\r\n      return rejectWithValue(error); // Error payload (error message)\r\n    }\r\n  }\r\n);\r\n\r\n// Create the user slice of the state\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    userId: '', // Initial state for the userId\r\n    loading: false, // To track the loading state\r\n    error: '', // To track any errors during login/signup\r\n  },\r\n  reducers: {\r\n    // Action to set userId\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    // Action to clear userId (for logout functionality)\r\n    logout: (state) => {\r\n      state.userId = '';\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Handle login\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = ''; // Reset error when starting the request\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userId = action.payload.UserID; // Set userId on successful login\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message || 'Login failed'; // Handle error\r\n      })\r\n\r\n      // Handle signup\r\n      .addCase(signup.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = ''; // Reset error when starting the request\r\n      })\r\n      .addCase(signup.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userId = action.payload.UserID; // Set userId on successful signup\r\n      })\r\n      .addCase(signup.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload.message || 'Signup failed'; // Handle error\r\n      });\r\n  },\r\n});\r\n\r\n// Export the action creators\r\nexport const { setUserId, logout, setError, clearError } = userSlice.actions;\r\n\r\n// Export the reducer to be included in the store\r\nexport default userSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}