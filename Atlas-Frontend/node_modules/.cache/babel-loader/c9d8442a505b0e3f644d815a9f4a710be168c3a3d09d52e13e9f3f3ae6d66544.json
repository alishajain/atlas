{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhupesh\\\\OneDrive\\\\Desktop\\\\Alisha\\\\atlas\\\\Atlas-Frontend\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { setUserId } from '../Redux/userSlice'; // Import setUserId action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); // Hook to navigate after login\n\n  // Get userId from Redux store\n  const userId = useSelector(state => state.user.userId);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          password\n        }) // userId comes from Redux\n      });\n\n      // Check if the response is successful\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${response.status}, ${errorText}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        dispatch(setUserId(userId)); // Store userId in Redux after successful login\n        setMessage(data.message);\n        navigate('/home'); // Navigate to home page after login\n      } else {\n        setMessage(data.message);\n      }\n    } catch (error) {\n      setMessage('Error connecting to the server.');\n      console.error(error);\n    }\n  };\n  const handleUserIdChange = e => {\n    // Dispatch the userId to the Redux store on change\n    dispatch(setUserId(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"UserId:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userId // Use userId from Redux store\n          ,\n          onChange: handleUserIdChange // Dispatch the change to Redux\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"pLSyCTXhC1ynAzF7eFkhCwedJXY=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","setUserId","jsxDEV","_jsxDEV","Login","_s","password","setPassword","message","setMessage","dispatch","navigate","userId","state","user","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","status","data","json","success","error","console","handleUserIdChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Bhupesh/OneDrive/Desktop/Alisha/atlas/Atlas-Frontend/src/Components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport { setUserId } from '../Redux/userSlice'; // Import setUserId action\r\n\r\nconst Login = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate(); // Hook to navigate after login\r\n\r\n  // Get userId from Redux store\r\n  const userId = useSelector((state) => state.user.userId); \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId, password }), // userId comes from Redux\r\n      });\r\n\r\n      // Check if the response is successful\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server error: ${response.status}, ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        dispatch(setUserId(userId)); // Store userId in Redux after successful login\r\n        setMessage(data.message);\r\n        navigate('/home'); // Navigate to home page after login\r\n      } else {\r\n        setMessage(data.message);\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error connecting to the server.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleUserIdChange = (e) => {\r\n    // Dispatch the userId to the Redux store on change\r\n    dispatch(setUserId(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label>UserId:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userId} // Use userId from Redux store\r\n            onChange={handleUserIdChange} // Dispatch the change to Redux\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}